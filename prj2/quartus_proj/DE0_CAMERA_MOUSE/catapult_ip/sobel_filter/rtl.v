// ----------------------------------------------------------------------
//  HLS HDL:        Verilog Netlister
//  HLS Version:    2011a.126 Production Release
//  HLS Date:       Wed Aug  8 00:52:07 PDT 2012
// 
//  Generated by:   al3515@EEWS104A-006
//  Generated date: Tue Mar 15 16:20:15 2016
// ----------------------------------------------------------------------

// 
// ------------------------------------------------------------------
//  Design Unit:    mean_vga_core
// ------------------------------------------------------------------


module mean_vga_core (
  clk, en, arst_n, vin_rsc_mgc_in_wire_d, vout_rsc_mgc_out_stdreg_d
);
  input clk;
  input en;
  input arst_n;
  input [89:0] vin_rsc_mgc_in_wire_d;
  output [29:0] vout_rsc_mgc_out_stdreg_d;
  reg [29:0] vout_rsc_mgc_out_stdreg_d;


  // Interconnect Declarations
  wire [4:0] sqrt_for_acc_1_tmp;
  wire [5:0] nl_sqrt_for_acc_1_tmp;
  wire and_dcpl_31;
  reg [18:0] FRAME_p_1_lpi_1;
  reg [89:0] regs_regs_1_sva;
  reg [89:0] regs_regs_0_sva;
  reg exit_FRAME_1_sva;
  reg exit_FRAME_lpi_1_dfm_1;
  reg [4:0] sqrt_for_acc_1_psp;
  reg exit_sqrt_for_lpi_1_dfm_3;
  reg sqrt_r_1_lpi_1_dfm_1;
  reg sqrt_mask_d_sg7_1_lpi_1_dfm_1;
  reg sqrt_mask_d_sg6_1_lpi_1_dfm_1;
  reg sqrt_mask_d_sg5_1_lpi_1_dfm_1;
  reg sqrt_mask_d_sg4_1_lpi_1_dfm_1;
  reg sqrt_mask_d_sg3_1_lpi_1_dfm_1;
  reg sqrt_mask_d_sg2_1_lpi_1_dfm_1;
  reg sqrt_mask_d_sg1_1_lpi_1_dfm_1;
  reg [1:0] sqrt_for_ac_int_cctor_1_sg5_sva_1;
  reg [1:0] sqrt_for_ac_int_cctor_1_sg6_sva_1;
  reg [1:0] sqrt_for_ac_int_cctor_1_sg7_sva_1;
  reg [1:0] sqrt_for_ac_int_cctor_1_sg8_sva_1;
  reg [1:0] sqrt_d_sg4_sva_3;
  reg [1:0] sqrt_d_sg3_sva_3;
  reg [1:0] sqrt_d_sg2_sva_3;
  reg [1:0] sqrt_d_sg1_sva_3;
  reg [12:0] ACC1_if_2_acc_45_itm_1;
  wire [13:0] nl_ACC1_if_2_acc_45_itm_1;
  reg [12:0] ACC1_if_2_acc_44_itm_1;
  wire [13:0] nl_ACC1_if_2_acc_44_itm_1;
  reg [12:0] ACC1_if_acc_52_itm_1;
  wire [13:0] nl_ACC1_if_acc_52_itm_1;
  reg [12:0] ACC1_if_acc_51_itm_1;
  wire [13:0] nl_ACC1_if_acc_51_itm_1;
  reg sqrt_for_and_8_itm_1;
  reg main_stage_0_2;
  reg [1:0] sqrt_z_lpi_1_sg16;
  reg [1:0] sqrt_z_lpi_1_sg15;
  reg [1:0] sqrt_z_lpi_1_sg14;
  reg [1:0] sqrt_z_lpi_1_sg13;
  reg [1:0] sqrt_z_lpi_1_sg12;
  reg [1:0] sqrt_z_lpi_1_sg11;
  reg [1:0] sqrt_z_lpi_1_sg10;
  reg [1:0] sqrt_z_lpi_1_sg9;
  reg [1:0] sqrt_z_lpi_1_dfm_sg7;
  reg [1:0] sqrt_z_lpi_1_dfm_sg6;
  reg [1:0] sqrt_z_lpi_1_dfm_sg5;
  reg [1:0] sqrt_z_lpi_1_dfm_sg4;
  reg [1:0] sqrt_z_lpi_1_dfm_sg3;
  reg [1:0] sqrt_z_lpi_1_dfm_sg2;
  reg [1:0] sqrt_z_lpi_1_dfm_sg1;
  reg [1:0] sqrt_z_lpi_1_dfm_1;
  wire and_cse;
  wire exit_sqrt_for_lpi_1_dfm_4;
  wire [18:0] FRAME_p_1_sva_1;
  wire [19:0] nl_FRAME_p_1_sva_1;
  wire and_cse_1;
  wire and_51_cse;
  wire [18:0] sqrt_for_t_sva_1;
  wire [32:0] sqrt_z_sva_2;
  wire [33:0] nl_sqrt_z_sva_2;
  wire or_tmp;
  wire and_67_tmp;
  wire [19:0] sqrt_for_t_acc_1_itm;
  wire [20:0] nl_sqrt_for_t_acc_1_itm;
  wire sqrt_mask_d_sg6_1_lpi_1_dfm;
  wire sqrt_mask_d_sg1_1_lpi_1_dfm;
  wire sqrt_mask_d_sg5_1_lpi_1_dfm;
  wire sqrt_mask_d_sg2_1_lpi_1_dfm;
  wire sqrt_mask_d_sg4_1_lpi_1_dfm;
  wire sqrt_mask_d_sg3_1_lpi_1_dfm;
  wire sqrt_mask_d_sg7_1_lpi_1_dfm;
  wire [11:0] acc_4_psp_sva;
  wire [12:0] nl_acc_4_psp_sva;
  wire [11:0] acc_4_psp_1_sva;
  wire [12:0] nl_acc_4_psp_1_sva;
  wire [11:0] ACC1_acc_10_psp_sva;
  wire [12:0] nl_ACC1_acc_10_psp_sva;
  wire [3:0] acc_5_psp_sva;
  wire [4:0] nl_acc_5_psp_sva;
  wire [2:0] acc_imod_4_sva;
  wire [3:0] nl_acc_imod_4_sva;
  wire [3:0] acc_5_psp_1_sva;
  wire [4:0] nl_acc_5_psp_1_sva;
  wire [2:0] acc_imod_11_sva;
  wire [3:0] nl_acc_imod_11_sva;
  wire [11:0] ACC1_if_acc_2_psp_sva;
  wire [12:0] nl_ACC1_if_acc_2_psp_sva;
  wire [11:0] ACC1_acc_10_psp_1_sva;
  wire [12:0] nl_ACC1_acc_10_psp_1_sva;
  wire [11:0] ACC1_acc_8_psp_sva;
  wire [12:0] nl_ACC1_acc_8_psp_sva;
  wire [11:0] acc_psp_2_sva;
  wire [12:0] nl_acc_psp_2_sva;
  wire [11:0] acc_8_psp_2_sva;
  wire [12:0] nl_acc_8_psp_2_sva;
  wire [2:0] acc_imod_10_sva;
  wire [3:0] nl_acc_imod_10_sva;
  wire [3:0] acc_9_psp_2_sva;
  wire [4:0] nl_acc_9_psp_2_sva;
  wire [2:0] acc_imod_14_sva;
  wire [3:0] nl_acc_imod_14_sva;
  wire [3:0] acc_1_psp_2_sva;
  wire [4:0] nl_acc_1_psp_2_sva;
  wire [11:0] acc_8_psp_sva;
  wire [12:0] nl_acc_8_psp_sva;
  wire [2:0] acc_imod_7_sva;
  wire [3:0] nl_acc_imod_7_sva;
  wire [3:0] acc_9_psp_sva;
  wire [4:0] nl_acc_9_psp_sva;
  wire [11:0] acc_psp_sva;
  wire [12:0] nl_acc_psp_sva;
  wire [2:0] acc_imod_1_sva;
  wire [3:0] nl_acc_imod_1_sva;
  wire [3:0] acc_1_psp_sva;
  wire [4:0] nl_acc_1_psp_sva;
  wire [11:0] acc_psp_1_sva;
  wire [12:0] nl_acc_psp_1_sva;
  wire [2:0] acc_imod_9_sva;
  wire [3:0] nl_acc_imod_9_sva;
  wire [3:0] acc_1_psp_1_sva;
  wire [4:0] nl_acc_1_psp_1_sva;
  wire [11:0] acc_8_psp_1_sva;
  wire [12:0] nl_acc_8_psp_1_sva;
  wire [2:0] acc_imod_13_sva;
  wire [3:0] nl_acc_imod_13_sva;
  wire [3:0] acc_9_psp_1_sva;
  wire [4:0] nl_acc_9_psp_1_sva;
  wire exit_FRAME_lpi_1_dfm_1_mx0;
  wire [18:0] FRAME_p_1_lpi_1_dfm;
  reg [13:0] reg_sqrt_r_slc_sqrt_r_sg1_7_itm_1_tmp;
  reg reg_sqrt_r_slc_sqrt_r_sg1_7_itm_1_tmp_1;
  wire [13:0] ACC1_if_2_acc_itm;
  wire [14:0] nl_ACC1_if_2_acc_itm;
  wire [13:0] ACC1_if_acc_itm;
  wire [14:0] nl_ACC1_if_acc_itm;

  wire[1:0] mux_3_nl;
  wire[4:0] sqrt_for_mux_38_nl;

  // Interconnect Declarations for Component Instantiations 
  assign and_cse_1 = (~ exit_sqrt_for_lpi_1_dfm_3) & main_stage_0_2;
  assign and_51_cse = exit_sqrt_for_lpi_1_dfm_3 & main_stage_0_2;
  assign or_tmp = ((~ main_stage_0_2) & (sqrt_for_t_sva_1[18])) | exit_sqrt_for_lpi_1_dfm_4;
  assign and_67_tmp = main_stage_0_2 & (~ exit_sqrt_for_lpi_1_dfm_3);
  assign nl_sqrt_z_sva_2 = conv_u2u_32_33(conv_u2u_64_32(conv_u2u_16_32({{2{ACC1_if_2_acc_itm[13]}},
      ACC1_if_2_acc_itm}) * conv_u2u_16_32({{2{ACC1_if_2_acc_itm[13]}}, ACC1_if_2_acc_itm})))
      + conv_u2u_32_33(conv_u2u_64_32(conv_u2u_16_32({{2{ACC1_if_acc_itm[13]}}, ACC1_if_acc_itm})
      * conv_u2u_16_32({{2{ACC1_if_acc_itm[13]}}, ACC1_if_acc_itm})));
  assign sqrt_z_sva_2 = nl_sqrt_z_sva_2[32:0];
  assign mux_3_nl = MUX_v_2_2_2({sqrt_z_lpi_1_sg16 , ({1'b0 , (sqrt_z_sva_2[32])})},
      exit_sqrt_for_lpi_1_dfm_3);
  assign nl_sqrt_for_t_acc_1_itm = ({sqrt_for_and_8_itm_1 , sqrt_for_ac_int_cctor_1_sg8_sva_1
      , sqrt_for_ac_int_cctor_1_sg7_sva_1 , sqrt_for_ac_int_cctor_1_sg6_sva_1 , sqrt_for_ac_int_cctor_1_sg5_sva_1
      , sqrt_d_sg4_sva_3 , sqrt_d_sg3_sva_3 , sqrt_d_sg2_sva_3 , sqrt_d_sg1_sva_3
      , (mux_3_nl) , 1'b1}) + ({1'b1 , (~ reg_sqrt_r_slc_sqrt_r_sg1_7_itm_1_tmp)
      , (~ reg_sqrt_r_slc_sqrt_r_sg1_7_itm_1_tmp_1) , (~ sqrt_r_1_lpi_1_dfm_1) ,
      3'b101});
  assign sqrt_for_t_acc_1_itm = nl_sqrt_for_t_acc_1_itm[19:0];
  assign sqrt_for_t_sva_1 = (sqrt_for_t_acc_1_itm[19:1]) & ({{18{main_stage_0_2}},
      main_stage_0_2});
  assign exit_sqrt_for_lpi_1_dfm_4 = (sqrt_for_acc_1_psp[4]) | exit_FRAME_1_sva;
  assign sqrt_for_mux_38_nl = MUX_v_5_2_2({sqrt_for_acc_1_psp , 5'b10000}, exit_sqrt_for_lpi_1_dfm_4);
  assign nl_sqrt_for_acc_1_tmp = (sqrt_for_mux_38_nl) + 5'b11111;
  assign sqrt_for_acc_1_tmp = nl_sqrt_for_acc_1_tmp[4:0];
  assign sqrt_mask_d_sg6_1_lpi_1_dfm = sqrt_mask_d_sg5_1_lpi_1_dfm_1 & (~ exit_sqrt_for_lpi_1_dfm_4);
  assign sqrt_mask_d_sg1_1_lpi_1_dfm = ~(exit_sqrt_for_lpi_1_dfm_3 | exit_sqrt_for_lpi_1_dfm_4);
  assign sqrt_mask_d_sg5_1_lpi_1_dfm = sqrt_mask_d_sg4_1_lpi_1_dfm_1 & (~ exit_sqrt_for_lpi_1_dfm_4);
  assign sqrt_mask_d_sg2_1_lpi_1_dfm = sqrt_mask_d_sg1_1_lpi_1_dfm_1 & (~ exit_sqrt_for_lpi_1_dfm_4);
  assign sqrt_mask_d_sg4_1_lpi_1_dfm = sqrt_mask_d_sg3_1_lpi_1_dfm_1 & (~ exit_sqrt_for_lpi_1_dfm_4);
  assign sqrt_mask_d_sg3_1_lpi_1_dfm = sqrt_mask_d_sg2_1_lpi_1_dfm_1 & (~ exit_sqrt_for_lpi_1_dfm_4);
  assign sqrt_mask_d_sg7_1_lpi_1_dfm = sqrt_mask_d_sg6_1_lpi_1_dfm_1 & (~ exit_sqrt_for_lpi_1_dfm_4);
  assign nl_acc_4_psp_sva = conv_u2u_11_12(conv_u2u_10_11(regs_regs_1_sva[49:40])
      + conv_u2u_10_11(regs_regs_1_sva[39:30])) + conv_u2u_10_12(regs_regs_1_sva[59:50]);
  assign acc_4_psp_sva = nl_acc_4_psp_sva[11:0];
  assign nl_acc_4_psp_1_sva = conv_u2u_11_12(conv_u2u_10_11(vin_rsc_mgc_in_wire_d[49:40])
      + conv_u2u_10_11(vin_rsc_mgc_in_wire_d[39:30])) + conv_u2u_10_12(vin_rsc_mgc_in_wire_d[59:50]);
  assign acc_4_psp_1_sva = nl_acc_4_psp_1_sva[11:0];
  assign nl_ACC1_acc_10_psp_sva = conv_u2s_10_12({(acc_8_psp_sva[11]) , (conv_u2u_8_9({(acc_8_psp_sva[11])
      , 1'b0 , (acc_8_psp_sva[11]) , 1'b0 , (acc_8_psp_sva[11]) , 1'b0 , (signext_2_1(acc_8_psp_sva[7]))})
      + conv_u2u_8_9(readslicef_9_8_1((({(acc_8_psp_sva[9]) , 1'b0 , (acc_8_psp_sva[9])
      , 1'b0 , (acc_8_psp_sva[9]) , 1'b0 , (signext_2_1(acc_8_psp_sva[5])) , 1'b1})
      + conv_u2u_8_9({(readslicef_8_7_1((conv_u2u_7_8({(acc_8_psp_sva[7]) , 1'b0
      , (acc_8_psp_sva[5]) , 1'b0 , (signext_2_1(acc_8_psp_sva[9])) , 1'b1}) + conv_u2u_6_8({(acc_8_psp_sva[6])
      , 1'b0 , (acc_8_psp_sva[6]) , 1'b0 , (acc_8_psp_sva[6]) , (acc_imod_7_sva[1])}))))
      , (~ (readslicef_3_1_2((({1'b1 , (acc_imod_7_sva[0]) , 1'b1}) + conv_u2s_2_3({(~
      (acc_imod_7_sva[1])) , (~ (acc_imod_7_sva[2]))})))))})))))}) + conv_s2s_10_12(conv_u2s_9_10({(acc_8_psp_sva[10])
      , 1'b0 , (acc_8_psp_sva[10]) , 1'b0 , (acc_8_psp_sva[10]) , 1'b0 , (acc_8_psp_sva[10])
      , 1'b0 , (acc_8_psp_sva[10])}) + conv_s2s_8_10(readslicef_9_8_1((conv_u2s_8_9({(acc_8_psp_sva[8])
      , 1'b0 , (acc_8_psp_sva[8]) , 1'b0 , (acc_8_psp_sva[8]) , 1'b0 , (acc_8_psp_sva[8])
      , 1'b1}) + conv_s2s_7_9({(readslicef_7_6_1((conv_s2s_5_7({(readslicef_5_4_1((conv_s2s_4_5({(readslicef_4_3_1((conv_u2s_3_4({(acc_8_psp_sva[3])
      , (acc_8_psp_sva[1]) , 1'b1}) + conv_s2s_3_4({1'b1 , (acc_8_psp_sva[2]) , (acc_8_psp_sva[3])}))))
      , 1'b1}) + conv_s2s_3_5({(acc_9_psp_sva[3:2]) , (acc_8_psp_sva[4])})))) , 1'b1})
      + conv_u2s_5_7({(acc_8_psp_sva[7]) , (acc_8_psp_sva[4]) , (signext_2_1(acc_8_psp_sva[11]))
      , (acc_9_psp_sva[1])})))) , (~ (acc_imod_7_sva[2]))})))));
  assign ACC1_acc_10_psp_sva = nl_ACC1_acc_10_psp_sva[11:0];
  assign nl_acc_5_psp_sva = (readslicef_5_4_1((conv_u2u_4_5({(readslicef_4_3_1((conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~
      (acc_4_psp_sva[3])) , 1'b1}) + conv_u2u_2_3({(acc_4_psp_sva[4]) , (acc_4_psp_sva[8])}))))
      , 1'b1}) + conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~ (acc_4_psp_sva[5]))
      , 1'b1}) + conv_u2u_2_3({(acc_4_psp_sva[6]) , (~ (acc_4_psp_sva[7]))})))) ,
      (acc_4_psp_sva[10])})))) , 1'b1}) + conv_u2u_3_5({(readslicef_3_2_1((conv_u2u_2_3({(~
      (acc_4_psp_sva[1])) , 1'b1}) + conv_u2u_2_3({(acc_4_psp_sva[2]) , (~ (acc_4_psp_sva[9]))}))))
      , (~ (acc_4_psp_sva[11]))})))) + ({3'b101 , (acc_4_psp_sva[0])});
  assign acc_5_psp_sva = nl_acc_5_psp_sva[3:0];
  assign nl_acc_imod_4_sva = conv_s2s_2_3(conv_s2s_1_2(acc_5_psp_sva[1]) + conv_u2s_1_2(acc_5_psp_sva[0]))
      + conv_s2s_2_3(acc_5_psp_sva[3:2]);
  assign acc_imod_4_sva = nl_acc_imod_4_sva[2:0];
  assign nl_acc_5_psp_1_sva = (readslicef_5_4_1((conv_u2u_4_5({(readslicef_4_3_1((conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~
      (acc_4_psp_1_sva[3])) , 1'b1}) + conv_u2u_2_3({(acc_4_psp_1_sva[4]) , (acc_4_psp_1_sva[8])}))))
      , 1'b1}) + conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~ (acc_4_psp_1_sva[5]))
      , 1'b1}) + conv_u2u_2_3({(acc_4_psp_1_sva[6]) , (~ (acc_4_psp_1_sva[7]))}))))
      , (acc_4_psp_1_sva[10])})))) , 1'b1}) + conv_u2u_3_5({(readslicef_3_2_1((conv_u2u_2_3({(~
      (acc_4_psp_1_sva[1])) , 1'b1}) + conv_u2u_2_3({(acc_4_psp_1_sva[2]) , (~ (acc_4_psp_1_sva[9]))}))))
      , (~ (acc_4_psp_1_sva[11]))})))) + ({3'b101 , (acc_4_psp_1_sva[0])});
  assign acc_5_psp_1_sva = nl_acc_5_psp_1_sva[3:0];
  assign nl_acc_imod_11_sva = conv_s2s_2_3(conv_s2s_1_2(acc_5_psp_1_sva[1]) + conv_u2s_1_2(acc_5_psp_1_sva[0]))
      + conv_s2s_2_3(acc_5_psp_1_sva[3:2]);
  assign acc_imod_11_sva = nl_acc_imod_11_sva[2:0];
  assign nl_ACC1_if_acc_2_psp_sva = conv_s2s_11_12({1'b1 , (conv_u2s_9_10({(acc_psp_1_sva[11])
      , 1'b0 , (acc_psp_1_sva[11]) , 1'b0 , (signext_2_1(acc_psp_1_sva[11])) , 2'b0
      , (acc_imod_9_sva[2])}) + ({1'b1 , (readslicef_10_9_1((({(acc_psp_1_sva[9])
      , 1'b0 , (acc_psp_1_sva[9]) , 1'b0 , (signext_2_1(acc_psp_1_sva[9])) , 2'b0
      , (acc_psp_1_sva[3]) , 1'b1}) + conv_s2s_9_10({1'b1 , (readslicef_8_7_1((conv_u2s_7_8({4'b1010
      , (signext_2_1(~ (acc_psp_1_sva[7]))) , 1'b1}) + conv_s2s_7_8({(readslicef_7_6_1((conv_s2s_5_7({(readslicef_5_4_1((conv_s2s_3_5({(~
      (acc_1_psp_1_sva[3:2])) , 1'b1}) + conv_u2s_3_5(signext_3_2({(~ (acc_psp_1_sva[9]))
      , (~ (acc_psp_1_sva[1]))}))))) , 1'b1}) + conv_u2s_5_7({(~ (acc_psp_1_sva[7]))
      , (~ (acc_psp_1_sva[3])) , (signext_2_1(~ (acc_psp_1_sva[11]))) , (~ (acc_psp_1_sva[2]))}))))
      , (~ (acc_1_psp_1_sva[1]))})))) , (readslicef_3_1_2((({1'b1 , (acc_imod_9_sva[0])
      , 1'b1}) + conv_u2s_2_3({(~ (acc_imod_9_sva[1])) , (~ (acc_imod_9_sva[2]))}))))}))))}))})
      + conv_s2s_10_12(({(acc_psp_1_sva[10]) , 1'b0 , (acc_psp_1_sva[10]) , 1'b0
      , (acc_psp_1_sva[10]) , 1'b0 , (acc_psp_1_sva[10]) , 1'b0 , (signext_2_1(acc_psp_1_sva[10]))})
      + conv_s2s_8_10(readslicef_9_8_1((({(readslicef_9_8_1((conv_s2s_7_9({(acc_psp_1_sva[6])
      , 1'b0 , (acc_psp_1_sva[6]) , 1'b0 , (signext_2_1(acc_psp_1_sva[6])) , 1'b1})
      + conv_u2s_7_9({(~ (acc_psp_1_sva[7])) , 1'b1 , (~ (acc_psp_1_sva[5:4])) ,
      (signext_2_1(~ (acc_psp_1_sva[5]))) , (~ (acc_psp_1_sva[4]))})))) , 1'b1})
      + ({(acc_psp_1_sva[8]) , 1'b0 , (acc_psp_1_sva[8]) , 1'b0 , (acc_psp_1_sva[8])
      , 1'b0 , (signext_2_1(acc_psp_1_sva[8])) , (~ (acc_imod_9_sva[1]))})))));
  assign ACC1_if_acc_2_psp_sva = nl_ACC1_if_acc_2_psp_sva[11:0];
  assign nl_ACC1_acc_10_psp_1_sva = conv_u2s_10_12({(acc_8_psp_1_sva[11]) , (conv_u2u_8_9({(acc_8_psp_1_sva[11])
      , 1'b0 , (acc_8_psp_1_sva[11]) , 1'b0 , (acc_8_psp_1_sva[11]) , 1'b0 , (signext_2_1(acc_8_psp_1_sva[7]))})
      + conv_u2u_8_9(readslicef_9_8_1((({(acc_8_psp_1_sva[9]) , 1'b0 , (acc_8_psp_1_sva[9])
      , 1'b0 , (acc_8_psp_1_sva[9]) , 1'b0 , (signext_2_1(acc_8_psp_1_sva[5])) ,
      1'b1}) + conv_u2u_8_9({(readslicef_8_7_1((conv_u2u_7_8({(acc_8_psp_1_sva[7])
      , 1'b0 , (acc_8_psp_1_sva[5]) , 1'b0 , (signext_2_1(acc_8_psp_1_sva[9])) ,
      1'b1}) + conv_u2u_6_8({(acc_8_psp_1_sva[6]) , 1'b0 , (acc_8_psp_1_sva[6]) ,
      1'b0 , (acc_8_psp_1_sva[6]) , (acc_imod_13_sva[1])})))) , (~ (readslicef_3_1_2((({1'b1
      , (acc_imod_13_sva[0]) , 1'b1}) + conv_u2s_2_3({(~ (acc_imod_13_sva[1])) ,
      (~ (acc_imod_13_sva[2]))})))))})))))}) + conv_s2s_10_12(conv_u2s_9_10({(acc_8_psp_1_sva[10])
      , 1'b0 , (acc_8_psp_1_sva[10]) , 1'b0 , (acc_8_psp_1_sva[10]) , 1'b0 , (acc_8_psp_1_sva[10])
      , 1'b0 , (acc_8_psp_1_sva[10])}) + conv_s2s_8_10(readslicef_9_8_1((conv_u2s_8_9({(acc_8_psp_1_sva[8])
      , 1'b0 , (acc_8_psp_1_sva[8]) , 1'b0 , (acc_8_psp_1_sva[8]) , 1'b0 , (acc_8_psp_1_sva[8])
      , 1'b1}) + conv_s2s_7_9({(readslicef_7_6_1((conv_s2s_5_7({(readslicef_5_4_1((conv_s2s_4_5({(readslicef_4_3_1((conv_u2s_3_4({(acc_8_psp_1_sva[3])
      , (acc_8_psp_1_sva[1]) , 1'b1}) + conv_s2s_3_4({1'b1 , (acc_8_psp_1_sva[2])
      , (acc_8_psp_1_sva[3])})))) , 1'b1}) + conv_s2s_3_5({(acc_9_psp_1_sva[3:2])
      , (acc_8_psp_1_sva[4])})))) , 1'b1}) + conv_u2s_5_7({(acc_8_psp_1_sva[7]) ,
      (acc_8_psp_1_sva[4]) , (signext_2_1(acc_8_psp_1_sva[11])) , (acc_9_psp_1_sva[1])}))))
      , (~ (acc_imod_13_sva[2]))})))));
  assign ACC1_acc_10_psp_1_sva = nl_ACC1_acc_10_psp_1_sva[11:0];
  assign nl_ACC1_acc_8_psp_sva = conv_u2s_10_12({(acc_psp_sva[11]) , (conv_u2u_8_9({(acc_psp_sva[11])
      , 1'b0 , (acc_psp_sva[11]) , 1'b0 , (acc_psp_sva[11]) , 1'b0 , (signext_2_1(acc_psp_sva[7]))})
      + conv_u2u_8_9(readslicef_9_8_1((({(acc_psp_sva[9]) , 1'b0 , (acc_psp_sva[9])
      , 1'b0 , (acc_psp_sva[9]) , 1'b0 , (signext_2_1(acc_psp_sva[5])) , 1'b1}) +
      conv_u2u_8_9({(readslicef_8_7_1((conv_u2u_7_8({(acc_psp_sva[7]) , 1'b0 , (acc_psp_sva[5])
      , 1'b0 , (signext_2_1(acc_psp_sva[9])) , 1'b1}) + conv_u2u_6_8({(acc_psp_sva[6])
      , 1'b0 , (acc_psp_sva[6]) , 1'b0 , (acc_psp_sva[6]) , (acc_imod_1_sva[1])}))))
      , (~ (readslicef_3_1_2((({1'b1 , (acc_imod_1_sva[0]) , 1'b1}) + conv_u2s_2_3({(~
      (acc_imod_1_sva[1])) , (~ (acc_imod_1_sva[2]))})))))})))))}) + conv_s2s_10_12(conv_u2s_9_10({(acc_psp_sva[10])
      , 1'b0 , (acc_psp_sva[10]) , 1'b0 , (acc_psp_sva[10]) , 1'b0 , (acc_psp_sva[10])
      , 1'b0 , (acc_psp_sva[10])}) + conv_s2s_8_10(readslicef_9_8_1((conv_u2s_8_9({(acc_psp_sva[8])
      , 1'b0 , (acc_psp_sva[8]) , 1'b0 , (acc_psp_sva[8]) , 1'b0 , (acc_psp_sva[8])
      , 1'b1}) + conv_s2s_7_9({(readslicef_7_6_1((conv_s2s_5_7({(readslicef_5_4_1((conv_s2s_4_5({(readslicef_4_3_1((conv_u2s_3_4({(acc_psp_sva[3])
      , (acc_psp_sva[1]) , 1'b1}) + conv_s2s_3_4({1'b1 , (acc_psp_sva[2]) , (acc_psp_sva[3])}))))
      , 1'b1}) + conv_s2s_3_5({(acc_1_psp_sva[3:2]) , (acc_psp_sva[4])})))) , 1'b1})
      + conv_u2s_5_7({(acc_psp_sva[7]) , (acc_psp_sva[4]) , (signext_2_1(acc_psp_sva[11]))
      , (acc_1_psp_sva[1])})))) , (~ (acc_imod_1_sva[2]))})))));
  assign ACC1_acc_8_psp_sva = nl_ACC1_acc_8_psp_sva[11:0];
  assign nl_acc_psp_2_sva = conv_u2u_11_12(conv_u2u_10_11(regs_regs_0_sva[19:10])
      + conv_u2u_10_11(regs_regs_0_sva[9:0])) + conv_u2u_10_12(regs_regs_0_sva[29:20]);
  assign acc_psp_2_sva = nl_acc_psp_2_sva[11:0];
  assign nl_acc_8_psp_2_sva = conv_u2u_11_12(conv_u2u_10_11(regs_regs_0_sva[79:70])
      + conv_u2u_10_11(regs_regs_0_sva[69:60])) + conv_u2u_10_12(regs_regs_0_sva[89:80]);
  assign acc_8_psp_2_sva = nl_acc_8_psp_2_sva[11:0];
  assign nl_acc_imod_10_sva = conv_s2s_2_3(conv_s2s_1_2(acc_1_psp_2_sva[1]) + conv_u2s_1_2(acc_1_psp_2_sva[0]))
      + conv_s2s_2_3(acc_1_psp_2_sva[3:2]);
  assign acc_imod_10_sva = nl_acc_imod_10_sva[2:0];
  assign nl_acc_9_psp_2_sva = (readslicef_5_4_1((conv_u2u_4_5({(readslicef_4_3_1((conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~
      (acc_8_psp_2_sva[3])) , 1'b1}) + conv_u2u_2_3({(acc_8_psp_2_sva[4]) , (acc_8_psp_2_sva[8])}))))
      , 1'b1}) + conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~ (acc_8_psp_2_sva[5]))
      , 1'b1}) + conv_u2u_2_3({(acc_8_psp_2_sva[6]) , (~ (acc_8_psp_2_sva[7]))}))))
      , (acc_8_psp_2_sva[10])})))) , 1'b1}) + conv_u2u_3_5({(readslicef_3_2_1((conv_u2u_2_3({(~
      (acc_8_psp_2_sva[1])) , 1'b1}) + conv_u2u_2_3({(acc_8_psp_2_sva[2]) , (~ (acc_8_psp_2_sva[9]))}))))
      , (~ (acc_8_psp_2_sva[11]))})))) + ({3'b101 , (acc_8_psp_2_sva[0])});
  assign acc_9_psp_2_sva = nl_acc_9_psp_2_sva[3:0];
  assign nl_acc_imod_14_sva = conv_s2s_2_3(conv_s2s_1_2(acc_9_psp_2_sva[1]) + conv_u2s_1_2(acc_9_psp_2_sva[0]))
      + conv_s2s_2_3(acc_9_psp_2_sva[3:2]);
  assign acc_imod_14_sva = nl_acc_imod_14_sva[2:0];
  assign nl_acc_1_psp_2_sva = (readslicef_5_4_1((conv_u2u_4_5({(readslicef_4_3_1((conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~
      (acc_psp_2_sva[3])) , 1'b1}) + conv_u2u_2_3({(acc_psp_2_sva[4]) , (acc_psp_2_sva[8])}))))
      , 1'b1}) + conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~ (acc_psp_2_sva[5]))
      , 1'b1}) + conv_u2u_2_3({(acc_psp_2_sva[6]) , (~ (acc_psp_2_sva[7]))})))) ,
      (acc_psp_2_sva[10])})))) , 1'b1}) + conv_u2u_3_5({(readslicef_3_2_1((conv_u2u_2_3({(~
      (acc_psp_2_sva[1])) , 1'b1}) + conv_u2u_2_3({(acc_psp_2_sva[2]) , (~ (acc_psp_2_sva[9]))}))))
      , (~ (acc_psp_2_sva[11]))})))) + ({3'b101 , (acc_psp_2_sva[0])});
  assign acc_1_psp_2_sva = nl_acc_1_psp_2_sva[3:0];
  assign nl_acc_8_psp_sva = conv_u2u_11_12(conv_u2u_10_11(regs_regs_1_sva[79:70])
      + conv_u2u_10_11(regs_regs_1_sva[69:60])) + conv_u2u_10_12(regs_regs_1_sva[89:80]);
  assign acc_8_psp_sva = nl_acc_8_psp_sva[11:0];
  assign nl_acc_imod_7_sva = conv_s2s_2_3(conv_s2s_1_2(acc_9_psp_sva[1]) + conv_u2s_1_2(acc_9_psp_sva[0]))
      + conv_s2s_2_3(acc_9_psp_sva[3:2]);
  assign acc_imod_7_sva = nl_acc_imod_7_sva[2:0];
  assign nl_acc_9_psp_sva = (readslicef_5_4_1((conv_u2u_4_5({(readslicef_4_3_1((conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~
      (acc_8_psp_sva[3])) , 1'b1}) + conv_u2u_2_3({(acc_8_psp_sva[4]) , (acc_8_psp_sva[8])}))))
      , 1'b1}) + conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~ (acc_8_psp_sva[5]))
      , 1'b1}) + conv_u2u_2_3({(acc_8_psp_sva[6]) , (~ (acc_8_psp_sva[7]))})))) ,
      (acc_8_psp_sva[10])})))) , 1'b1}) + conv_u2u_3_5({(readslicef_3_2_1((conv_u2u_2_3({(~
      (acc_8_psp_sva[1])) , 1'b1}) + conv_u2u_2_3({(acc_8_psp_sva[2]) , (~ (acc_8_psp_sva[9]))}))))
      , (~ (acc_8_psp_sva[11]))})))) + ({3'b101 , (acc_8_psp_sva[0])});
  assign acc_9_psp_sva = nl_acc_9_psp_sva[3:0];
  assign nl_acc_psp_sva = conv_u2u_11_12(conv_u2u_10_11(regs_regs_1_sva[19:10]) +
      conv_u2u_10_11(regs_regs_1_sva[9:0])) + conv_u2u_10_12(regs_regs_1_sva[29:20]);
  assign acc_psp_sva = nl_acc_psp_sva[11:0];
  assign nl_acc_imod_1_sva = conv_s2s_2_3(conv_s2s_1_2(acc_1_psp_sva[1]) + conv_u2s_1_2(acc_1_psp_sva[0]))
      + conv_s2s_2_3(acc_1_psp_sva[3:2]);
  assign acc_imod_1_sva = nl_acc_imod_1_sva[2:0];
  assign nl_acc_1_psp_sva = (readslicef_5_4_1((conv_u2u_4_5({(readslicef_4_3_1((conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~
      (acc_psp_sva[3])) , 1'b1}) + conv_u2u_2_3({(acc_psp_sva[4]) , (acc_psp_sva[8])}))))
      , 1'b1}) + conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~ (acc_psp_sva[5]))
      , 1'b1}) + conv_u2u_2_3({(acc_psp_sva[6]) , (~ (acc_psp_sva[7]))})))) , (acc_psp_sva[10])}))))
      , 1'b1}) + conv_u2u_3_5({(readslicef_3_2_1((conv_u2u_2_3({(~ (acc_psp_sva[1]))
      , 1'b1}) + conv_u2u_2_3({(acc_psp_sva[2]) , (~ (acc_psp_sva[9]))})))) , (~
      (acc_psp_sva[11]))})))) + ({3'b101 , (acc_psp_sva[0])});
  assign acc_1_psp_sva = nl_acc_1_psp_sva[3:0];
  assign nl_acc_psp_1_sva = conv_u2u_11_12(conv_u2u_10_11(vin_rsc_mgc_in_wire_d[19:10])
      + conv_u2u_10_11(vin_rsc_mgc_in_wire_d[9:0])) + conv_u2u_10_12(vin_rsc_mgc_in_wire_d[29:20]);
  assign acc_psp_1_sva = nl_acc_psp_1_sva[11:0];
  assign nl_acc_imod_9_sva = conv_s2s_2_3(conv_s2s_1_2(acc_1_psp_1_sva[1]) + conv_u2s_1_2(acc_1_psp_1_sva[0]))
      + conv_s2s_2_3(acc_1_psp_1_sva[3:2]);
  assign acc_imod_9_sva = nl_acc_imod_9_sva[2:0];
  assign nl_acc_1_psp_1_sva = (readslicef_5_4_1((conv_u2u_4_5({(readslicef_4_3_1((conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~
      (acc_psp_1_sva[3])) , 1'b1}) + conv_u2u_2_3({(acc_psp_1_sva[4]) , (acc_psp_1_sva[8])}))))
      , 1'b1}) + conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~ (acc_psp_1_sva[5]))
      , 1'b1}) + conv_u2u_2_3({(acc_psp_1_sva[6]) , (~ (acc_psp_1_sva[7]))})))) ,
      (acc_psp_1_sva[10])})))) , 1'b1}) + conv_u2u_3_5({(readslicef_3_2_1((conv_u2u_2_3({(~
      (acc_psp_1_sva[1])) , 1'b1}) + conv_u2u_2_3({(acc_psp_1_sva[2]) , (~ (acc_psp_1_sva[9]))}))))
      , (~ (acc_psp_1_sva[11]))})))) + ({3'b101 , (acc_psp_1_sva[0])});
  assign acc_1_psp_1_sva = nl_acc_1_psp_1_sva[3:0];
  assign nl_acc_8_psp_1_sva = conv_u2u_11_12(conv_u2u_10_11(vin_rsc_mgc_in_wire_d[79:70])
      + conv_u2u_10_11(vin_rsc_mgc_in_wire_d[69:60])) + conv_u2u_10_12(vin_rsc_mgc_in_wire_d[89:80]);
  assign acc_8_psp_1_sva = nl_acc_8_psp_1_sva[11:0];
  assign nl_acc_imod_13_sva = conv_s2s_2_3(conv_s2s_1_2(acc_9_psp_1_sva[1]) + conv_u2s_1_2(acc_9_psp_1_sva[0]))
      + conv_s2s_2_3(acc_9_psp_1_sva[3:2]);
  assign acc_imod_13_sva = nl_acc_imod_13_sva[2:0];
  assign nl_acc_9_psp_1_sva = (readslicef_5_4_1((conv_u2u_4_5({(readslicef_4_3_1((conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~
      (acc_8_psp_1_sva[3])) , 1'b1}) + conv_u2u_2_3({(acc_8_psp_1_sva[4]) , (acc_8_psp_1_sva[8])}))))
      , 1'b1}) + conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~ (acc_8_psp_1_sva[5]))
      , 1'b1}) + conv_u2u_2_3({(acc_8_psp_1_sva[6]) , (~ (acc_8_psp_1_sva[7]))}))))
      , (acc_8_psp_1_sva[10])})))) , 1'b1}) + conv_u2u_3_5({(readslicef_3_2_1((conv_u2u_2_3({(~
      (acc_8_psp_1_sva[1])) , 1'b1}) + conv_u2u_2_3({(acc_8_psp_1_sva[2]) , (~ (acc_8_psp_1_sva[9]))}))))
      , (~ (acc_8_psp_1_sva[11]))})))) + ({3'b101 , (acc_8_psp_1_sva[0])});
  assign acc_9_psp_1_sva = nl_acc_9_psp_1_sva[3:0];
  assign exit_FRAME_lpi_1_dfm_1_mx0 = MUX_s_1_2_2({(exit_FRAME_lpi_1_dfm_1 & (~ exit_sqrt_for_lpi_1_dfm_4))
      , (~ (readslicef_8_1_7((conv_u2s_7_8(FRAME_p_1_sva_1[18:12]) + 8'b10110101))))},
      sqrt_for_acc_1_tmp[4]);
  assign nl_FRAME_p_1_sva_1 = FRAME_p_1_lpi_1_dfm + 19'b1;
  assign FRAME_p_1_sva_1 = nl_FRAME_p_1_sva_1[18:0];
  assign FRAME_p_1_lpi_1_dfm = FRAME_p_1_lpi_1 & (signext_19_1(~ exit_FRAME_1_sva));
  assign nl_ACC1_if_2_acc_itm = conv_s2s_13_14(ACC1_if_2_acc_45_itm_1) + conv_s2s_13_14(ACC1_if_2_acc_44_itm_1);
  assign ACC1_if_2_acc_itm = nl_ACC1_if_2_acc_itm[13:0];
  assign nl_ACC1_if_acc_itm = conv_s2s_13_14(ACC1_if_acc_52_itm_1) + conv_s2s_13_14(ACC1_if_acc_51_itm_1);
  assign ACC1_if_acc_itm = nl_ACC1_if_acc_itm[13:0];
  assign and_cse = ~((sqrt_for_acc_1_psp[4]) | exit_FRAME_1_sva);
  assign and_dcpl_31 = main_stage_0_2 & exit_sqrt_for_lpi_1_dfm_3;
  always @(posedge clk or negedge arst_n) begin
    if ( ~ arst_n ) begin
      vout_rsc_mgc_out_stdreg_d <= 30'b0;
      ACC1_if_acc_52_itm_1 <= 13'b0;
      ACC1_if_acc_51_itm_1 <= 13'b0;
      ACC1_if_2_acc_45_itm_1 <= 13'b0;
      ACC1_if_2_acc_44_itm_1 <= 13'b0;
      sqrt_r_1_lpi_1_dfm_1 <= 1'b0;
      sqrt_z_lpi_1_sg16 <= 2'b0;
      sqrt_for_and_8_itm_1 <= 1'b0;
      sqrt_for_ac_int_cctor_1_sg8_sva_1 <= 2'b0;
      sqrt_for_ac_int_cctor_1_sg7_sva_1 <= 2'b0;
      sqrt_for_ac_int_cctor_1_sg6_sva_1 <= 2'b0;
      sqrt_for_ac_int_cctor_1_sg5_sva_1 <= 2'b0;
      sqrt_d_sg4_sva_3 <= 2'b0;
      sqrt_d_sg3_sva_3 <= 2'b0;
      sqrt_d_sg2_sva_3 <= 2'b0;
      sqrt_d_sg1_sva_3 <= 2'b0;
      exit_sqrt_for_lpi_1_dfm_3 <= 1'b0;
      sqrt_for_acc_1_psp <= 5'b0;
      exit_FRAME_1_sva <= 1'b1;
      main_stage_0_2 <= 1'b0;
      sqrt_mask_d_sg6_1_lpi_1_dfm_1 <= 1'b0;
      sqrt_mask_d_sg1_1_lpi_1_dfm_1 <= 1'b0;
      sqrt_mask_d_sg5_1_lpi_1_dfm_1 <= 1'b0;
      sqrt_mask_d_sg2_1_lpi_1_dfm_1 <= 1'b0;
      sqrt_mask_d_sg4_1_lpi_1_dfm_1 <= 1'b0;
      sqrt_mask_d_sg3_1_lpi_1_dfm_1 <= 1'b0;
      sqrt_mask_d_sg7_1_lpi_1_dfm_1 <= 1'b0;
      sqrt_z_lpi_1_sg15 <= 2'b0;
      regs_regs_1_sva <= 90'b0;
      regs_regs_0_sva <= 90'b0;
      exit_FRAME_lpi_1_dfm_1 <= 1'b0;
      FRAME_p_1_lpi_1 <= 19'b0;
      sqrt_z_lpi_1_sg14 <= 2'b0;
      sqrt_z_lpi_1_sg13 <= 2'b0;
      sqrt_z_lpi_1_sg12 <= 2'b0;
      sqrt_z_lpi_1_sg11 <= 2'b0;
      sqrt_z_lpi_1_sg10 <= 2'b0;
      sqrt_z_lpi_1_sg9 <= 2'b0;
      sqrt_z_lpi_1_dfm_sg7 <= 2'b0;
      sqrt_z_lpi_1_dfm_sg6 <= 2'b0;
      sqrt_z_lpi_1_dfm_sg5 <= 2'b0;
      sqrt_z_lpi_1_dfm_sg4 <= 2'b0;
      sqrt_z_lpi_1_dfm_sg3 <= 2'b0;
      sqrt_z_lpi_1_dfm_sg2 <= 2'b0;
      sqrt_z_lpi_1_dfm_sg1 <= 2'b0;
      sqrt_z_lpi_1_dfm_1 <= 2'b0;
      reg_sqrt_r_slc_sqrt_r_sg1_7_itm_1_tmp <= 14'b0;
      reg_sqrt_r_slc_sqrt_r_sg1_7_itm_1_tmp_1 <= 1'b0;
    end
    else begin
      if ( en ) begin
        vout_rsc_mgc_out_stdreg_d <= MUX_v_30_2_2({({(({(reg_sqrt_r_slc_sqrt_r_sg1_7_itm_1_tmp[6:0])
            , reg_sqrt_r_slc_sqrt_r_sg1_7_itm_1_tmp_1 , sqrt_r_1_lpi_1_dfm_1 , (~
            (sqrt_for_t_acc_1_itm[19]))}) | ({4'b0 , (reg_sqrt_r_slc_sqrt_r_sg1_7_itm_1_tmp[12:7])}))
            , (reg_sqrt_r_slc_sqrt_r_sg1_7_itm_1_tmp[6:3]) , (({(reg_sqrt_r_slc_sqrt_r_sg1_7_itm_1_tmp[2:0])
            , reg_sqrt_r_slc_sqrt_r_sg1_7_itm_1_tmp_1 , sqrt_r_1_lpi_1_dfm_1 , (~
            (sqrt_for_t_acc_1_itm[19]))}) | (reg_sqrt_r_slc_sqrt_r_sg1_7_itm_1_tmp[12:7]))
            , (reg_sqrt_r_slc_sqrt_r_sg1_7_itm_1_tmp[6:0]) , reg_sqrt_r_slc_sqrt_r_sg1_7_itm_1_tmp_1
            , sqrt_r_1_lpi_1_dfm_1 , (~ (sqrt_for_t_acc_1_itm[19]))}) , vout_rsc_mgc_out_stdreg_d},
            ~(main_stage_0_2 & (sqrt_for_acc_1_psp[4])));
        ACC1_if_acc_52_itm_1 <= nl_ACC1_if_acc_52_itm_1[12:0];
        ACC1_if_acc_51_itm_1 <= nl_ACC1_if_acc_51_itm_1[12:0];
        ACC1_if_2_acc_45_itm_1 <= nl_ACC1_if_2_acc_45_itm_1[12:0];
        ACC1_if_2_acc_44_itm_1 <= nl_ACC1_if_2_acc_44_itm_1[12:0];
        sqrt_r_1_lpi_1_dfm_1 <= ~((sqrt_for_t_sva_1[18]) | exit_sqrt_for_lpi_1_dfm_4);
        sqrt_z_lpi_1_sg16 <= MUX1HOT_v_2_3_2({sqrt_z_lpi_1_sg16 , sqrt_z_lpi_1_sg15
            , (sqrt_z_sva_2[31:30])}, {(~ main_stage_0_2) , and_cse_1 , and_51_cse});
        sqrt_for_and_8_itm_1 <= sqrt_mask_d_sg7_1_lpi_1_dfm_1 & (~ exit_sqrt_for_lpi_1_dfm_4)
            & (MUX_s_1_2_2({(sqrt_for_t_acc_1_itm[17]) , (sqrt_for_ac_int_cctor_1_sg8_sva_1[0])},
            sqrt_for_t_acc_1_itm[19]));
        sqrt_for_ac_int_cctor_1_sg8_sva_1 <= ({{1{sqrt_mask_d_sg7_1_lpi_1_dfm}},
            sqrt_mask_d_sg7_1_lpi_1_dfm}) & (MUX_v_2_2_2({(({{1{sqrt_mask_d_sg6_1_lpi_1_dfm_1}},
            sqrt_mask_d_sg6_1_lpi_1_dfm_1}) & (sqrt_for_t_acc_1_itm[16:15])) , sqrt_for_ac_int_cctor_1_sg7_sva_1},
            sqrt_for_t_acc_1_itm[19])) & (signext_2_1(~ exit_sqrt_for_lpi_1_dfm_4));
        sqrt_for_ac_int_cctor_1_sg7_sva_1 <= ({{1{sqrt_mask_d_sg6_1_lpi_1_dfm}},
            sqrt_mask_d_sg6_1_lpi_1_dfm}) & (MUX_v_2_2_2({(({{1{sqrt_mask_d_sg5_1_lpi_1_dfm_1}},
            sqrt_mask_d_sg5_1_lpi_1_dfm_1}) & (sqrt_for_t_acc_1_itm[14:13])) , sqrt_for_ac_int_cctor_1_sg6_sva_1},
            sqrt_for_t_acc_1_itm[19])) & (signext_2_1(~ exit_sqrt_for_lpi_1_dfm_4));
        sqrt_for_ac_int_cctor_1_sg6_sva_1 <= ({{1{sqrt_mask_d_sg5_1_lpi_1_dfm}},
            sqrt_mask_d_sg5_1_lpi_1_dfm}) & (MUX_v_2_2_2({(({{1{sqrt_mask_d_sg4_1_lpi_1_dfm_1}},
            sqrt_mask_d_sg4_1_lpi_1_dfm_1}) & (sqrt_for_t_acc_1_itm[12:11])) , sqrt_for_ac_int_cctor_1_sg5_sva_1},
            sqrt_for_t_acc_1_itm[19])) & (signext_2_1(~ exit_sqrt_for_lpi_1_dfm_4));
        sqrt_for_ac_int_cctor_1_sg5_sva_1 <= ({{1{sqrt_mask_d_sg4_1_lpi_1_dfm}},
            sqrt_mask_d_sg4_1_lpi_1_dfm}) & (MUX_v_2_2_2({(({{1{sqrt_mask_d_sg3_1_lpi_1_dfm_1}},
            sqrt_mask_d_sg3_1_lpi_1_dfm_1}) & (sqrt_for_t_acc_1_itm[10:9])) , sqrt_d_sg4_sva_3},
            sqrt_for_t_acc_1_itm[19])) & (signext_2_1(~ exit_sqrt_for_lpi_1_dfm_4));
        sqrt_d_sg4_sva_3 <= ({{1{sqrt_mask_d_sg3_1_lpi_1_dfm}}, sqrt_mask_d_sg3_1_lpi_1_dfm})
            & (MUX_v_2_2_2({(({{1{sqrt_mask_d_sg2_1_lpi_1_dfm_1}}, sqrt_mask_d_sg2_1_lpi_1_dfm_1})
            & (sqrt_for_t_acc_1_itm[8:7])) , sqrt_d_sg3_sva_3}, sqrt_for_t_acc_1_itm[19]))
            & (signext_2_1(~ exit_sqrt_for_lpi_1_dfm_4));
        sqrt_d_sg3_sva_3 <= ({{1{sqrt_mask_d_sg2_1_lpi_1_dfm}}, sqrt_mask_d_sg2_1_lpi_1_dfm})
            & (MUX_v_2_2_2({(({{1{sqrt_mask_d_sg1_1_lpi_1_dfm_1}}, sqrt_mask_d_sg1_1_lpi_1_dfm_1})
            & (sqrt_for_t_acc_1_itm[6:5])) , sqrt_d_sg2_sva_3}, sqrt_for_t_acc_1_itm[19]))
            & (signext_2_1(~ exit_sqrt_for_lpi_1_dfm_4));
        sqrt_d_sg2_sva_3 <= ({{1{sqrt_mask_d_sg1_1_lpi_1_dfm}}, sqrt_mask_d_sg1_1_lpi_1_dfm})
            & (MUX_v_2_2_2({((signext_2_1(~ exit_sqrt_for_lpi_1_dfm_3)) & (sqrt_for_t_acc_1_itm[4:3]))
            , sqrt_d_sg1_sva_3}, sqrt_for_t_acc_1_itm[19])) & (signext_2_1(~ exit_sqrt_for_lpi_1_dfm_4));
        sqrt_d_sg1_sva_3 <= (MUX1HOT_v_2_3_2({(sqrt_for_t_sva_1[1:0]) , ({1'b0 ,
            (sqrt_z_sva_2[32])}) , sqrt_z_lpi_1_sg16}, {(~((sqrt_for_t_sva_1[18])
            | or_tmp)) , ((~ and_67_tmp) & (sqrt_for_t_sva_1[18]) & (~ or_tmp)) ,
            (and_67_tmp & (sqrt_for_t_sva_1[18]) & (~ or_tmp))})) & (signext_2_1(~
            or_tmp));
        exit_sqrt_for_lpi_1_dfm_3 <= exit_sqrt_for_lpi_1_dfm_4;
        sqrt_for_acc_1_psp <= sqrt_for_acc_1_tmp;
        exit_FRAME_1_sva <= (sqrt_for_acc_1_tmp[4]) & exit_FRAME_lpi_1_dfm_1_mx0;
        main_stage_0_2 <= 1'b1;
        sqrt_mask_d_sg6_1_lpi_1_dfm_1 <= sqrt_mask_d_sg6_1_lpi_1_dfm;
        sqrt_mask_d_sg1_1_lpi_1_dfm_1 <= sqrt_mask_d_sg1_1_lpi_1_dfm;
        sqrt_mask_d_sg5_1_lpi_1_dfm_1 <= sqrt_mask_d_sg5_1_lpi_1_dfm;
        sqrt_mask_d_sg2_1_lpi_1_dfm_1 <= sqrt_mask_d_sg2_1_lpi_1_dfm;
        sqrt_mask_d_sg4_1_lpi_1_dfm_1 <= sqrt_mask_d_sg4_1_lpi_1_dfm;
        sqrt_mask_d_sg3_1_lpi_1_dfm_1 <= sqrt_mask_d_sg3_1_lpi_1_dfm;
        sqrt_mask_d_sg7_1_lpi_1_dfm_1 <= sqrt_mask_d_sg7_1_lpi_1_dfm;
        sqrt_z_lpi_1_sg15 <= MUX1HOT_v_2_3_2({sqrt_z_lpi_1_sg15 , sqrt_z_lpi_1_sg14
            , (sqrt_z_sva_2[29:28])}, {(~ main_stage_0_2) , and_cse_1 , and_51_cse});
        regs_regs_1_sva <= MUX_v_90_2_2({regs_regs_0_sva , regs_regs_1_sva}, and_cse);
        regs_regs_0_sva <= MUX_v_90_2_2({vin_rsc_mgc_in_wire_d , regs_regs_0_sva},
            and_cse);
        exit_FRAME_lpi_1_dfm_1 <= exit_FRAME_lpi_1_dfm_1_mx0;
        FRAME_p_1_lpi_1 <= MUX_v_19_2_2({FRAME_p_1_lpi_1_dfm , FRAME_p_1_sva_1},
            sqrt_for_acc_1_tmp[4]);
        sqrt_z_lpi_1_sg14 <= MUX1HOT_v_2_3_2({sqrt_z_lpi_1_sg14 , sqrt_z_lpi_1_sg13
            , (sqrt_z_sva_2[27:26])}, {(~ main_stage_0_2) , and_cse_1 , and_51_cse});
        sqrt_z_lpi_1_sg13 <= MUX1HOT_v_2_3_2({sqrt_z_lpi_1_sg13 , sqrt_z_lpi_1_sg12
            , (sqrt_z_sva_2[25:24])}, {(~ main_stage_0_2) , and_cse_1 , and_51_cse});
        sqrt_z_lpi_1_sg12 <= MUX1HOT_v_2_3_2({sqrt_z_lpi_1_sg12 , sqrt_z_lpi_1_sg11
            , (sqrt_z_sva_2[23:22])}, {(~ main_stage_0_2) , and_cse_1 , and_51_cse});
        sqrt_z_lpi_1_sg11 <= MUX1HOT_v_2_3_2({sqrt_z_lpi_1_sg11 , sqrt_z_lpi_1_sg10
            , (sqrt_z_sva_2[21:20])}, {(~ main_stage_0_2) , and_cse_1 , and_51_cse});
        sqrt_z_lpi_1_sg10 <= MUX1HOT_v_2_3_2({sqrt_z_lpi_1_sg10 , sqrt_z_lpi_1_sg9
            , (sqrt_z_sva_2[19:18])}, {(~ main_stage_0_2) , and_cse_1 , and_51_cse});
        sqrt_z_lpi_1_sg9 <= MUX1HOT_v_2_3_2({sqrt_z_lpi_1_sg9 , sqrt_z_lpi_1_dfm_sg7
            , (sqrt_z_sva_2[17:16])}, {(~ main_stage_0_2) , and_cse_1 , and_51_cse});
        sqrt_z_lpi_1_dfm_sg7 <= MUX1HOT_v_2_3_2({(sqrt_z_sva_2[15:14]) , sqrt_z_lpi_1_dfm_sg6
            , sqrt_z_lpi_1_dfm_sg7}, {and_dcpl_31 , and_67_tmp , (~ main_stage_0_2)});
        sqrt_z_lpi_1_dfm_sg6 <= MUX1HOT_v_2_3_2({(sqrt_z_sva_2[13:12]) , sqrt_z_lpi_1_dfm_sg5
            , sqrt_z_lpi_1_dfm_sg6}, {and_dcpl_31 , and_67_tmp , (~ main_stage_0_2)});
        sqrt_z_lpi_1_dfm_sg5 <= MUX1HOT_v_2_3_2({(sqrt_z_sva_2[11:10]) , sqrt_z_lpi_1_dfm_sg4
            , sqrt_z_lpi_1_dfm_sg5}, {and_dcpl_31 , and_67_tmp , (~ main_stage_0_2)});
        sqrt_z_lpi_1_dfm_sg4 <= MUX1HOT_v_2_3_2({(sqrt_z_sva_2[9:8]) , sqrt_z_lpi_1_dfm_sg3
            , sqrt_z_lpi_1_dfm_sg4}, {and_dcpl_31 , and_67_tmp , (~ main_stage_0_2)});
        sqrt_z_lpi_1_dfm_sg3 <= MUX1HOT_v_2_3_2({(sqrt_z_sva_2[7:6]) , sqrt_z_lpi_1_dfm_sg2
            , sqrt_z_lpi_1_dfm_sg3}, {and_dcpl_31 , and_67_tmp , (~ main_stage_0_2)});
        sqrt_z_lpi_1_dfm_sg2 <= MUX1HOT_v_2_3_2({(sqrt_z_sva_2[5:4]) , sqrt_z_lpi_1_dfm_sg1
            , sqrt_z_lpi_1_dfm_sg2}, {and_dcpl_31 , and_67_tmp , (~ main_stage_0_2)});
        sqrt_z_lpi_1_dfm_sg1 <= MUX1HOT_v_2_3_2({(sqrt_z_sva_2[3:2]) , sqrt_z_lpi_1_dfm_1
            , sqrt_z_lpi_1_dfm_sg1}, {and_dcpl_31 , and_67_tmp , (~ main_stage_0_2)});
        sqrt_z_lpi_1_dfm_1 <= (MUX_v_2_2_2({sqrt_z_lpi_1_dfm_1 , (sqrt_z_sva_2[1:0])},
            main_stage_0_2 & (~ and_67_tmp))) & (signext_2_1(~ and_67_tmp));
        reg_sqrt_r_slc_sqrt_r_sg1_7_itm_1_tmp <= ({(reg_sqrt_r_slc_sqrt_r_sg1_7_itm_1_tmp[12:0])
            , reg_sqrt_r_slc_sqrt_r_sg1_7_itm_1_tmp_1}) & (signext_14_1(~ exit_sqrt_for_lpi_1_dfm_4));
        reg_sqrt_r_slc_sqrt_r_sg1_7_itm_1_tmp_1 <= sqrt_r_1_lpi_1_dfm_1 & (~ exit_sqrt_for_lpi_1_dfm_4);
      end
    end
  end
  assign nl_ACC1_if_acc_52_itm_1  = ({(conv_s2u_11_12({conv_s2u_16_8(conv_s2s_2_8(conv_s2s_1_2(acc_4_psp_1_sva[11])
      + conv_u2s_1_2(acc_4_psp_sva[11])) * 8'b1010101) , 1'b0 , (signext_2_1(acc_4_psp_sva[11]))})
      + conv_s2u_11_12(ACC1_if_acc_2_psp_sva[11:1])) , (ACC1_if_acc_2_psp_sva[0])})
      + conv_s2s_12_13((~ ACC1_acc_10_psp_1_sva) + ACC1_acc_8_psp_sva);
  assign nl_ACC1_if_acc_51_itm_1  = conv_s2s_12_13({(conv_s2u_10_11(conv_s2s_9_10({conv_s2u_12_6(conv_s2s_2_6(conv_s2s_1_2(acc_4_psp_1_sva[9])
      + conv_u2s_1_2(acc_4_psp_sva[9])) * 6'b10101) , 1'b0 , (signext_2_1(acc_4_psp_sva[5]))})
      + conv_s2s_8_10({1'b1 , ((conv_s2s_6_7(conv_s2s_12_6(conv_s2s_2_6(conv_s2s_1_2(acc_4_psp_1_sva[6])
      + conv_u2s_1_2(acc_4_psp_sva[6])) * 6'b10101)) + conv_u2s_6_7({(acc_4_psp_sva[7])
      , 1'b0 , (acc_4_psp_sva[5]) , 1'b0 , (signext_2_1(acc_4_psp_sva[9]))})) + conv_u2s_6_7({5'b10011
      , (acc_4_psp_sva[2])}))})) + (ACC1_acc_10_psp_sva[11:1])) , (ACC1_acc_10_psp_sva[0])})
      + conv_s2s_12_13({(conv_s2u_9_11(conv_s2s_8_9(conv_s2s_16_8(conv_s2s_2_8(conv_s2s_1_2(acc_4_psp_1_sva[8])
      + conv_u2s_1_2(acc_4_psp_sva[8])) * 8'b1010101)) + conv_u2s_7_9((readslicef_8_7_1((conv_s2u_7_8({(readslicef_7_6_1((conv_s2s_6_7({(readslicef_6_5_1((conv_u2s_4_6({(readslicef_4_3_1((conv_u2u_3_4(signext_3_2({(~
      (acc_4_psp_1_sva[9])) , 1'b1})) + conv_u2u_3_4({(acc_4_psp_sva[3]) , (acc_4_psp_1_sva[3])
      , (acc_imod_4_sva[1])})))) , 1'b1}) + conv_s2s_3_6({(readslicef_3_2_1((({1'b1
      , (~ (acc_4_psp_1_sva[2])) , 1'b1}) + conv_u2s_2_3({(~ (acc_4_psp_1_sva[4]))
      , (acc_5_psp_sva[1])})))) , (~ (readslicef_3_1_2((({1'b1 , (acc_imod_4_sva[0])
      , 1'b1}) + conv_u2s_2_3({(~ (acc_imod_4_sva[1])) , (~ (acc_imod_4_sva[2]))})))))}))))
      , 1'b1}) + conv_u2s_4_7({(readslicef_4_3_1((conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(acc_4_psp_sva[1])
      , 1'b1}) + conv_u2u_2_3({(acc_4_psp_sva[3]) , (acc_4_psp_sva[4])})))) , 1'b1})
      + conv_u2u_3_4(signext_3_2({(~ (acc_4_psp_1_sva[5])) , (~ (acc_imod_4_sva[2]))})))))
      , (~ (acc_5_psp_1_sva[1]))})))) , 1'b1}) + conv_u2u_7_8({(~ (acc_4_psp_1_sva[7]))
      , 1'b1 , (~ (acc_4_psp_1_sva[5:4])) , 1'b1 , (~ (acc_4_psp_1_sva[1])) , (~
      (acc_imod_11_sva[1]))})))) + (conv_u2u_5_7({(conv_u2u_2_3({(acc_4_psp_sva[7])
      , (acc_4_psp_sva[4])}) + conv_u2u_2_3({(~ (acc_4_psp_1_sva[7])) , (~ (acc_4_psp_1_sva[3]))}))
      , (~ (acc_4_psp_1_sva[7])) , (~ (acc_4_psp_1_sva[7]))}) + conv_s2u_5_7(conv_s2s_3_5(readslicef_4_3_1((conv_s2s_3_4({(acc_5_psp_sva[3:2])
      , 1'b1}) + conv_s2s_3_4({(~ (acc_5_psp_1_sva[3:2])) , (readslicef_3_1_2((({1'b1
      , (acc_imod_11_sva[0]) , 1'b1}) + conv_u2s_2_3({(~ (acc_imod_11_sva[1])) ,
      (~ (acc_imod_11_sva[2]))}))))})))) + conv_u2s_3_5(readslicef_4_3_1((conv_u2u_3_4(signext_3_2({(acc_4_psp_sva[7])
      , 1'b1})) + conv_u2u_3_4(signext_3_2({(~ (acc_4_psp_1_sva[11])) , (acc_imod_11_sva[2])})))))))))
      + conv_s2u_10_11(conv_s2u_20_10(conv_s2s_2_10(conv_s2s_1_2(acc_4_psp_1_sva[10])
      + conv_u2s_1_2(acc_4_psp_sva[10])) * 10'b101010101))) , 1'b1});
  assign nl_ACC1_if_2_acc_45_itm_1  = ({(conv_s2u_11_12({conv_s2u_16_8(conv_s2s_2_8(conv_s2s_1_2(acc_8_psp_2_sva[11])
      + conv_u2s_1_2(acc_psp_2_sva[11])) * 8'b10101011) , 1'b0 , (signext_2_1(acc_8_psp_2_sva[11]))})
      + conv_s2u_11_12(ACC1_if_acc_2_psp_sva[11:1])) , (ACC1_if_acc_2_psp_sva[0])})
      + conv_s2s_12_13(ACC1_acc_10_psp_1_sva + (~ ACC1_acc_8_psp_sva));
  assign nl_ACC1_if_2_acc_44_itm_1  = conv_s2s_12_13({(conv_s2u_10_11(conv_s2s_9_10({conv_s2u_12_6(conv_s2s_2_6(conv_s2s_1_2(acc_8_psp_2_sva[9])
      + conv_u2s_1_2(acc_psp_2_sva[9])) * 6'b101011) , (acc_8_psp_2_sva[4]) , (signext_2_1(acc_8_psp_2_sva[7]))})
      + conv_s2s_8_10({1'b1 , ((conv_s2s_6_7(conv_s2s_12_6(conv_s2s_2_6(conv_s2s_1_2(acc_8_psp_2_sva[6])
      + conv_u2s_1_2(acc_psp_2_sva[6])) * 6'b101011)) + conv_u2s_6_7({(~ (acc_psp_2_sva[7]))
      , 1'b1 , (~ (acc_psp_2_sva[5:4])) , 1'b1 , (~ (acc_psp_2_sva[2]))})) + conv_u2s_6_7({5'b10001
      , (~ (acc_psp_2_sva[4]))}))})) + (ACC1_acc_10_psp_sva[11:1])) , (ACC1_acc_10_psp_sva[0])})
      + conv_s2s_12_13({(conv_s2u_9_11(readslicef_10_9_1((conv_s2s_9_10({(readslicef_9_8_1((conv_u2s_8_9({(readslicef_8_7_1((conv_u2u_7_8({(acc_8_psp_2_sva[7])
      , 1'b0 , (acc_8_psp_2_sva[5]) , 1'b0 , (signext_2_1(acc_8_psp_2_sva[5])) ,
      1'b1}) + conv_u2u_6_8({(readslicef_6_5_1((conv_u2u_5_6({(acc_8_psp_2_sva[7])
      , 1'b0 , (signext_2_1(~ (acc_psp_2_sva[5]))) , 1'b1}) + conv_u2u_5_6({(~ (acc_psp_2_sva[7]))
      , (~ (acc_psp_2_sva[3])) , 1'b1 , (~ (acc_1_psp_2_sva[1])) , (acc_imod_14_sva[1])}))))
      , (~ (acc_psp_2_sva[1]))})))) , 1'b1}) + conv_s2s_7_9({(readslicef_7_6_1((conv_s2s_6_7({(readslicef_6_5_1((conv_s2s_4_6({(readslicef_4_3_1((conv_s2s_3_4({(~
      (acc_1_psp_2_sva[3:2])) , 1'b1}) + conv_s2s_3_4({(acc_9_psp_2_sva[3:2]) , (acc_imod_10_sva[2])}))))
      , 1'b1}) + conv_u2s_4_6({(readslicef_4_3_1((conv_u2u_3_4(signext_3_2({(~ (acc_psp_2_sva[7]))
      , 1'b1})) + conv_u2u_3_4(signext_3_2({(~ (acc_psp_2_sva[9])) , (~ (acc_imod_10_sva[1]))})))))
      , (acc_9_psp_2_sva[1])})))) , 1'b1}) + conv_u2s_5_7({(readslicef_5_4_1((conv_u2u_4_5({(readslicef_4_3_1((conv_u2u_3_4(signext_3_2({(~
      (acc_psp_2_sva[11])) , 1'b1})) + conv_u2u_3_4(signext_3_2({(acc_8_psp_2_sva[9])
      , (acc_8_psp_2_sva[4])}))))) , 1'b1}) + conv_u2u_4_5({(readslicef_4_3_1((conv_u2u_3_4({(acc_8_psp_2_sva[3])
      , (acc_8_psp_2_sva[1]) , 1'b1}) + conv_u2u_2_4({(acc_8_psp_2_sva[2]) , (acc_8_psp_2_sva[3])}))))
      , (readslicef_3_1_2((({1'b1 , (acc_imod_10_sva[0]) , 1'b1}) + conv_u2s_2_3({(~
      (acc_imod_10_sva[1])) , (~ (acc_imod_10_sva[2]))}))))})))) , (~ (acc_imod_14_sva[2]))}))))
      , (acc_psp_2_sva[3])})))) , 1'b1}) + conv_s2s_9_10({conv_s2u_16_8(conv_s2s_2_8(conv_s2s_1_2(acc_8_psp_2_sva[8])
      + conv_u2s_1_2(acc_psp_2_sva[8])) * 8'b10101011) , (~ (readslicef_3_1_2((({1'b1
      , (acc_imod_14_sva[0]) , 1'b1}) + conv_u2s_2_3({(~ (acc_imod_14_sva[1])) ,
      (~ (acc_imod_14_sva[2]))})))))})))) + conv_s2u_10_11(conv_s2u_20_10(conv_s2s_2_10(conv_s2s_1_2(acc_8_psp_2_sva[10])
      + conv_u2s_1_2(acc_psp_2_sva[10])) * 10'b1010101011))) , 1'b1});

  function [1:0] MUX_v_2_2_2;
    input [3:0] inputs;
    input [0:0] sel;
    reg [1:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[3:2];
      end
      1'b1 : begin
        result = inputs[1:0];
      end
      default : begin
        result = inputs[3:2];
      end
    endcase
    MUX_v_2_2_2 = result;
  end
  endfunction


  function [4:0] MUX_v_5_2_2;
    input [9:0] inputs;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[9:5];
      end
      1'b1 : begin
        result = inputs[4:0];
      end
      default : begin
        result = inputs[9:5];
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction


  function [1:0] signext_2_1;
    input [0:0] vector;
  begin
    signext_2_1= {{1{vector[0]}}, vector};
  end
  endfunction


  function [7:0] readslicef_9_8_1;
    input [8:0] vector;
    reg [8:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_9_8_1 = tmp[7:0];
  end
  endfunction


  function [6:0] readslicef_8_7_1;
    input [7:0] vector;
    reg [7:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_8_7_1 = tmp[6:0];
  end
  endfunction


  function [0:0] readslicef_3_1_2;
    input [2:0] vector;
    reg [2:0] tmp;
  begin
    tmp = vector >> 2;
    readslicef_3_1_2 = tmp[0:0];
  end
  endfunction


  function [5:0] readslicef_7_6_1;
    input [6:0] vector;
    reg [6:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_7_6_1 = tmp[5:0];
  end
  endfunction


  function [3:0] readslicef_5_4_1;
    input [4:0] vector;
    reg [4:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_5_4_1 = tmp[3:0];
  end
  endfunction


  function [2:0] readslicef_4_3_1;
    input [3:0] vector;
    reg [3:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_4_3_1 = tmp[2:0];
  end
  endfunction


  function [1:0] readslicef_3_2_1;
    input [2:0] vector;
    reg [2:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_3_2_1 = tmp[1:0];
  end
  endfunction


  function [8:0] readslicef_10_9_1;
    input [9:0] vector;
    reg [9:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_10_9_1 = tmp[8:0];
  end
  endfunction


  function [2:0] signext_3_2;
    input [1:0] vector;
  begin
    signext_3_2= {{1{vector[1]}}, vector};
  end
  endfunction


  function [0:0] MUX_s_1_2_2;
    input [1:0] inputs;
    input [0:0] sel;
    reg [0:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[1:1];
      end
      1'b1 : begin
        result = inputs[0:0];
      end
      default : begin
        result = inputs[1:1];
      end
    endcase
    MUX_s_1_2_2 = result;
  end
  endfunction


  function [0:0] readslicef_8_1_7;
    input [7:0] vector;
    reg [7:0] tmp;
  begin
    tmp = vector >> 7;
    readslicef_8_1_7 = tmp[0:0];
  end
  endfunction


  function [18:0] signext_19_1;
    input [0:0] vector;
  begin
    signext_19_1= {{18{vector[0]}}, vector};
  end
  endfunction


  function [29:0] MUX_v_30_2_2;
    input [59:0] inputs;
    input [0:0] sel;
    reg [29:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[59:30];
      end
      1'b1 : begin
        result = inputs[29:0];
      end
      default : begin
        result = inputs[59:30];
      end
    endcase
    MUX_v_30_2_2 = result;
  end
  endfunction


  function [1:0] MUX1HOT_v_2_3_2;
    input [5:0] inputs;
    input [2:0] sel;
    reg [1:0] result;
    integer i;
  begin
    result = inputs[0+:2] & {2{sel[0]}};
    for( i = 1; i < 3; i = i + 1 )
      result = result | (inputs[i*2+:2] & {2{sel[i]}});
    MUX1HOT_v_2_3_2 = result;
  end
  endfunction


  function [89:0] MUX_v_90_2_2;
    input [179:0] inputs;
    input [0:0] sel;
    reg [89:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[179:90];
      end
      1'b1 : begin
        result = inputs[89:0];
      end
      default : begin
        result = inputs[179:90];
      end
    endcase
    MUX_v_90_2_2 = result;
  end
  endfunction


  function [18:0] MUX_v_19_2_2;
    input [37:0] inputs;
    input [0:0] sel;
    reg [18:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[37:19];
      end
      1'b1 : begin
        result = inputs[18:0];
      end
      default : begin
        result = inputs[37:19];
      end
    endcase
    MUX_v_19_2_2 = result;
  end
  endfunction


  function [13:0] signext_14_1;
    input [0:0] vector;
  begin
    signext_14_1= {{13{vector[0]}}, vector};
  end
  endfunction


  function [4:0] readslicef_6_5_1;
    input [5:0] vector;
    reg [5:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_6_5_1 = tmp[4:0];
  end
  endfunction


  function  [32:0] conv_u2u_32_33 ;
    input [31:0]  vector ;
  begin
    conv_u2u_32_33 = {1'b0, vector};
  end
  endfunction


  function  [31:0] conv_u2u_64_32 ;
    input [63:0]  vector ;
  begin
    conv_u2u_64_32 = vector[31:0];
  end
  endfunction


  function  [31:0] conv_u2u_16_32 ;
    input [15:0]  vector ;
  begin
    conv_u2u_16_32 = {{16{1'b0}}, vector};
  end
  endfunction


  function  [11:0] conv_u2u_11_12 ;
    input [10:0]  vector ;
  begin
    conv_u2u_11_12 = {1'b0, vector};
  end
  endfunction


  function  [10:0] conv_u2u_10_11 ;
    input [9:0]  vector ;
  begin
    conv_u2u_10_11 = {1'b0, vector};
  end
  endfunction


  function  [11:0] conv_u2u_10_12 ;
    input [9:0]  vector ;
  begin
    conv_u2u_10_12 = {{2{1'b0}}, vector};
  end
  endfunction


  function signed [11:0] conv_u2s_10_12 ;
    input [9:0]  vector ;
  begin
    conv_u2s_10_12 = {{2{1'b0}}, vector};
  end
  endfunction


  function  [8:0] conv_u2u_8_9 ;
    input [7:0]  vector ;
  begin
    conv_u2u_8_9 = {1'b0, vector};
  end
  endfunction


  function  [7:0] conv_u2u_7_8 ;
    input [6:0]  vector ;
  begin
    conv_u2u_7_8 = {1'b0, vector};
  end
  endfunction


  function  [7:0] conv_u2u_6_8 ;
    input [5:0]  vector ;
  begin
    conv_u2u_6_8 = {{2{1'b0}}, vector};
  end
  endfunction


  function signed [2:0] conv_u2s_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2s_2_3 = {1'b0, vector};
  end
  endfunction


  function signed [11:0] conv_s2s_10_12 ;
    input signed [9:0]  vector ;
  begin
    conv_s2s_10_12 = {{2{vector[9]}}, vector};
  end
  endfunction


  function signed [9:0] conv_u2s_9_10 ;
    input [8:0]  vector ;
  begin
    conv_u2s_9_10 = {1'b0, vector};
  end
  endfunction


  function signed [9:0] conv_s2s_8_10 ;
    input signed [7:0]  vector ;
  begin
    conv_s2s_8_10 = {{2{vector[7]}}, vector};
  end
  endfunction


  function signed [8:0] conv_u2s_8_9 ;
    input [7:0]  vector ;
  begin
    conv_u2s_8_9 = {1'b0, vector};
  end
  endfunction


  function signed [8:0] conv_s2s_7_9 ;
    input signed [6:0]  vector ;
  begin
    conv_s2s_7_9 = {{2{vector[6]}}, vector};
  end
  endfunction


  function signed [6:0] conv_s2s_5_7 ;
    input signed [4:0]  vector ;
  begin
    conv_s2s_5_7 = {{2{vector[4]}}, vector};
  end
  endfunction


  function signed [4:0] conv_s2s_4_5 ;
    input signed [3:0]  vector ;
  begin
    conv_s2s_4_5 = {vector[3], vector};
  end
  endfunction


  function signed [3:0] conv_u2s_3_4 ;
    input [2:0]  vector ;
  begin
    conv_u2s_3_4 = {1'b0, vector};
  end
  endfunction


  function signed [3:0] conv_s2s_3_4 ;
    input signed [2:0]  vector ;
  begin
    conv_s2s_3_4 = {vector[2], vector};
  end
  endfunction


  function signed [4:0] conv_s2s_3_5 ;
    input signed [2:0]  vector ;
  begin
    conv_s2s_3_5 = {{2{vector[2]}}, vector};
  end
  endfunction


  function signed [6:0] conv_u2s_5_7 ;
    input [4:0]  vector ;
  begin
    conv_u2s_5_7 = {{2{1'b0}}, vector};
  end
  endfunction


  function  [4:0] conv_u2u_4_5 ;
    input [3:0]  vector ;
  begin
    conv_u2u_4_5 = {1'b0, vector};
  end
  endfunction


  function  [3:0] conv_u2u_3_4 ;
    input [2:0]  vector ;
  begin
    conv_u2u_3_4 = {1'b0, vector};
  end
  endfunction


  function  [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction


  function  [4:0] conv_u2u_3_5 ;
    input [2:0]  vector ;
  begin
    conv_u2u_3_5 = {{2{1'b0}}, vector};
  end
  endfunction


  function signed [2:0] conv_s2s_2_3 ;
    input signed [1:0]  vector ;
  begin
    conv_s2s_2_3 = {vector[1], vector};
  end
  endfunction


  function signed [1:0] conv_s2s_1_2 ;
    input signed [0:0]  vector ;
  begin
    conv_s2s_1_2 = {vector[0], vector};
  end
  endfunction


  function signed [1:0] conv_u2s_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2s_1_2 = {1'b0, vector};
  end
  endfunction


  function signed [11:0] conv_s2s_11_12 ;
    input signed [10:0]  vector ;
  begin
    conv_s2s_11_12 = {vector[10], vector};
  end
  endfunction


  function signed [9:0] conv_s2s_9_10 ;
    input signed [8:0]  vector ;
  begin
    conv_s2s_9_10 = {vector[8], vector};
  end
  endfunction


  function signed [7:0] conv_u2s_7_8 ;
    input [6:0]  vector ;
  begin
    conv_u2s_7_8 = {1'b0, vector};
  end
  endfunction


  function signed [7:0] conv_s2s_7_8 ;
    input signed [6:0]  vector ;
  begin
    conv_s2s_7_8 = {vector[6], vector};
  end
  endfunction


  function signed [4:0] conv_u2s_3_5 ;
    input [2:0]  vector ;
  begin
    conv_u2s_3_5 = {{2{1'b0}}, vector};
  end
  endfunction


  function signed [8:0] conv_u2s_7_9 ;
    input [6:0]  vector ;
  begin
    conv_u2s_7_9 = {{2{1'b0}}, vector};
  end
  endfunction


  function signed [13:0] conv_s2s_13_14 ;
    input signed [12:0]  vector ;
  begin
    conv_s2s_13_14 = {vector[12], vector};
  end
  endfunction


  function  [11:0] conv_s2u_11_12 ;
    input signed [10:0]  vector ;
  begin
    conv_s2u_11_12 = {vector[10], vector};
  end
  endfunction


  function  [7:0] conv_s2u_16_8 ;
    input signed [15:0]  vector ;
  begin
    conv_s2u_16_8 = vector[7:0];
  end
  endfunction


  function signed [7:0] conv_s2s_2_8 ;
    input signed [1:0]  vector ;
  begin
    conv_s2s_2_8 = {{6{vector[1]}}, vector};
  end
  endfunction


  function signed [12:0] conv_s2s_12_13 ;
    input signed [11:0]  vector ;
  begin
    conv_s2s_12_13 = {vector[11], vector};
  end
  endfunction


  function  [10:0] conv_s2u_10_11 ;
    input signed [9:0]  vector ;
  begin
    conv_s2u_10_11 = {vector[9], vector};
  end
  endfunction


  function  [5:0] conv_s2u_12_6 ;
    input signed [11:0]  vector ;
  begin
    conv_s2u_12_6 = vector[5:0];
  end
  endfunction


  function signed [5:0] conv_s2s_2_6 ;
    input signed [1:0]  vector ;
  begin
    conv_s2s_2_6 = {{4{vector[1]}}, vector};
  end
  endfunction


  function signed [6:0] conv_s2s_6_7 ;
    input signed [5:0]  vector ;
  begin
    conv_s2s_6_7 = {vector[5], vector};
  end
  endfunction


  function signed [5:0] conv_s2s_12_6 ;
    input signed [11:0]  vector ;
  begin
    conv_s2s_12_6 = vector[5:0];
  end
  endfunction


  function signed [6:0] conv_u2s_6_7 ;
    input [5:0]  vector ;
  begin
    conv_u2s_6_7 = {1'b0, vector};
  end
  endfunction


  function  [10:0] conv_s2u_9_11 ;
    input signed [8:0]  vector ;
  begin
    conv_s2u_9_11 = {{2{vector[8]}}, vector};
  end
  endfunction


  function signed [8:0] conv_s2s_8_9 ;
    input signed [7:0]  vector ;
  begin
    conv_s2s_8_9 = {vector[7], vector};
  end
  endfunction


  function signed [7:0] conv_s2s_16_8 ;
    input signed [15:0]  vector ;
  begin
    conv_s2s_16_8 = vector[7:0];
  end
  endfunction


  function  [7:0] conv_s2u_7_8 ;
    input signed [6:0]  vector ;
  begin
    conv_s2u_7_8 = {vector[6], vector};
  end
  endfunction


  function signed [5:0] conv_u2s_4_6 ;
    input [3:0]  vector ;
  begin
    conv_u2s_4_6 = {{2{1'b0}}, vector};
  end
  endfunction


  function signed [5:0] conv_s2s_3_6 ;
    input signed [2:0]  vector ;
  begin
    conv_s2s_3_6 = {{3{vector[2]}}, vector};
  end
  endfunction


  function signed [6:0] conv_u2s_4_7 ;
    input [3:0]  vector ;
  begin
    conv_u2s_4_7 = {{3{1'b0}}, vector};
  end
  endfunction


  function  [6:0] conv_u2u_5_7 ;
    input [4:0]  vector ;
  begin
    conv_u2u_5_7 = {{2{1'b0}}, vector};
  end
  endfunction


  function  [6:0] conv_s2u_5_7 ;
    input signed [4:0]  vector ;
  begin
    conv_s2u_5_7 = {{2{vector[4]}}, vector};
  end
  endfunction


  function  [9:0] conv_s2u_20_10 ;
    input signed [19:0]  vector ;
  begin
    conv_s2u_20_10 = vector[9:0];
  end
  endfunction


  function signed [9:0] conv_s2s_2_10 ;
    input signed [1:0]  vector ;
  begin
    conv_s2s_2_10 = {{8{vector[1]}}, vector};
  end
  endfunction


  function  [5:0] conv_u2u_5_6 ;
    input [4:0]  vector ;
  begin
    conv_u2u_5_6 = {1'b0, vector};
  end
  endfunction


  function signed [5:0] conv_s2s_4_6 ;
    input signed [3:0]  vector ;
  begin
    conv_s2s_4_6 = {{2{vector[3]}}, vector};
  end
  endfunction


  function  [3:0] conv_u2u_2_4 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_4 = {{2{1'b0}}, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    mean_vga
//  Generated from file(s):
//    3) $PROJECT_HOME/../sobel_filter_source/blur_sob.c
// ------------------------------------------------------------------


module mean_vga (
  vin_rsc_z, vout_rsc_z, clk, en, arst_n
);
  input [89:0] vin_rsc_z;
  output [29:0] vout_rsc_z;
  input clk;
  input en;
  input arst_n;


  // Interconnect Declarations
  wire [89:0] vin_rsc_mgc_in_wire_d;
  wire [29:0] vout_rsc_mgc_out_stdreg_d;


  // Interconnect Declarations for Component Instantiations 
  mgc_in_wire #(.rscid(1),
  .width(90)) vin_rsc_mgc_in_wire (
      .d(vin_rsc_mgc_in_wire_d),
      .z(vin_rsc_z)
    );
  mgc_out_stdreg #(.rscid(2),
  .width(30)) vout_rsc_mgc_out_stdreg (
      .d(vout_rsc_mgc_out_stdreg_d),
      .z(vout_rsc_z)
    );
  mean_vga_core mean_vga_core_inst (
      .clk(clk),
      .en(en),
      .arst_n(arst_n),
      .vin_rsc_mgc_in_wire_d(vin_rsc_mgc_in_wire_d),
      .vout_rsc_mgc_out_stdreg_d(vout_rsc_mgc_out_stdreg_d)
    );
endmodule



