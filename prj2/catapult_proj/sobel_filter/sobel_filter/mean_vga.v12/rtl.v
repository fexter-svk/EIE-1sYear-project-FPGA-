// ----------------------------------------------------------------------
//  HLS HDL:        Verilog Netlister
//  HLS Version:    2011a.126 Production Release
//  HLS Date:       Wed Aug  8 00:52:07 PDT 2012
// 
//  Generated by:   gsp14@EEWS104A-018
//  Generated date: Fri Mar 18 16:39:34 2016
// ----------------------------------------------------------------------

// 
// ------------------------------------------------------------------
//  Design Unit:    mean_vga_core
// ------------------------------------------------------------------


module mean_vga_core (
  clk, en, arst_n, vin_rsc_mgc_in_wire_d, vout_rsc_mgc_out_stdreg_d
);
  input clk;
  input en;
  input arst_n;
  input [89:0] vin_rsc_mgc_in_wire_d;
  output [29:0] vout_rsc_mgc_out_stdreg_d;
  reg [29:0] vout_rsc_mgc_out_stdreg_d;


  // Interconnect Declarations
  wire [2:0] sqrt_for_1_t_acc_tmp;
  wire [3:0] nl_sqrt_for_1_t_acc_tmp;
  reg [1:0] sqrt_d_sg2_5_lpi_1_dfm_1;
  reg [1:0] sqrt_d_sg1_5_lpi_1_dfm_1;
  reg [1:0] sqrt_d_6_lpi_1_dfm_1;
  reg [9:0] regs_regs_slc_regs_regs_2_1_itm;
  reg [9:0] regs_regs_slc_regs_regs_2_2_itm;
  reg [9:0] regs_regs_slc_regs_regs_2_itm;
  reg [9:0] regs_regs_slc_regs_regs_2_4_itm;
  reg [9:0] regs_regs_slc_regs_regs_2_5_itm;
  reg [9:0] regs_regs_slc_regs_regs_2_3_itm;
  reg [9:0] regs_regs_slc_regs_regs_2_7_itm;
  reg [9:0] regs_regs_slc_regs_regs_2_8_itm;
  reg [9:0] regs_regs_slc_regs_regs_2_6_itm;
  reg [12:0] ACC1_if_2_acc_39_itm_1;
  wire [13:0] nl_ACC1_if_2_acc_39_itm_1;
  reg [9:0] ACC1_if_2_mul_2_itm_1;
  wire [19:0] nl_ACC1_if_2_mul_2_itm_1;
  reg [7:0] ACC1_if_2_mul_4_itm_1;
  wire [15:0] nl_ACC1_if_2_mul_4_itm_1;
  reg ACC1_2_slc_acc_idiv_2_45_itm_1;
  reg [12:0] ACC1_if_acc_52_itm_1;
  wire [13:0] nl_ACC1_if_acc_52_itm_1;
  reg [12:0] ACC1_if_acc_51_itm_1;
  wire [13:0] nl_ACC1_if_acc_51_itm_1;
  reg [1:0] sqrt_for_1_slc_sqrt_z_11_itm_1;
  reg [1:0] sqrt_for_1_slc_sqrt_z_13_itm_1;
  reg [1:0] sqrt_for_1_slc_sqrt_z_2_itm_1;
  reg main_stage_0_2;
  reg main_stage_0_3;
  reg sqrt_for_1_t_acc_psp_sva_1_sg1;
  reg sqrt_for_2_t_acc_psp_sva_1_sg1;
  reg sqrt_for_3_t_acc_psp_sva_1_sg1;
  reg sqrt_for_4_t_acc_psp_sva_1_sg1;
  reg sqrt_for_t_5_sva_1_sg1;
  reg sqrt_for_t_6_sva_1_sg2;
  reg [7:0] sqrt_for_t_6_sva_2;
  reg [9:0] ACC1_if_2_acc_35_itm_1_sg1;
  wire [11:0] nl_ACC1_if_2_acc_35_itm_1_sg1;
  wire [1:0] sqrt_d_sg2_6_lpi_1_dfm_mx0;
  wire [1:0] sqrt_d_sg1_6_lpi_1_dfm_mx0;
  wire [1:0] sqrt_d_7_lpi_1_dfm_mx0;
  reg [89:0] reg_regs_regs_0_sva_cse;
  wire [10:0] sqrt_for_t_acc_5_itm;
  wire [11:0] nl_sqrt_for_t_acc_5_itm;
  wire [10:0] sqrt_for_t_acc_4_itm;
  wire [11:0] nl_sqrt_for_t_acc_4_itm;
  wire [10:0] sqrt_for_t_acc_3_itm;
  wire [11:0] nl_sqrt_for_t_acc_3_itm;
  wire [5:0] sqrt_for_t_acc_itm;
  wire [6:0] nl_sqrt_for_t_acc_itm;
  wire [7:0] sqrt_for_t_acc_1_itm;
  wire [8:0] nl_sqrt_for_t_acc_1_itm;
  wire [9:0] sqrt_for_t_acc_2_itm;
  wire [10:0] nl_sqrt_for_t_acc_2_itm;
  wire [1:0] sqrt_d_sg2_5_lpi_1_dfm_1_mx0;
  wire [1:0] sqrt_d_6_lpi_1_dfm_1_mx0;
  wire [1:0] sqrt_d_sg1_5_lpi_1_dfm_1_mx0;
  wire [15:0] sqrt_z_1_sva;
  wire [16:0] nl_sqrt_z_1_sva;
  wire [1:0] sqrt_d_sg2_4_lpi_1_dfm_mx0;
  wire [1:0] sqrt_d_5_lpi_1_dfm_mx0;
  wire [1:0] sqrt_d_sg1_4_lpi_1_dfm_mx0;
  wire [1:0] sqrt_d_sg2_3_lpi_1_dfm_mx0;
  wire [1:0] sqrt_d_4_lpi_1_dfm_mx0;
  wire [1:0] sqrt_d_sg1_3_lpi_1_dfm_mx0;
  wire [1:0] sqrt_d_3_lpi_1_dfm_mx0;
  wire [1:0] sqrt_d_sg1_2_lpi_1_dfm_mx0;
  wire [1:0] sqrt_d_2_lpi_1_dfm_mx0;
  wire [13:0] ACC1_if_acc_psp_sva;
  wire [14:0] nl_ACC1_if_acc_psp_sva;
  wire [13:0] ACC1_3_if_2_acc_psp_sva;
  wire [14:0] nl_ACC1_3_if_2_acc_psp_sva;
  wire [11:0] acc_4_psp_sva;
  wire [12:0] nl_acc_4_psp_sva;
  wire [11:0] acc_4_psp_1_sva;
  wire [12:0] nl_acc_4_psp_1_sva;
  wire [11:0] ACC1_acc_10_psp_sva;
  wire [12:0] nl_ACC1_acc_10_psp_sva;
  wire [3:0] acc_5_psp_sva;
  wire [4:0] nl_acc_5_psp_sva;
  wire [2:0] acc_imod_4_sva;
  wire [3:0] nl_acc_imod_4_sva;
  wire [3:0] acc_5_psp_1_sva;
  wire [4:0] nl_acc_5_psp_1_sva;
  wire [2:0] acc_imod_11_sva;
  wire [3:0] nl_acc_imod_11_sva;
  wire [11:0] ACC1_acc_8_psp_1_sva;
  wire [12:0] nl_ACC1_acc_8_psp_1_sva;
  wire [11:0] ACC1_if_acc_2_psp_sva;
  wire [12:0] nl_ACC1_if_acc_2_psp_sva;
  wire [11:0] ACC1_acc_8_psp_sva;
  wire [12:0] nl_ACC1_acc_8_psp_sva;
  wire [11:0] acc_8_psp_2_sva;
  wire [12:0] nl_acc_8_psp_2_sva;
  wire [11:0] acc_psp_2_sva;
  wire [12:0] nl_acc_psp_2_sva;
  wire [3:0] acc_9_psp_2_sva;
  wire [4:0] nl_acc_9_psp_2_sva;
  wire [3:0] acc_1_psp_2_sva;
  wire [4:0] nl_acc_1_psp_2_sva;
  wire [2:0] acc_imod_10_sva;
  wire [3:0] nl_acc_imod_10_sva;
  wire [2:0] acc_imod_14_sva;
  wire [3:0] nl_acc_imod_14_sva;
  wire [11:0] acc_8_psp_sva;
  wire [12:0] nl_acc_8_psp_sva;
  wire [2:0] acc_imod_7_sva;
  wire [3:0] nl_acc_imod_7_sva;
  wire [3:0] acc_9_psp_sva;
  wire [4:0] nl_acc_9_psp_sva;
  wire [11:0] acc_psp_sva;
  wire [12:0] nl_acc_psp_sva;
  wire [2:0] acc_imod_1_sva;
  wire [3:0] nl_acc_imod_1_sva;
  wire [3:0] acc_1_psp_sva;
  wire [4:0] nl_acc_1_psp_sva;
  wire [11:0] acc_8_psp_1_sva;
  wire [12:0] nl_acc_8_psp_1_sva;
  wire [2:0] acc_imod_13_sva;
  wire [3:0] nl_acc_imod_13_sva;
  wire [3:0] acc_9_psp_1_sva;
  wire [4:0] nl_acc_9_psp_1_sva;
  wire [11:0] acc_psp_1_sva;
  wire [12:0] nl_acc_psp_1_sva;
  wire [2:0] acc_imod_9_sva;
  wire [3:0] nl_acc_imod_9_sva;
  wire [3:0] acc_1_psp_1_sva;
  wire [4:0] nl_acc_1_psp_1_sva;
  wire [10:0] sqrt_for_t_acc_6_itm;
  wire [11:0] nl_sqrt_for_t_acc_6_itm;

  wire[1:0] sqrt_for_mux_14_nl;
  wire[1:0] sqrt_for_mux_10_nl;
  wire[1:0] sqrt_for_mux_6_nl;
  wire[1:0] sqrt_for_mux_18_nl;
  wire[1:0] sqrt_for_mux_20_nl;
  wire[1:0] sqrt_for_mux_21_nl;
  wire[1:0] sqrt_for_mux_19_nl;

  // Interconnect Declarations for Component Instantiations 
  assign sqrt_for_mux_14_nl = MUX_v_2_2_2({(sqrt_for_t_6_sva_2[7:6]) , sqrt_d_sg2_5_lpi_1_dfm_1},
      sqrt_for_t_6_sva_1_sg2);
  assign nl_sqrt_for_t_acc_5_itm = ({(sqrt_for_mux_14_nl) , sqrt_d_sg2_6_lpi_1_dfm_mx0
      , sqrt_d_sg1_6_lpi_1_dfm_mx0 , sqrt_d_7_lpi_1_dfm_mx0 , sqrt_for_1_slc_sqrt_z_13_itm_1
      , 1'b1}) + conv_s2u_10_11({1'b1 , sqrt_for_1_t_acc_psp_sva_1_sg1 , sqrt_for_2_t_acc_psp_sva_1_sg1
      , sqrt_for_3_t_acc_psp_sva_1_sg1 , sqrt_for_4_t_acc_psp_sva_1_sg1 , sqrt_for_t_5_sva_1_sg1
      , sqrt_for_t_6_sva_1_sg2 , 3'b101});
  assign sqrt_for_t_acc_5_itm = nl_sqrt_for_t_acc_5_itm[10:0];
  assign sqrt_d_sg2_6_lpi_1_dfm_mx0 = MUX_v_2_2_2({(sqrt_for_t_6_sva_2[5:4]) , sqrt_d_sg1_5_lpi_1_dfm_1},
      sqrt_for_t_6_sva_1_sg2);
  assign sqrt_d_sg1_6_lpi_1_dfm_mx0 = MUX_v_2_2_2({(sqrt_for_t_6_sva_2[3:2]) , sqrt_d_6_lpi_1_dfm_1},
      sqrt_for_t_6_sva_1_sg2);
  assign sqrt_d_7_lpi_1_dfm_mx0 = MUX_v_2_2_2({(sqrt_for_t_6_sva_2[1:0]) , sqrt_for_1_slc_sqrt_z_11_itm_1},
      sqrt_for_t_6_sva_1_sg2);
  assign sqrt_d_sg2_5_lpi_1_dfm_1_mx0 = MUX_v_2_2_2({(sqrt_for_t_acc_3_itm[6:5])
      , sqrt_d_sg1_4_lpi_1_dfm_mx0}, sqrt_for_t_acc_3_itm[10]);
  assign sqrt_d_6_lpi_1_dfm_1_mx0 = MUX_v_2_2_2({(sqrt_for_t_acc_3_itm[2:1]) , (sqrt_z_1_sva[7:6])},
      sqrt_for_t_acc_3_itm[10]);
  assign sqrt_d_sg1_5_lpi_1_dfm_1_mx0 = MUX_v_2_2_2({(sqrt_for_t_acc_3_itm[4:3])
      , sqrt_d_5_lpi_1_dfm_mx0}, sqrt_for_t_acc_3_itm[10]);
  assign sqrt_for_mux_10_nl = MUX_v_2_2_2({(sqrt_for_t_acc_3_itm[8:7]) , sqrt_d_sg2_4_lpi_1_dfm_mx0},
      sqrt_for_t_acc_3_itm[10]);
  assign nl_sqrt_for_t_acc_4_itm = ({(sqrt_for_mux_10_nl) , sqrt_d_sg2_5_lpi_1_dfm_1_mx0
      , sqrt_d_sg1_5_lpi_1_dfm_1_mx0 , sqrt_d_6_lpi_1_dfm_1_mx0 , (sqrt_z_1_sva[5:4])
      , 1'b1}) + conv_s2u_9_11({1'b1 , (sqrt_for_1_t_acc_tmp[2]) , (sqrt_for_t_acc_itm[5])
      , (sqrt_for_t_acc_1_itm[7]) , (sqrt_for_t_acc_2_itm[9]) , (sqrt_for_t_acc_3_itm[10])
      , 3'b101});
  assign sqrt_for_t_acc_4_itm = nl_sqrt_for_t_acc_4_itm[10:0];
  assign sqrt_for_mux_6_nl = MUX_v_2_2_2({(sqrt_for_t_acc_2_itm[8:7]) , sqrt_d_sg2_3_lpi_1_dfm_mx0},
      sqrt_for_t_acc_2_itm[9]);
  assign nl_sqrt_for_t_acc_3_itm = ({(sqrt_for_mux_6_nl) , sqrt_d_sg2_4_lpi_1_dfm_mx0
      , sqrt_d_sg1_4_lpi_1_dfm_mx0 , sqrt_d_5_lpi_1_dfm_mx0 , (sqrt_z_1_sva[7:6])
      , 1'b1}) + conv_s2u_8_11({1'b1 , (sqrt_for_1_t_acc_tmp[2]) , (sqrt_for_t_acc_itm[5])
      , (sqrt_for_t_acc_1_itm[7]) , (sqrt_for_t_acc_2_itm[9]) , 3'b101});
  assign sqrt_for_t_acc_3_itm = nl_sqrt_for_t_acc_3_itm[10:0];
  assign nl_sqrt_for_1_t_acc_tmp = conv_u2s_2_3(sqrt_z_1_sva[15:14]) + 3'b111;
  assign sqrt_for_1_t_acc_tmp = nl_sqrt_for_1_t_acc_tmp[2:0];
  assign nl_sqrt_for_t_acc_itm = conv_u2s_5_6({sqrt_d_2_lpi_1_dfm_mx0 , (sqrt_z_1_sva[13:12])
      , 1'b1}) + conv_s2s_5_6({1'b1 , (sqrt_for_1_t_acc_tmp[2]) , 3'b101});
  assign sqrt_for_t_acc_itm = nl_sqrt_for_t_acc_itm[5:0];
  assign nl_sqrt_for_t_acc_1_itm = conv_u2s_7_8({sqrt_d_sg1_2_lpi_1_dfm_mx0 , sqrt_d_3_lpi_1_dfm_mx0
      , (sqrt_z_1_sva[11:10]) , 1'b1}) + conv_s2s_6_8({1'b1 , (sqrt_for_1_t_acc_tmp[2])
      , (sqrt_for_t_acc_itm[5]) , 3'b101});
  assign sqrt_for_t_acc_1_itm = nl_sqrt_for_t_acc_1_itm[7:0];
  assign nl_sqrt_for_t_acc_2_itm = conv_u2s_9_10({sqrt_d_sg2_3_lpi_1_dfm_mx0 , sqrt_d_sg1_3_lpi_1_dfm_mx0
      , sqrt_d_4_lpi_1_dfm_mx0 , (sqrt_z_1_sva[9:8]) , 1'b1}) + conv_s2s_7_10({1'b1
      , (sqrt_for_1_t_acc_tmp[2]) , (sqrt_for_t_acc_itm[5]) , (sqrt_for_t_acc_1_itm[7])
      , 3'b101});
  assign sqrt_for_t_acc_2_itm = nl_sqrt_for_t_acc_2_itm[9:0];
  assign nl_sqrt_z_1_sva = conv_s2u_32_16(conv_s2s_14_16(ACC1_if_acc_psp_sva) * conv_s2s_14_16(ACC1_if_acc_psp_sva))
      + conv_s2u_32_16(conv_s2s_14_16(ACC1_3_if_2_acc_psp_sva) * conv_s2s_14_16(ACC1_3_if_2_acc_psp_sva));
  assign sqrt_z_1_sva = nl_sqrt_z_1_sva[15:0];
  assign sqrt_d_sg2_4_lpi_1_dfm_mx0 = MUX_v_2_2_2({(sqrt_for_t_acc_2_itm[6:5]) ,
      sqrt_d_sg1_3_lpi_1_dfm_mx0}, sqrt_for_t_acc_2_itm[9]);
  assign sqrt_d_5_lpi_1_dfm_mx0 = MUX_v_2_2_2({(sqrt_for_t_acc_2_itm[2:1]) , (sqrt_z_1_sva[9:8])},
      sqrt_for_t_acc_2_itm[9]);
  assign sqrt_d_sg1_4_lpi_1_dfm_mx0 = MUX_v_2_2_2({(sqrt_for_t_acc_2_itm[4:3]) ,
      sqrt_d_4_lpi_1_dfm_mx0}, sqrt_for_t_acc_2_itm[9]);
  assign sqrt_d_sg2_3_lpi_1_dfm_mx0 = MUX_v_2_2_2({(sqrt_for_t_acc_1_itm[6:5]) ,
      sqrt_d_sg1_2_lpi_1_dfm_mx0}, sqrt_for_t_acc_1_itm[7]);
  assign sqrt_d_4_lpi_1_dfm_mx0 = MUX_v_2_2_2({(sqrt_for_t_acc_1_itm[2:1]) , (sqrt_z_1_sva[11:10])},
      sqrt_for_t_acc_1_itm[7]);
  assign sqrt_d_sg1_3_lpi_1_dfm_mx0 = MUX_v_2_2_2({(sqrt_for_t_acc_1_itm[4:3]) ,
      sqrt_d_3_lpi_1_dfm_mx0}, sqrt_for_t_acc_1_itm[7]);
  assign sqrt_d_3_lpi_1_dfm_mx0 = MUX_v_2_2_2({(sqrt_for_t_acc_itm[2:1]) , (sqrt_z_1_sva[13:12])},
      sqrt_for_t_acc_itm[5]);
  assign sqrt_d_sg1_2_lpi_1_dfm_mx0 = MUX_v_2_2_2({(sqrt_for_t_acc_itm[4:3]) , sqrt_d_2_lpi_1_dfm_mx0},
      sqrt_for_t_acc_itm[5]);
  assign sqrt_d_2_lpi_1_dfm_mx0 = MUX_v_2_2_2({(sqrt_for_1_t_acc_tmp[1:0]) , (sqrt_z_1_sva[15:14])},
      sqrt_for_1_t_acc_tmp[2]);
  assign nl_ACC1_if_acc_psp_sva = conv_s2s_13_14(ACC1_if_acc_52_itm_1) + conv_s2s_13_14(ACC1_if_acc_51_itm_1);
  assign ACC1_if_acc_psp_sva = nl_ACC1_if_acc_psp_sva[13:0];
  assign nl_ACC1_3_if_2_acc_psp_sva = conv_s2s_13_14(ACC1_if_2_acc_39_itm_1) + conv_s2s_13_14({(conv_s2u_11_12(conv_s2s_10_11(ACC1_if_2_acc_35_itm_1_sg1)
      + conv_s2s_10_11(ACC1_if_2_mul_2_itm_1)) + conv_s2u_11_12({ACC1_if_2_mul_4_itm_1
      , 1'b0 , (signext_2_1(~ ACC1_2_slc_acc_idiv_2_45_itm_1))})) , 1'b1});
  assign ACC1_3_if_2_acc_psp_sva = nl_ACC1_3_if_2_acc_psp_sva[13:0];
  assign nl_acc_4_psp_sva = conv_u2u_11_12(conv_u2u_10_11(regs_regs_slc_regs_regs_2_4_itm)
      + conv_u2u_10_11(regs_regs_slc_regs_regs_2_5_itm)) + conv_u2u_10_12(regs_regs_slc_regs_regs_2_3_itm);
  assign acc_4_psp_sva = nl_acc_4_psp_sva[11:0];
  assign nl_acc_4_psp_1_sva = conv_u2u_11_12(conv_u2u_10_11(vin_rsc_mgc_in_wire_d[49:40])
      + conv_u2u_10_11(vin_rsc_mgc_in_wire_d[39:30])) + conv_u2u_10_12(vin_rsc_mgc_in_wire_d[59:50]);
  assign acc_4_psp_1_sva = nl_acc_4_psp_1_sva[11:0];
  assign nl_ACC1_acc_10_psp_sva = conv_u2s_10_12({(acc_8_psp_sva[11]) , (conv_u2u_8_9({(acc_8_psp_sva[11])
      , 1'b0 , (acc_8_psp_sva[11]) , 1'b0 , (acc_8_psp_sva[11]) , 1'b0 , (signext_2_1(acc_8_psp_sva[7]))})
      + conv_u2u_8_9(readslicef_9_8_1((({(acc_8_psp_sva[9]) , 1'b0 , (acc_8_psp_sva[9])
      , 1'b0 , (acc_8_psp_sva[9]) , 1'b0 , (signext_2_1(acc_8_psp_sva[5])) , 1'b1})
      + conv_u2u_8_9({(readslicef_8_7_1((conv_u2u_7_8({(acc_8_psp_sva[7]) , 1'b0
      , (acc_8_psp_sva[5]) , 1'b0 , (signext_2_1(acc_8_psp_sva[9])) , 1'b1}) + conv_u2u_6_8({(acc_8_psp_sva[6])
      , 1'b0 , (acc_8_psp_sva[6]) , 1'b0 , (acc_8_psp_sva[6]) , (acc_imod_7_sva[1])}))))
      , (~ (readslicef_3_1_2((({1'b1 , (acc_imod_7_sva[0]) , 1'b1}) + conv_u2s_2_3({(~
      (acc_imod_7_sva[1])) , (~ (acc_imod_7_sva[2]))})))))})))))}) + conv_s2s_10_12(conv_u2s_9_10({(acc_8_psp_sva[10])
      , 1'b0 , (acc_8_psp_sva[10]) , 1'b0 , (acc_8_psp_sva[10]) , 1'b0 , (acc_8_psp_sva[10])
      , 1'b0 , (acc_8_psp_sva[10])}) + conv_s2s_8_10(readslicef_9_8_1((conv_u2s_8_9({(acc_8_psp_sva[8])
      , 1'b0 , (acc_8_psp_sva[8]) , 1'b0 , (acc_8_psp_sva[8]) , 1'b0 , (acc_8_psp_sva[8])
      , 1'b1}) + conv_s2s_7_9({(readslicef_7_6_1((conv_s2s_5_7({(readslicef_5_4_1((conv_s2s_4_5({(readslicef_4_3_1((conv_u2s_3_4({(acc_8_psp_sva[3])
      , (acc_8_psp_sva[1]) , 1'b1}) + conv_s2s_3_4({1'b1 , (acc_8_psp_sva[2]) , (acc_8_psp_sva[3])}))))
      , 1'b1}) + conv_s2s_3_5({(acc_9_psp_sva[3:2]) , (acc_8_psp_sva[4])})))) , 1'b1})
      + conv_u2s_5_7({(acc_8_psp_sva[7]) , (acc_8_psp_sva[4]) , (signext_2_1(acc_8_psp_sva[11]))
      , (acc_9_psp_sva[1])})))) , (~ (acc_imod_7_sva[2]))})))));
  assign ACC1_acc_10_psp_sva = nl_ACC1_acc_10_psp_sva[11:0];
  assign nl_acc_5_psp_sva = (readslicef_5_4_1((conv_u2u_4_5({(readslicef_4_3_1((conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~
      (acc_4_psp_sva[3])) , 1'b1}) + conv_u2u_2_3({(acc_4_psp_sva[4]) , (acc_4_psp_sva[8])}))))
      , 1'b1}) + conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~ (acc_4_psp_sva[5]))
      , 1'b1}) + conv_u2u_2_3({(acc_4_psp_sva[6]) , (~ (acc_4_psp_sva[7]))})))) ,
      (acc_4_psp_sva[10])})))) , 1'b1}) + conv_u2u_3_5({(readslicef_3_2_1((conv_u2u_2_3({(~
      (acc_4_psp_sva[1])) , 1'b1}) + conv_u2u_2_3({(acc_4_psp_sva[2]) , (~ (acc_4_psp_sva[9]))}))))
      , (~ (acc_4_psp_sva[11]))})))) + ({3'b101 , (acc_4_psp_sva[0])});
  assign acc_5_psp_sva = nl_acc_5_psp_sva[3:0];
  assign nl_acc_imod_4_sva = conv_s2s_2_3(conv_s2s_1_2(acc_5_psp_sva[1]) + conv_u2s_1_2(acc_5_psp_sva[0]))
      + conv_s2s_2_3(acc_5_psp_sva[3:2]);
  assign acc_imod_4_sva = nl_acc_imod_4_sva[2:0];
  assign nl_acc_5_psp_1_sva = (readslicef_5_4_1((conv_u2u_4_5({(readslicef_4_3_1((conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~
      (acc_4_psp_1_sva[3])) , 1'b1}) + conv_u2u_2_3({(acc_4_psp_1_sva[4]) , (acc_4_psp_1_sva[8])}))))
      , 1'b1}) + conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~ (acc_4_psp_1_sva[5]))
      , 1'b1}) + conv_u2u_2_3({(acc_4_psp_1_sva[6]) , (~ (acc_4_psp_1_sva[7]))}))))
      , (acc_4_psp_1_sva[10])})))) , 1'b1}) + conv_u2u_3_5({(readslicef_3_2_1((conv_u2u_2_3({(~
      (acc_4_psp_1_sva[1])) , 1'b1}) + conv_u2u_2_3({(acc_4_psp_1_sva[2]) , (~ (acc_4_psp_1_sva[9]))}))))
      , (~ (acc_4_psp_1_sva[11]))})))) + ({3'b101 , (acc_4_psp_1_sva[0])});
  assign acc_5_psp_1_sva = nl_acc_5_psp_1_sva[3:0];
  assign nl_acc_imod_11_sva = conv_s2s_2_3(conv_s2s_1_2(acc_5_psp_1_sva[1]) + conv_u2s_1_2(acc_5_psp_1_sva[0]))
      + conv_s2s_2_3(acc_5_psp_1_sva[3:2]);
  assign acc_imod_11_sva = nl_acc_imod_11_sva[2:0];
  assign nl_ACC1_acc_8_psp_1_sva = conv_u2s_10_12({(acc_psp_1_sva[11]) , (conv_u2u_8_9({(acc_psp_1_sva[11])
      , 1'b0 , (acc_psp_1_sva[11]) , 1'b0 , (acc_psp_1_sva[11]) , 1'b0 , (signext_2_1(acc_psp_1_sva[7]))})
      + conv_u2u_8_9(readslicef_9_8_1((({(acc_psp_1_sva[9]) , 1'b0 , (acc_psp_1_sva[9])
      , 1'b0 , (acc_psp_1_sva[9]) , 1'b0 , (signext_2_1(acc_psp_1_sva[5])) , 1'b1})
      + conv_u2u_8_9({(readslicef_8_7_1((conv_u2u_7_8({(acc_psp_1_sva[7]) , 1'b0
      , (acc_psp_1_sva[5]) , 1'b0 , (signext_2_1(acc_psp_1_sva[9])) , 1'b1}) + conv_u2u_6_8({(acc_psp_1_sva[6])
      , 1'b0 , (acc_psp_1_sva[6]) , 1'b0 , (acc_psp_1_sva[6]) , (acc_imod_9_sva[1])}))))
      , (~ (readslicef_3_1_2((({1'b1 , (acc_imod_9_sva[0]) , 1'b1}) + conv_u2s_2_3({(~
      (acc_imod_9_sva[1])) , (~ (acc_imod_9_sva[2]))})))))})))))}) + conv_s2s_10_12(conv_u2s_9_10({(acc_psp_1_sva[10])
      , 1'b0 , (acc_psp_1_sva[10]) , 1'b0 , (acc_psp_1_sva[10]) , 1'b0 , (acc_psp_1_sva[10])
      , 1'b0 , (acc_psp_1_sva[10])}) + conv_s2s_8_10(readslicef_9_8_1((conv_u2s_8_9({(acc_psp_1_sva[8])
      , 1'b0 , (acc_psp_1_sva[8]) , 1'b0 , (acc_psp_1_sva[8]) , 1'b0 , (acc_psp_1_sva[8])
      , 1'b1}) + conv_s2s_7_9({(readslicef_7_6_1((conv_s2s_5_7({(readslicef_5_4_1((conv_s2s_4_5({(readslicef_4_3_1((conv_u2s_3_4({(acc_psp_1_sva[3])
      , (acc_psp_1_sva[1]) , 1'b1}) + conv_s2s_3_4({1'b1 , (acc_psp_1_sva[2]) , (acc_psp_1_sva[3])}))))
      , 1'b1}) + conv_s2s_3_5({(acc_1_psp_1_sva[3:2]) , (acc_psp_1_sva[4])})))) ,
      1'b1}) + conv_u2s_5_7({(acc_psp_1_sva[7]) , (acc_psp_1_sva[4]) , (signext_2_1(acc_psp_1_sva[11]))
      , (acc_1_psp_1_sva[1])})))) , (~ (acc_imod_9_sva[2]))})))));
  assign ACC1_acc_8_psp_1_sva = nl_ACC1_acc_8_psp_1_sva[11:0];
  assign nl_ACC1_if_acc_2_psp_sva = conv_s2s_11_12({1'b1 , (conv_u2s_9_10({(acc_8_psp_1_sva[11])
      , 1'b0 , (acc_8_psp_1_sva[11]) , 1'b0 , (signext_2_1(acc_8_psp_1_sva[11]))
      , 2'b0 , (acc_imod_13_sva[2])}) + ({1'b1 , (readslicef_10_9_1((({(acc_8_psp_1_sva[9])
      , 1'b0 , (acc_8_psp_1_sva[9]) , 1'b0 , (signext_2_1(acc_8_psp_1_sva[9])) ,
      2'b0 , (acc_8_psp_1_sva[3]) , 1'b1}) + conv_s2s_9_10({1'b1 , (readslicef_8_7_1((conv_u2s_7_8({4'b1010
      , (signext_2_1(~ (acc_8_psp_1_sva[7]))) , 1'b1}) + conv_s2s_7_8({(readslicef_7_6_1((conv_s2s_5_7({(readslicef_5_4_1((conv_s2s_3_5({(~
      (acc_9_psp_1_sva[3:2])) , 1'b1}) + conv_u2s_3_5(signext_3_2({(~ (acc_8_psp_1_sva[9]))
      , (~ (acc_8_psp_1_sva[1]))}))))) , 1'b1}) + conv_u2s_5_7({(~ (acc_8_psp_1_sva[7]))
      , (~ (acc_8_psp_1_sva[3])) , (signext_2_1(~ (acc_8_psp_1_sva[11]))) , (~ (acc_8_psp_1_sva[2]))}))))
      , (~ (acc_9_psp_1_sva[1]))})))) , (readslicef_3_1_2((({1'b1 , (acc_imod_13_sva[0])
      , 1'b1}) + conv_u2s_2_3({(~ (acc_imod_13_sva[1])) , (~ (acc_imod_13_sva[2]))}))))}))))}))})
      + conv_s2s_10_12(({(acc_8_psp_1_sva[10]) , 1'b0 , (acc_8_psp_1_sva[10]) , 1'b0
      , (acc_8_psp_1_sva[10]) , 1'b0 , (acc_8_psp_1_sva[10]) , 1'b0 , (signext_2_1(acc_8_psp_1_sva[10]))})
      + conv_s2s_8_10(readslicef_9_8_1((({(readslicef_9_8_1((conv_s2s_7_9({(acc_8_psp_1_sva[6])
      , 1'b0 , (acc_8_psp_1_sva[6]) , 1'b0 , (signext_2_1(acc_8_psp_1_sva[6])) ,
      1'b1}) + conv_u2s_7_9({(~ (acc_8_psp_1_sva[7])) , 1'b1 , (~ (acc_8_psp_1_sva[5:4]))
      , (signext_2_1(~ (acc_8_psp_1_sva[5]))) , (~ (acc_8_psp_1_sva[4]))})))) , 1'b1})
      + ({(acc_8_psp_1_sva[8]) , 1'b0 , (acc_8_psp_1_sva[8]) , 1'b0 , (acc_8_psp_1_sva[8])
      , 1'b0 , (signext_2_1(acc_8_psp_1_sva[8])) , (~ (acc_imod_13_sva[1]))})))));
  assign ACC1_if_acc_2_psp_sva = nl_ACC1_if_acc_2_psp_sva[11:0];
  assign nl_ACC1_acc_8_psp_sva = conv_u2s_10_12({(acc_psp_sva[11]) , (conv_u2u_8_9({(acc_psp_sva[11])
      , 1'b0 , (acc_psp_sva[11]) , 1'b0 , (acc_psp_sva[11]) , 1'b0 , (signext_2_1(acc_psp_sva[7]))})
      + conv_u2u_8_9(readslicef_9_8_1((({(acc_psp_sva[9]) , 1'b0 , (acc_psp_sva[9])
      , 1'b0 , (acc_psp_sva[9]) , 1'b0 , (signext_2_1(acc_psp_sva[5])) , 1'b1}) +
      conv_u2u_8_9({(readslicef_8_7_1((conv_u2u_7_8({(acc_psp_sva[7]) , 1'b0 , (acc_psp_sva[5])
      , 1'b0 , (signext_2_1(acc_psp_sva[9])) , 1'b1}) + conv_u2u_6_8({(acc_psp_sva[6])
      , 1'b0 , (acc_psp_sva[6]) , 1'b0 , (acc_psp_sva[6]) , (acc_imod_1_sva[1])}))))
      , (~ (readslicef_3_1_2((({1'b1 , (acc_imod_1_sva[0]) , 1'b1}) + conv_u2s_2_3({(~
      (acc_imod_1_sva[1])) , (~ (acc_imod_1_sva[2]))})))))})))))}) + conv_s2s_10_12(conv_u2s_9_10({(acc_psp_sva[10])
      , 1'b0 , (acc_psp_sva[10]) , 1'b0 , (acc_psp_sva[10]) , 1'b0 , (acc_psp_sva[10])
      , 1'b0 , (acc_psp_sva[10])}) + conv_s2s_8_10(readslicef_9_8_1((conv_u2s_8_9({(acc_psp_sva[8])
      , 1'b0 , (acc_psp_sva[8]) , 1'b0 , (acc_psp_sva[8]) , 1'b0 , (acc_psp_sva[8])
      , 1'b1}) + conv_s2s_7_9({(readslicef_7_6_1((conv_s2s_5_7({(readslicef_5_4_1((conv_s2s_4_5({(readslicef_4_3_1((conv_u2s_3_4({(acc_psp_sva[3])
      , (acc_psp_sva[1]) , 1'b1}) + conv_s2s_3_4({1'b1 , (acc_psp_sva[2]) , (acc_psp_sva[3])}))))
      , 1'b1}) + conv_s2s_3_5({(acc_1_psp_sva[3:2]) , (acc_psp_sva[4])})))) , 1'b1})
      + conv_u2s_5_7({(acc_psp_sva[7]) , (acc_psp_sva[4]) , (signext_2_1(acc_psp_sva[11]))
      , (acc_1_psp_sva[1])})))) , (~ (acc_imod_1_sva[2]))})))));
  assign ACC1_acc_8_psp_sva = nl_ACC1_acc_8_psp_sva[11:0];
  assign nl_acc_8_psp_2_sva = conv_u2u_11_12(conv_u2u_10_11(reg_regs_regs_0_sva_cse[79:70])
      + conv_u2u_10_11(reg_regs_regs_0_sva_cse[69:60])) + conv_u2u_10_12(reg_regs_regs_0_sva_cse[89:80]);
  assign acc_8_psp_2_sva = nl_acc_8_psp_2_sva[11:0];
  assign nl_acc_psp_2_sva = conv_u2u_11_12(conv_u2u_10_11(reg_regs_regs_0_sva_cse[19:10])
      + conv_u2u_10_11(reg_regs_regs_0_sva_cse[9:0])) + conv_u2u_10_12(reg_regs_regs_0_sva_cse[29:20]);
  assign acc_psp_2_sva = nl_acc_psp_2_sva[11:0];
  assign nl_acc_9_psp_2_sva = (readslicef_5_4_1((conv_u2u_4_5({(readslicef_4_3_1((conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~
      (acc_8_psp_2_sva[3])) , 1'b1}) + conv_u2u_2_3({(acc_8_psp_2_sva[4]) , (acc_8_psp_2_sva[8])}))))
      , 1'b1}) + conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~ (acc_8_psp_2_sva[5]))
      , 1'b1}) + conv_u2u_2_3({(acc_8_psp_2_sva[6]) , (~ (acc_8_psp_2_sva[7]))}))))
      , (acc_8_psp_2_sva[10])})))) , 1'b1}) + conv_u2u_3_5({(readslicef_3_2_1((conv_u2u_2_3({(~
      (acc_8_psp_2_sva[1])) , 1'b1}) + conv_u2u_2_3({(acc_8_psp_2_sva[2]) , (~ (acc_8_psp_2_sva[9]))}))))
      , (~ (acc_8_psp_2_sva[11]))})))) + ({3'b101 , (acc_8_psp_2_sva[0])});
  assign acc_9_psp_2_sva = nl_acc_9_psp_2_sva[3:0];
  assign nl_acc_1_psp_2_sva = (readslicef_5_4_1((conv_u2u_4_5({(readslicef_4_3_1((conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~
      (acc_psp_2_sva[3])) , 1'b1}) + conv_u2u_2_3({(acc_psp_2_sva[4]) , (acc_psp_2_sva[8])}))))
      , 1'b1}) + conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~ (acc_psp_2_sva[5]))
      , 1'b1}) + conv_u2u_2_3({(acc_psp_2_sva[6]) , (~ (acc_psp_2_sva[7]))})))) ,
      (acc_psp_2_sva[10])})))) , 1'b1}) + conv_u2u_3_5({(readslicef_3_2_1((conv_u2u_2_3({(~
      (acc_psp_2_sva[1])) , 1'b1}) + conv_u2u_2_3({(acc_psp_2_sva[2]) , (~ (acc_psp_2_sva[9]))}))))
      , (~ (acc_psp_2_sva[11]))})))) + ({3'b101 , (acc_psp_2_sva[0])});
  assign acc_1_psp_2_sva = nl_acc_1_psp_2_sva[3:0];
  assign nl_acc_imod_10_sva = conv_s2s_2_3(conv_s2s_1_2(acc_1_psp_2_sva[1]) + conv_u2s_1_2(acc_1_psp_2_sva[0]))
      + conv_s2s_2_3(acc_1_psp_2_sva[3:2]);
  assign acc_imod_10_sva = nl_acc_imod_10_sva[2:0];
  assign nl_acc_imod_14_sva = conv_s2s_2_3(conv_s2s_1_2(acc_9_psp_2_sva[1]) + conv_u2s_1_2(acc_9_psp_2_sva[0]))
      + conv_s2s_2_3(acc_9_psp_2_sva[3:2]);
  assign acc_imod_14_sva = nl_acc_imod_14_sva[2:0];
  assign nl_acc_8_psp_sva = conv_u2u_11_12(conv_u2u_10_11(regs_regs_slc_regs_regs_2_7_itm)
      + conv_u2u_10_11(regs_regs_slc_regs_regs_2_8_itm)) + conv_u2u_10_12(regs_regs_slc_regs_regs_2_6_itm);
  assign acc_8_psp_sva = nl_acc_8_psp_sva[11:0];
  assign nl_acc_imod_7_sva = conv_s2s_2_3(conv_s2s_1_2(acc_9_psp_sva[1]) + conv_u2s_1_2(acc_9_psp_sva[0]))
      + conv_s2s_2_3(acc_9_psp_sva[3:2]);
  assign acc_imod_7_sva = nl_acc_imod_7_sva[2:0];
  assign nl_acc_9_psp_sva = (readslicef_5_4_1((conv_u2u_4_5({(readslicef_4_3_1((conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~
      (acc_8_psp_sva[3])) , 1'b1}) + conv_u2u_2_3({(acc_8_psp_sva[4]) , (acc_8_psp_sva[8])}))))
      , 1'b1}) + conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~ (acc_8_psp_sva[5]))
      , 1'b1}) + conv_u2u_2_3({(acc_8_psp_sva[6]) , (~ (acc_8_psp_sva[7]))})))) ,
      (acc_8_psp_sva[10])})))) , 1'b1}) + conv_u2u_3_5({(readslicef_3_2_1((conv_u2u_2_3({(~
      (acc_8_psp_sva[1])) , 1'b1}) + conv_u2u_2_3({(acc_8_psp_sva[2]) , (~ (acc_8_psp_sva[9]))}))))
      , (~ (acc_8_psp_sva[11]))})))) + ({3'b101 , (acc_8_psp_sva[0])});
  assign acc_9_psp_sva = nl_acc_9_psp_sva[3:0];
  assign nl_acc_psp_sva = conv_u2u_11_12(conv_u2u_10_11(regs_regs_slc_regs_regs_2_1_itm)
      + conv_u2u_10_11(regs_regs_slc_regs_regs_2_2_itm)) + conv_u2u_10_12(regs_regs_slc_regs_regs_2_itm);
  assign acc_psp_sva = nl_acc_psp_sva[11:0];
  assign nl_acc_imod_1_sva = conv_s2s_2_3(conv_s2s_1_2(acc_1_psp_sva[1]) + conv_u2s_1_2(acc_1_psp_sva[0]))
      + conv_s2s_2_3(acc_1_psp_sva[3:2]);
  assign acc_imod_1_sva = nl_acc_imod_1_sva[2:0];
  assign nl_acc_1_psp_sva = (readslicef_5_4_1((conv_u2u_4_5({(readslicef_4_3_1((conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~
      (acc_psp_sva[3])) , 1'b1}) + conv_u2u_2_3({(acc_psp_sva[4]) , (acc_psp_sva[8])}))))
      , 1'b1}) + conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~ (acc_psp_sva[5]))
      , 1'b1}) + conv_u2u_2_3({(acc_psp_sva[6]) , (~ (acc_psp_sva[7]))})))) , (acc_psp_sva[10])}))))
      , 1'b1}) + conv_u2u_3_5({(readslicef_3_2_1((conv_u2u_2_3({(~ (acc_psp_sva[1]))
      , 1'b1}) + conv_u2u_2_3({(acc_psp_sva[2]) , (~ (acc_psp_sva[9]))})))) , (~
      (acc_psp_sva[11]))})))) + ({3'b101 , (acc_psp_sva[0])});
  assign acc_1_psp_sva = nl_acc_1_psp_sva[3:0];
  assign nl_acc_8_psp_1_sva = conv_u2u_11_12(conv_u2u_10_11(vin_rsc_mgc_in_wire_d[79:70])
      + conv_u2u_10_11(vin_rsc_mgc_in_wire_d[69:60])) + conv_u2u_10_12(vin_rsc_mgc_in_wire_d[89:80]);
  assign acc_8_psp_1_sva = nl_acc_8_psp_1_sva[11:0];
  assign nl_acc_imod_13_sva = conv_s2s_2_3(conv_s2s_1_2(acc_9_psp_1_sva[1]) + conv_u2s_1_2(acc_9_psp_1_sva[0]))
      + conv_s2s_2_3(acc_9_psp_1_sva[3:2]);
  assign acc_imod_13_sva = nl_acc_imod_13_sva[2:0];
  assign nl_acc_9_psp_1_sva = (readslicef_5_4_1((conv_u2u_4_5({(readslicef_4_3_1((conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~
      (acc_8_psp_1_sva[3])) , 1'b1}) + conv_u2u_2_3({(acc_8_psp_1_sva[4]) , (acc_8_psp_1_sva[8])}))))
      , 1'b1}) + conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~ (acc_8_psp_1_sva[5]))
      , 1'b1}) + conv_u2u_2_3({(acc_8_psp_1_sva[6]) , (~ (acc_8_psp_1_sva[7]))}))))
      , (acc_8_psp_1_sva[10])})))) , 1'b1}) + conv_u2u_3_5({(readslicef_3_2_1((conv_u2u_2_3({(~
      (acc_8_psp_1_sva[1])) , 1'b1}) + conv_u2u_2_3({(acc_8_psp_1_sva[2]) , (~ (acc_8_psp_1_sva[9]))}))))
      , (~ (acc_8_psp_1_sva[11]))})))) + ({3'b101 , (acc_8_psp_1_sva[0])});
  assign acc_9_psp_1_sva = nl_acc_9_psp_1_sva[3:0];
  assign nl_acc_psp_1_sva = conv_u2u_11_12(conv_u2u_10_11(vin_rsc_mgc_in_wire_d[19:10])
      + conv_u2u_10_11(vin_rsc_mgc_in_wire_d[9:0])) + conv_u2u_10_12(vin_rsc_mgc_in_wire_d[29:20]);
  assign acc_psp_1_sva = nl_acc_psp_1_sva[11:0];
  assign nl_acc_imod_9_sva = conv_s2s_2_3(conv_s2s_1_2(acc_1_psp_1_sva[1]) + conv_u2s_1_2(acc_1_psp_1_sva[0]))
      + conv_s2s_2_3(acc_1_psp_1_sva[3:2]);
  assign acc_imod_9_sva = nl_acc_imod_9_sva[2:0];
  assign nl_acc_1_psp_1_sva = (readslicef_5_4_1((conv_u2u_4_5({(readslicef_4_3_1((conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~
      (acc_psp_1_sva[3])) , 1'b1}) + conv_u2u_2_3({(acc_psp_1_sva[4]) , (acc_psp_1_sva[8])}))))
      , 1'b1}) + conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~ (acc_psp_1_sva[5]))
      , 1'b1}) + conv_u2u_2_3({(acc_psp_1_sva[6]) , (~ (acc_psp_1_sva[7]))})))) ,
      (acc_psp_1_sva[10])})))) , 1'b1}) + conv_u2u_3_5({(readslicef_3_2_1((conv_u2u_2_3({(~
      (acc_psp_1_sva[1])) , 1'b1}) + conv_u2u_2_3({(acc_psp_1_sva[2]) , (~ (acc_psp_1_sva[9]))}))))
      , (~ (acc_psp_1_sva[11]))})))) + ({3'b101 , (acc_psp_1_sva[0])});
  assign acc_1_psp_1_sva = nl_acc_1_psp_1_sva[3:0];
  assign sqrt_for_mux_18_nl = MUX_v_2_2_2({(sqrt_for_t_acc_5_itm[8:7]) , sqrt_d_sg2_6_lpi_1_dfm_mx0},
      sqrt_for_t_acc_5_itm[10]);
  assign sqrt_for_mux_20_nl = MUX_v_2_2_2({(sqrt_for_t_acc_5_itm[6:5]) , sqrt_d_sg1_6_lpi_1_dfm_mx0},
      sqrt_for_t_acc_5_itm[10]);
  assign sqrt_for_mux_21_nl = MUX_v_2_2_2({(sqrt_for_t_acc_5_itm[4:3]) , sqrt_d_7_lpi_1_dfm_mx0},
      sqrt_for_t_acc_5_itm[10]);
  assign sqrt_for_mux_19_nl = MUX_v_2_2_2({(sqrt_for_t_acc_5_itm[2:1]) , sqrt_for_1_slc_sqrt_z_13_itm_1},
      sqrt_for_t_acc_5_itm[10]);
  assign nl_sqrt_for_t_acc_6_itm = ({(sqrt_for_mux_18_nl) , (sqrt_for_mux_20_nl)
      , (sqrt_for_mux_21_nl) , (sqrt_for_mux_19_nl) , sqrt_for_1_slc_sqrt_z_2_itm_1
      , 1'b1}) + ({1'b1 , sqrt_for_1_t_acc_psp_sva_1_sg1 , sqrt_for_2_t_acc_psp_sva_1_sg1
      , sqrt_for_3_t_acc_psp_sva_1_sg1 , sqrt_for_4_t_acc_psp_sva_1_sg1 , sqrt_for_t_5_sva_1_sg1
      , sqrt_for_t_6_sva_1_sg2 , (sqrt_for_t_acc_5_itm[10]) , 3'b101});
  assign sqrt_for_t_acc_6_itm = nl_sqrt_for_t_acc_6_itm[10:0];
  always @(posedge clk or negedge arst_n) begin
    if ( ~ arst_n ) begin
      vout_rsc_mgc_out_stdreg_d <= 30'b0;
      sqrt_for_t_6_sva_1_sg2 <= 1'b0;
      sqrt_for_t_5_sva_1_sg1 <= 1'b0;
      sqrt_for_4_t_acc_psp_sva_1_sg1 <= 1'b0;
      sqrt_for_3_t_acc_psp_sva_1_sg1 <= 1'b0;
      sqrt_for_2_t_acc_psp_sva_1_sg1 <= 1'b0;
      sqrt_for_1_t_acc_psp_sva_1_sg1 <= 1'b0;
      sqrt_for_1_slc_sqrt_z_13_itm_1 <= 2'b0;
      sqrt_for_1_slc_sqrt_z_2_itm_1 <= 2'b0;
      sqrt_for_t_6_sva_2 <= 8'b0;
      sqrt_d_sg2_5_lpi_1_dfm_1 <= 2'b0;
      sqrt_for_1_slc_sqrt_z_11_itm_1 <= 2'b0;
      sqrt_d_6_lpi_1_dfm_1 <= 2'b0;
      sqrt_d_sg1_5_lpi_1_dfm_1 <= 2'b0;
      main_stage_0_2 <= 1'b0;
      main_stage_0_3 <= 1'b0;
      ACC1_if_acc_52_itm_1 <= 13'b0;
      ACC1_if_acc_51_itm_1 <= 13'b0;
      ACC1_if_2_acc_39_itm_1 <= 13'b0;
      ACC1_if_2_acc_35_itm_1_sg1 <= 10'b0;
      ACC1_if_2_mul_2_itm_1 <= 10'b0;
      ACC1_if_2_mul_4_itm_1 <= 8'b0;
      ACC1_2_slc_acc_idiv_2_45_itm_1 <= 1'b0;
      regs_regs_slc_regs_regs_2_7_itm <= 10'b0;
      regs_regs_slc_regs_regs_2_8_itm <= 10'b0;
      regs_regs_slc_regs_regs_2_6_itm <= 10'b0;
      regs_regs_slc_regs_regs_2_4_itm <= 10'b0;
      regs_regs_slc_regs_regs_2_5_itm <= 10'b0;
      regs_regs_slc_regs_regs_2_3_itm <= 10'b0;
      regs_regs_slc_regs_regs_2_1_itm <= 10'b0;
      regs_regs_slc_regs_regs_2_2_itm <= 10'b0;
      regs_regs_slc_regs_regs_2_itm <= 10'b0;
      reg_regs_regs_0_sva_cse <= 90'b0;
    end
    else begin
      if ( en ) begin
        vout_rsc_mgc_out_stdreg_d <= MUX_v_30_2_2({vout_rsc_mgc_out_stdreg_d , ({2'b0
            , (~ sqrt_for_1_t_acc_psp_sva_1_sg1) , (~ sqrt_for_2_t_acc_psp_sva_1_sg1)
            , (~ sqrt_for_3_t_acc_psp_sva_1_sg1) , (~ sqrt_for_4_t_acc_psp_sva_1_sg1)
            , (~ sqrt_for_t_5_sva_1_sg1) , (~ sqrt_for_t_6_sva_1_sg2) , (~ (sqrt_for_t_acc_5_itm[10]))
            , (~ (sqrt_for_t_acc_6_itm[10])) , 2'b0 , (~ sqrt_for_1_t_acc_psp_sva_1_sg1)
            , (~ sqrt_for_2_t_acc_psp_sva_1_sg1) , (~ sqrt_for_3_t_acc_psp_sva_1_sg1)
            , (~ sqrt_for_4_t_acc_psp_sva_1_sg1) , (~ sqrt_for_t_5_sva_1_sg1) , (~
            sqrt_for_t_6_sva_1_sg2) , (~ (sqrt_for_t_acc_5_itm[10])) , (~ (sqrt_for_t_acc_6_itm[10]))
            , 2'b0 , (~ sqrt_for_1_t_acc_psp_sva_1_sg1) , (~ sqrt_for_2_t_acc_psp_sva_1_sg1)
            , (~ sqrt_for_3_t_acc_psp_sva_1_sg1) , (~ sqrt_for_4_t_acc_psp_sva_1_sg1)
            , (~ sqrt_for_t_5_sva_1_sg1) , (~ sqrt_for_t_6_sva_1_sg2) , (~ (sqrt_for_t_acc_5_itm[10]))
            , (~ (sqrt_for_t_acc_6_itm[10]))})}, main_stage_0_3);
        sqrt_for_t_6_sva_1_sg2 <= sqrt_for_t_acc_4_itm[10];
        sqrt_for_t_5_sva_1_sg1 <= sqrt_for_t_acc_3_itm[10];
        sqrt_for_4_t_acc_psp_sva_1_sg1 <= sqrt_for_t_acc_2_itm[9];
        sqrt_for_3_t_acc_psp_sva_1_sg1 <= sqrt_for_t_acc_1_itm[7];
        sqrt_for_2_t_acc_psp_sva_1_sg1 <= sqrt_for_t_acc_itm[5];
        sqrt_for_1_t_acc_psp_sva_1_sg1 <= sqrt_for_1_t_acc_tmp[2];
        sqrt_for_1_slc_sqrt_z_13_itm_1 <= sqrt_z_1_sva[3:2];
        sqrt_for_1_slc_sqrt_z_2_itm_1 <= sqrt_z_1_sva[1:0];
        sqrt_for_t_6_sva_2 <= sqrt_for_t_acc_4_itm[8:1];
        sqrt_d_sg2_5_lpi_1_dfm_1 <= sqrt_d_sg2_5_lpi_1_dfm_1_mx0;
        sqrt_for_1_slc_sqrt_z_11_itm_1 <= sqrt_z_1_sva[5:4];
        sqrt_d_6_lpi_1_dfm_1 <= sqrt_d_6_lpi_1_dfm_1_mx0;
        sqrt_d_sg1_5_lpi_1_dfm_1 <= sqrt_d_sg1_5_lpi_1_dfm_1_mx0;
        main_stage_0_2 <= 1'b1;
        main_stage_0_3 <= main_stage_0_2;
        ACC1_if_acc_52_itm_1 <= nl_ACC1_if_acc_52_itm_1[12:0];
        ACC1_if_acc_51_itm_1 <= nl_ACC1_if_acc_51_itm_1[12:0];
        ACC1_if_2_acc_39_itm_1 <= nl_ACC1_if_2_acc_39_itm_1[12:0];
        ACC1_if_2_acc_35_itm_1_sg1 <= nl_ACC1_if_2_acc_35_itm_1_sg1[9:0];
        ACC1_if_2_mul_2_itm_1 <= nl_ACC1_if_2_mul_2_itm_1[9:0];
        ACC1_if_2_mul_4_itm_1 <= nl_ACC1_if_2_mul_4_itm_1[7:0];
        ACC1_2_slc_acc_idiv_2_45_itm_1 <= acc_8_psp_2_sva[11];
        regs_regs_slc_regs_regs_2_7_itm <= reg_regs_regs_0_sva_cse[79:70];
        regs_regs_slc_regs_regs_2_8_itm <= reg_regs_regs_0_sva_cse[69:60];
        regs_regs_slc_regs_regs_2_6_itm <= reg_regs_regs_0_sva_cse[89:80];
        regs_regs_slc_regs_regs_2_4_itm <= reg_regs_regs_0_sva_cse[49:40];
        regs_regs_slc_regs_regs_2_5_itm <= reg_regs_regs_0_sva_cse[39:30];
        regs_regs_slc_regs_regs_2_3_itm <= reg_regs_regs_0_sva_cse[59:50];
        regs_regs_slc_regs_regs_2_1_itm <= reg_regs_regs_0_sva_cse[19:10];
        regs_regs_slc_regs_regs_2_2_itm <= reg_regs_regs_0_sva_cse[9:0];
        regs_regs_slc_regs_regs_2_itm <= reg_regs_regs_0_sva_cse[29:20];
        reg_regs_regs_0_sva_cse <= vin_rsc_mgc_in_wire_d;
      end
    end
  end
  assign nl_ACC1_if_acc_52_itm_1  = ({(conv_s2u_11_12({conv_s2u_16_8(conv_s2s_2_8(conv_s2s_1_2(acc_4_psp_1_sva[11])
      + conv_u2s_1_2(acc_4_psp_sva[11])) * 8'b1010101) , 1'b0 , (signext_2_1(acc_4_psp_sva[11]))})
      + conv_s2u_11_12(~ (ACC1_acc_8_psp_1_sva[11:1]))) , (~ (ACC1_acc_8_psp_1_sva[0]))})
      + conv_s2s_12_13(ACC1_if_acc_2_psp_sva + ACC1_acc_8_psp_sva);
  assign nl_ACC1_if_acc_51_itm_1  = conv_s2s_12_13({(conv_s2u_10_11(conv_s2s_9_10({conv_s2u_12_6(conv_s2s_2_6(conv_s2s_1_2(acc_4_psp_1_sva[9])
      + conv_u2s_1_2(acc_4_psp_sva[9])) * 6'b10101) , 1'b0 , (signext_2_1(acc_4_psp_sva[5]))})
      + conv_s2s_8_10({1'b1 , ((conv_s2s_6_7(conv_s2s_12_6(conv_s2s_2_6(conv_s2s_1_2(acc_4_psp_1_sva[6])
      + conv_u2s_1_2(acc_4_psp_sva[6])) * 6'b10101)) + conv_u2s_6_7({(acc_4_psp_sva[7])
      , 1'b0 , (acc_4_psp_sva[5]) , 1'b0 , (signext_2_1(acc_4_psp_sva[9]))})) + conv_u2s_6_7({5'b10011
      , (acc_4_psp_sva[2])}))})) + (ACC1_acc_10_psp_sva[11:1])) , (ACC1_acc_10_psp_sva[0])})
      + conv_s2s_12_13({(conv_s2u_9_11(conv_s2s_8_9(conv_s2s_16_8(conv_s2s_2_8(conv_s2s_1_2(acc_4_psp_1_sva[8])
      + conv_u2s_1_2(acc_4_psp_sva[8])) * 8'b1010101)) + conv_u2s_7_9((readslicef_8_7_1((conv_s2u_7_8({(readslicef_7_6_1((conv_s2s_6_7({(readslicef_6_5_1((conv_u2s_4_6({(readslicef_4_3_1((conv_u2u_3_4(signext_3_2({(~
      (acc_4_psp_1_sva[9])) , 1'b1})) + conv_u2u_3_4({(acc_4_psp_sva[3]) , (acc_4_psp_1_sva[3])
      , (acc_imod_4_sva[1])})))) , 1'b1}) + conv_s2s_3_6({(readslicef_3_2_1((({1'b1
      , (~ (acc_4_psp_1_sva[2])) , 1'b1}) + conv_u2s_2_3({(~ (acc_4_psp_1_sva[4]))
      , (acc_5_psp_sva[1])})))) , (~ (readslicef_3_1_2((({1'b1 , (acc_imod_4_sva[0])
      , 1'b1}) + conv_u2s_2_3({(~ (acc_imod_4_sva[1])) , (~ (acc_imod_4_sva[2]))})))))}))))
      , 1'b1}) + conv_u2s_4_7({(readslicef_4_3_1((conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(acc_4_psp_sva[1])
      , 1'b1}) + conv_u2u_2_3({(acc_4_psp_sva[3]) , (acc_4_psp_sva[4])})))) , 1'b1})
      + conv_u2u_3_4(signext_3_2({(~ (acc_4_psp_1_sva[5])) , (~ (acc_imod_4_sva[2]))})))))
      , (~ (acc_5_psp_1_sva[1]))})))) , 1'b1}) + conv_u2u_7_8({(~ (acc_4_psp_1_sva[7]))
      , 1'b1 , (~ (acc_4_psp_1_sva[5:4])) , 1'b1 , (~ (acc_4_psp_1_sva[1])) , (~
      (acc_imod_11_sva[1]))})))) + (conv_u2u_5_7({(conv_u2u_2_3({(acc_4_psp_sva[7])
      , (acc_4_psp_sva[4])}) + conv_u2u_2_3({(~ (acc_4_psp_1_sva[7])) , (~ (acc_4_psp_1_sva[3]))}))
      , (~ (acc_4_psp_1_sva[7])) , (~ (acc_4_psp_1_sva[7]))}) + conv_s2u_5_7(conv_s2s_3_5(readslicef_4_3_1((conv_s2s_3_4({(acc_5_psp_sva[3:2])
      , 1'b1}) + conv_s2s_3_4({(~ (acc_5_psp_1_sva[3:2])) , (readslicef_3_1_2((({1'b1
      , (acc_imod_11_sva[0]) , 1'b1}) + conv_u2s_2_3({(~ (acc_imod_11_sva[1])) ,
      (~ (acc_imod_11_sva[2]))}))))})))) + conv_u2s_3_5(readslicef_4_3_1((conv_u2u_3_4(signext_3_2({(acc_4_psp_sva[7])
      , 1'b1})) + conv_u2u_3_4(signext_3_2({(~ (acc_4_psp_1_sva[11])) , (acc_imod_11_sva[2])})))))))))
      + conv_s2u_10_11(conv_s2u_20_10(conv_s2s_2_10(conv_s2s_1_2(acc_4_psp_1_sva[10])
      + conv_u2s_1_2(acc_4_psp_sva[10])) * 10'b101010101))) , 1'b1});
  assign nl_ACC1_if_2_acc_39_itm_1  = conv_s2s_12_13(ACC1_acc_8_psp_1_sva + ACC1_if_acc_2_psp_sva)
      + conv_s2s_12_13(ACC1_acc_8_psp_sva + (~ ACC1_acc_10_psp_sva));
  assign nl_ACC1_if_2_acc_35_itm_1_sg1  = conv_s2u_9_10(conv_s2s_8_9(conv_s2s_16_8(conv_s2s_2_8(conv_s2s_1_2(acc_8_psp_2_sva[8])
      + conv_u2s_1_2(acc_psp_2_sva[8])) * 8'b1010101) + conv_s2s_7_8(conv_s2s_6_7(conv_s2s_4_6(conv_s2s_2_4(~
      (acc_9_psp_2_sva[3:2])) + conv_u2s_2_4(signext_2_1(acc_psp_2_sva[5]))) + conv_u2s_4_6({(acc_psp_2_sva[7])
      , (acc_psp_2_sva[4]) , (signext_2_1(acc_psp_2_sva[11]))})) + conv_s2s_6_7(conv_s2s_12_6(conv_s2s_2_6(conv_s2s_1_2(acc_8_psp_2_sva[6])
      + conv_u2s_1_2(acc_psp_2_sva[6])) * 6'b10101)))) + conv_s2s_8_9((conv_s2u_7_8(readslicef_8_7_1((conv_s2s_6_8({(readslicef_6_5_1((conv_u2s_5_6({(readslicef_5_4_1((conv_u2u_4_5({(readslicef_4_3_1((conv_u2u_3_4({(acc_psp_2_sva[3])
      , (acc_psp_2_sva[1]) , 1'b1}) + conv_u2u_2_4({(acc_psp_2_sva[3]) , (acc_1_psp_2_sva[1])}))))
      , 1'b1}) + conv_u2u_3_5({(readslicef_3_2_1((conv_u2u_2_3({(acc_psp_2_sva[4])
      , 1'b1}) + conv_u2u_2_3({(acc_8_psp_2_sva[3]) , (~ (acc_8_psp_2_sva[4]))}))))
      , (~ (readslicef_3_1_2((({1'b1 , (acc_imod_10_sva[0]) , 1'b1}) + conv_u2s_2_3({(~
      (acc_imod_10_sva[1])) , (~ (acc_imod_10_sva[2]))})))))})))) , 1'b1}) + conv_s2s_5_6({(readslicef_5_4_1((conv_s2s_3_5({(acc_1_psp_2_sva[3:2])
      , 1'b1}) + conv_u2s_3_5(signext_3_2({(~ (acc_8_psp_2_sva[7])) , (~ (acc_imod_10_sva[2]))})))))
      , (~ (acc_imod_14_sva[1]))})))) , 1'b1}) + conv_u2s_7_8({(acc_psp_2_sva[7])
      , 1'b0 , (acc_psp_2_sva[5]) , 1'b0 , (signext_2_1(acc_psp_2_sva[7])) , (readslicef_3_1_2((({1'b1
      , (acc_imod_14_sva[0]) , 1'b1}) + conv_u2s_2_3({(~ (acc_imod_14_sva[1])) ,
      (~ (acc_imod_14_sva[2]))}))))})))) + conv_u2u_7_8(readslicef_8_7_1((conv_u2u_7_8({(~
      (acc_8_psp_2_sva[7])) , 1'b1 , (~ (acc_8_psp_2_sva[5:4])) , 1'b1 , (~ (acc_8_psp_2_sva[2]))
      , 1'b1}) + conv_u2u_6_8({(readslicef_6_5_1((conv_u2u_5_6({(~ (acc_8_psp_2_sva[7]))
      , (~ (acc_8_psp_2_sva[3])) , 1'b1 , (~ (acc_8_psp_2_sva[1])) , 1'b1}) + conv_u2u_4_6({(readslicef_4_3_1((conv_u2u_3_4(signext_3_2({(~
      (acc_8_psp_2_sva[9])) , 1'b1})) + conv_u2u_3_4(signext_3_2({(acc_psp_2_sva[9])
      , (acc_imod_10_sva[1])}))))) , (~ (acc_9_psp_2_sva[1]))})))) , (acc_imod_14_sva[2])})))))
      + ({7'b1010001 , (acc_psp_2_sva[2])}))) + conv_s2u_9_10({conv_s2u_12_6(conv_s2s_2_6(conv_s2s_1_2(acc_8_psp_2_sva[9])
      + conv_u2s_1_2(acc_psp_2_sva[9])) * 6'b10101) , 1'b0 , (signext_2_1(~ (acc_8_psp_2_sva[5])))});
  assign nl_ACC1_if_2_mul_2_itm_1  = conv_s2s_2_10(conv_s2s_1_2(acc_8_psp_2_sva[10])
      + conv_u2s_1_2(acc_psp_2_sva[10])) * 10'b101010101;
  assign nl_ACC1_if_2_mul_4_itm_1  = conv_s2s_2_8(conv_s2s_1_2(acc_8_psp_2_sva[11])
      + conv_u2s_1_2(acc_psp_2_sva[11])) * 8'b1010101;

  function [1:0] MUX_v_2_2_2;
    input [3:0] inputs;
    input [0:0] sel;
    reg [1:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[3:2];
      end
      1'b1 : begin
        result = inputs[1:0];
      end
      default : begin
        result = inputs[3:2];
      end
    endcase
    MUX_v_2_2_2 = result;
  end
  endfunction


  function [1:0] signext_2_1;
    input [0:0] vector;
  begin
    signext_2_1= {{1{vector[0]}}, vector};
  end
  endfunction


  function [7:0] readslicef_9_8_1;
    input [8:0] vector;
    reg [8:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_9_8_1 = tmp[7:0];
  end
  endfunction


  function [6:0] readslicef_8_7_1;
    input [7:0] vector;
    reg [7:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_8_7_1 = tmp[6:0];
  end
  endfunction


  function [0:0] readslicef_3_1_2;
    input [2:0] vector;
    reg [2:0] tmp;
  begin
    tmp = vector >> 2;
    readslicef_3_1_2 = tmp[0:0];
  end
  endfunction


  function [5:0] readslicef_7_6_1;
    input [6:0] vector;
    reg [6:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_7_6_1 = tmp[5:0];
  end
  endfunction


  function [3:0] readslicef_5_4_1;
    input [4:0] vector;
    reg [4:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_5_4_1 = tmp[3:0];
  end
  endfunction


  function [2:0] readslicef_4_3_1;
    input [3:0] vector;
    reg [3:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_4_3_1 = tmp[2:0];
  end
  endfunction


  function [1:0] readslicef_3_2_1;
    input [2:0] vector;
    reg [2:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_3_2_1 = tmp[1:0];
  end
  endfunction


  function [8:0] readslicef_10_9_1;
    input [9:0] vector;
    reg [9:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_10_9_1 = tmp[8:0];
  end
  endfunction


  function [2:0] signext_3_2;
    input [1:0] vector;
  begin
    signext_3_2= {{1{vector[1]}}, vector};
  end
  endfunction


  function [29:0] MUX_v_30_2_2;
    input [59:0] inputs;
    input [0:0] sel;
    reg [29:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[59:30];
      end
      1'b1 : begin
        result = inputs[29:0];
      end
      default : begin
        result = inputs[59:30];
      end
    endcase
    MUX_v_30_2_2 = result;
  end
  endfunction


  function [4:0] readslicef_6_5_1;
    input [5:0] vector;
    reg [5:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_6_5_1 = tmp[4:0];
  end
  endfunction


  function  [10:0] conv_s2u_10_11 ;
    input signed [9:0]  vector ;
  begin
    conv_s2u_10_11 = {vector[9], vector};
  end
  endfunction


  function  [10:0] conv_s2u_9_11 ;
    input signed [8:0]  vector ;
  begin
    conv_s2u_9_11 = {{2{vector[8]}}, vector};
  end
  endfunction


  function  [10:0] conv_s2u_8_11 ;
    input signed [7:0]  vector ;
  begin
    conv_s2u_8_11 = {{3{vector[7]}}, vector};
  end
  endfunction


  function signed [2:0] conv_u2s_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2s_2_3 = {1'b0, vector};
  end
  endfunction


  function signed [5:0] conv_u2s_5_6 ;
    input [4:0]  vector ;
  begin
    conv_u2s_5_6 = {1'b0, vector};
  end
  endfunction


  function signed [5:0] conv_s2s_5_6 ;
    input signed [4:0]  vector ;
  begin
    conv_s2s_5_6 = {vector[4], vector};
  end
  endfunction


  function signed [7:0] conv_u2s_7_8 ;
    input [6:0]  vector ;
  begin
    conv_u2s_7_8 = {1'b0, vector};
  end
  endfunction


  function signed [7:0] conv_s2s_6_8 ;
    input signed [5:0]  vector ;
  begin
    conv_s2s_6_8 = {{2{vector[5]}}, vector};
  end
  endfunction


  function signed [9:0] conv_u2s_9_10 ;
    input [8:0]  vector ;
  begin
    conv_u2s_9_10 = {1'b0, vector};
  end
  endfunction


  function signed [9:0] conv_s2s_7_10 ;
    input signed [6:0]  vector ;
  begin
    conv_s2s_7_10 = {{3{vector[6]}}, vector};
  end
  endfunction


  function  [15:0] conv_s2u_32_16 ;
    input signed [31:0]  vector ;
  begin
    conv_s2u_32_16 = vector[15:0];
  end
  endfunction


  function signed [15:0] conv_s2s_14_16 ;
    input signed [13:0]  vector ;
  begin
    conv_s2s_14_16 = {{2{vector[13]}}, vector};
  end
  endfunction


  function signed [13:0] conv_s2s_13_14 ;
    input signed [12:0]  vector ;
  begin
    conv_s2s_13_14 = {vector[12], vector};
  end
  endfunction


  function  [11:0] conv_s2u_11_12 ;
    input signed [10:0]  vector ;
  begin
    conv_s2u_11_12 = {vector[10], vector};
  end
  endfunction


  function signed [10:0] conv_s2s_10_11 ;
    input signed [9:0]  vector ;
  begin
    conv_s2s_10_11 = {vector[9], vector};
  end
  endfunction


  function  [11:0] conv_u2u_11_12 ;
    input [10:0]  vector ;
  begin
    conv_u2u_11_12 = {1'b0, vector};
  end
  endfunction


  function  [10:0] conv_u2u_10_11 ;
    input [9:0]  vector ;
  begin
    conv_u2u_10_11 = {1'b0, vector};
  end
  endfunction


  function  [11:0] conv_u2u_10_12 ;
    input [9:0]  vector ;
  begin
    conv_u2u_10_12 = {{2{1'b0}}, vector};
  end
  endfunction


  function signed [11:0] conv_u2s_10_12 ;
    input [9:0]  vector ;
  begin
    conv_u2s_10_12 = {{2{1'b0}}, vector};
  end
  endfunction


  function  [8:0] conv_u2u_8_9 ;
    input [7:0]  vector ;
  begin
    conv_u2u_8_9 = {1'b0, vector};
  end
  endfunction


  function  [7:0] conv_u2u_7_8 ;
    input [6:0]  vector ;
  begin
    conv_u2u_7_8 = {1'b0, vector};
  end
  endfunction


  function  [7:0] conv_u2u_6_8 ;
    input [5:0]  vector ;
  begin
    conv_u2u_6_8 = {{2{1'b0}}, vector};
  end
  endfunction


  function signed [11:0] conv_s2s_10_12 ;
    input signed [9:0]  vector ;
  begin
    conv_s2s_10_12 = {{2{vector[9]}}, vector};
  end
  endfunction


  function signed [9:0] conv_s2s_8_10 ;
    input signed [7:0]  vector ;
  begin
    conv_s2s_8_10 = {{2{vector[7]}}, vector};
  end
  endfunction


  function signed [8:0] conv_u2s_8_9 ;
    input [7:0]  vector ;
  begin
    conv_u2s_8_9 = {1'b0, vector};
  end
  endfunction


  function signed [8:0] conv_s2s_7_9 ;
    input signed [6:0]  vector ;
  begin
    conv_s2s_7_9 = {{2{vector[6]}}, vector};
  end
  endfunction


  function signed [6:0] conv_s2s_5_7 ;
    input signed [4:0]  vector ;
  begin
    conv_s2s_5_7 = {{2{vector[4]}}, vector};
  end
  endfunction


  function signed [4:0] conv_s2s_4_5 ;
    input signed [3:0]  vector ;
  begin
    conv_s2s_4_5 = {vector[3], vector};
  end
  endfunction


  function signed [3:0] conv_u2s_3_4 ;
    input [2:0]  vector ;
  begin
    conv_u2s_3_4 = {1'b0, vector};
  end
  endfunction


  function signed [3:0] conv_s2s_3_4 ;
    input signed [2:0]  vector ;
  begin
    conv_s2s_3_4 = {vector[2], vector};
  end
  endfunction


  function signed [4:0] conv_s2s_3_5 ;
    input signed [2:0]  vector ;
  begin
    conv_s2s_3_5 = {{2{vector[2]}}, vector};
  end
  endfunction


  function signed [6:0] conv_u2s_5_7 ;
    input [4:0]  vector ;
  begin
    conv_u2s_5_7 = {{2{1'b0}}, vector};
  end
  endfunction


  function  [4:0] conv_u2u_4_5 ;
    input [3:0]  vector ;
  begin
    conv_u2u_4_5 = {1'b0, vector};
  end
  endfunction


  function  [3:0] conv_u2u_3_4 ;
    input [2:0]  vector ;
  begin
    conv_u2u_3_4 = {1'b0, vector};
  end
  endfunction


  function  [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction


  function  [4:0] conv_u2u_3_5 ;
    input [2:0]  vector ;
  begin
    conv_u2u_3_5 = {{2{1'b0}}, vector};
  end
  endfunction


  function signed [2:0] conv_s2s_2_3 ;
    input signed [1:0]  vector ;
  begin
    conv_s2s_2_3 = {vector[1], vector};
  end
  endfunction


  function signed [1:0] conv_s2s_1_2 ;
    input signed [0:0]  vector ;
  begin
    conv_s2s_1_2 = {vector[0], vector};
  end
  endfunction


  function signed [1:0] conv_u2s_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2s_1_2 = {1'b0, vector};
  end
  endfunction


  function signed [11:0] conv_s2s_11_12 ;
    input signed [10:0]  vector ;
  begin
    conv_s2s_11_12 = {vector[10], vector};
  end
  endfunction


  function signed [9:0] conv_s2s_9_10 ;
    input signed [8:0]  vector ;
  begin
    conv_s2s_9_10 = {vector[8], vector};
  end
  endfunction


  function signed [7:0] conv_s2s_7_8 ;
    input signed [6:0]  vector ;
  begin
    conv_s2s_7_8 = {vector[6], vector};
  end
  endfunction


  function signed [4:0] conv_u2s_3_5 ;
    input [2:0]  vector ;
  begin
    conv_u2s_3_5 = {{2{1'b0}}, vector};
  end
  endfunction


  function signed [8:0] conv_u2s_7_9 ;
    input [6:0]  vector ;
  begin
    conv_u2s_7_9 = {{2{1'b0}}, vector};
  end
  endfunction


  function  [7:0] conv_s2u_16_8 ;
    input signed [15:0]  vector ;
  begin
    conv_s2u_16_8 = vector[7:0];
  end
  endfunction


  function signed [7:0] conv_s2s_2_8 ;
    input signed [1:0]  vector ;
  begin
    conv_s2s_2_8 = {{6{vector[1]}}, vector};
  end
  endfunction


  function signed [12:0] conv_s2s_12_13 ;
    input signed [11:0]  vector ;
  begin
    conv_s2s_12_13 = {vector[11], vector};
  end
  endfunction


  function  [5:0] conv_s2u_12_6 ;
    input signed [11:0]  vector ;
  begin
    conv_s2u_12_6 = vector[5:0];
  end
  endfunction


  function signed [5:0] conv_s2s_2_6 ;
    input signed [1:0]  vector ;
  begin
    conv_s2s_2_6 = {{4{vector[1]}}, vector};
  end
  endfunction


  function signed [6:0] conv_s2s_6_7 ;
    input signed [5:0]  vector ;
  begin
    conv_s2s_6_7 = {vector[5], vector};
  end
  endfunction


  function signed [5:0] conv_s2s_12_6 ;
    input signed [11:0]  vector ;
  begin
    conv_s2s_12_6 = vector[5:0];
  end
  endfunction


  function signed [6:0] conv_u2s_6_7 ;
    input [5:0]  vector ;
  begin
    conv_u2s_6_7 = {1'b0, vector};
  end
  endfunction


  function signed [8:0] conv_s2s_8_9 ;
    input signed [7:0]  vector ;
  begin
    conv_s2s_8_9 = {vector[7], vector};
  end
  endfunction


  function signed [7:0] conv_s2s_16_8 ;
    input signed [15:0]  vector ;
  begin
    conv_s2s_16_8 = vector[7:0];
  end
  endfunction


  function  [7:0] conv_s2u_7_8 ;
    input signed [6:0]  vector ;
  begin
    conv_s2u_7_8 = {vector[6], vector};
  end
  endfunction


  function signed [5:0] conv_u2s_4_6 ;
    input [3:0]  vector ;
  begin
    conv_u2s_4_6 = {{2{1'b0}}, vector};
  end
  endfunction


  function signed [5:0] conv_s2s_3_6 ;
    input signed [2:0]  vector ;
  begin
    conv_s2s_3_6 = {{3{vector[2]}}, vector};
  end
  endfunction


  function signed [6:0] conv_u2s_4_7 ;
    input [3:0]  vector ;
  begin
    conv_u2s_4_7 = {{3{1'b0}}, vector};
  end
  endfunction


  function  [6:0] conv_u2u_5_7 ;
    input [4:0]  vector ;
  begin
    conv_u2u_5_7 = {{2{1'b0}}, vector};
  end
  endfunction


  function  [6:0] conv_s2u_5_7 ;
    input signed [4:0]  vector ;
  begin
    conv_s2u_5_7 = {{2{vector[4]}}, vector};
  end
  endfunction


  function  [9:0] conv_s2u_20_10 ;
    input signed [19:0]  vector ;
  begin
    conv_s2u_20_10 = vector[9:0];
  end
  endfunction


  function signed [9:0] conv_s2s_2_10 ;
    input signed [1:0]  vector ;
  begin
    conv_s2s_2_10 = {{8{vector[1]}}, vector};
  end
  endfunction


  function  [9:0] conv_s2u_9_10 ;
    input signed [8:0]  vector ;
  begin
    conv_s2u_9_10 = {vector[8], vector};
  end
  endfunction


  function signed [5:0] conv_s2s_4_6 ;
    input signed [3:0]  vector ;
  begin
    conv_s2s_4_6 = {{2{vector[3]}}, vector};
  end
  endfunction


  function signed [3:0] conv_s2s_2_4 ;
    input signed [1:0]  vector ;
  begin
    conv_s2s_2_4 = {{2{vector[1]}}, vector};
  end
  endfunction


  function signed [3:0] conv_u2s_2_4 ;
    input [1:0]  vector ;
  begin
    conv_u2s_2_4 = {{2{1'b0}}, vector};
  end
  endfunction


  function  [3:0] conv_u2u_2_4 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_4 = {{2{1'b0}}, vector};
  end
  endfunction


  function  [5:0] conv_u2u_5_6 ;
    input [4:0]  vector ;
  begin
    conv_u2u_5_6 = {1'b0, vector};
  end
  endfunction


  function  [5:0] conv_u2u_4_6 ;
    input [3:0]  vector ;
  begin
    conv_u2u_4_6 = {{2{1'b0}}, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    mean_vga
//  Generated from file(s):
//    3) $PROJECT_HOME/../sobel_filter_source/blur_sob.c
// ------------------------------------------------------------------


module mean_vga (
  vin_rsc_z, vout_rsc_z, clk, en, arst_n
);
  input [89:0] vin_rsc_z;
  output [29:0] vout_rsc_z;
  input clk;
  input en;
  input arst_n;


  // Interconnect Declarations
  wire [89:0] vin_rsc_mgc_in_wire_d;
  wire [29:0] vout_rsc_mgc_out_stdreg_d;


  // Interconnect Declarations for Component Instantiations 
  mgc_in_wire #(.rscid(1),
  .width(90)) vin_rsc_mgc_in_wire (
      .d(vin_rsc_mgc_in_wire_d),
      .z(vin_rsc_z)
    );
  mgc_out_stdreg #(.rscid(2),
  .width(30)) vout_rsc_mgc_out_stdreg (
      .d(vout_rsc_mgc_out_stdreg_d),
      .z(vout_rsc_z)
    );
  mean_vga_core mean_vga_core_inst (
      .clk(clk),
      .en(en),
      .arst_n(arst_n),
      .vin_rsc_mgc_in_wire_d(vin_rsc_mgc_in_wire_d),
      .vout_rsc_mgc_out_stdreg_d(vout_rsc_mgc_out_stdreg_d)
    );
endmodule



