
# Program: Catapult University Version
# Version: 2011a.126
#    File: Nlview netlist

module new "MemoryTester:core:fsm" "orig"
load port {clk} input -attr xrf 545 -attr oid 1 -attr @path {/MemoryTester/MemoryTester:core/MemoryTester:core:fsm/clk}
load port {rst} input -attr xrf 546 -attr oid 2 -attr @path {/MemoryTester/MemoryTester:core/MemoryTester:core:fsm/rst}
load portBus {fsm_output(3:0)} output 4 {fsm_output(3)} {fsm_output(2)} {fsm_output(1)} {fsm_output(0)} -attr xrf 547 -attr oid 3 -attr @path {/MemoryTester/MemoryTester:core/MemoryTester:core:fsm/fsm_output}
load port {st(main)_tr0} input -attr @path {/MemoryTester/MemoryTester:core/MemoryTester:core:fsm/st(main)_tr0}
load port {st(if:for)#1_tr0} input -attr @path {/MemoryTester/MemoryTester:core/MemoryTester:core:fsm/st(if:for)#1_tr0}
load net {clk} -attr xrf 548 -attr oid 4
load net {clk} -port {clk} -attr xrf 549 -attr oid 5
load net {rst} -attr xrf 550 -attr oid 6
load net {rst} -port {rst} -attr xrf 551 -attr oid 7
load net {fsm_output(0)} -attr vt d
load net {fsm_output(1)} -attr vt d
load net {fsm_output(2)} -attr vt d
load net {fsm_output(3)} -attr vt d
load netBundle {fsm_output} 4 {fsm_output(0)} {fsm_output(1)} {fsm_output(2)} {fsm_output(3)} -attr xrf 552 -attr oid 8 -attr vt d -attr @path {/MemoryTester/MemoryTester:core/MemoryTester:core:fsm/fsm_output}
load net {fsm_output(0)} -port {fsm_output(0)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/MemoryTester:core:fsm/fsm_output}
load net {fsm_output(1)} -port {fsm_output(1)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/MemoryTester:core:fsm/fsm_output}
load net {fsm_output(2)} -port {fsm_output(2)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/MemoryTester:core:fsm/fsm_output}
load net {fsm_output(3)} -port {fsm_output(3)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/MemoryTester:core:fsm/fsm_output}
load net {st(main)_tr0} -attr vt d
load net {st(main)_tr0} -port {st(main)_tr0}
load net {st(if:for)#1_tr0} -attr vt d
load net {st(if:for)#1_tr0} -port {st(if:for)#1_tr0}
### END MODULE 

module new "MemoryTester:core" "orig"
load port {clk} input -attr xrf 553 -attr oid 9 -attr vt d -attr @path {/MemoryTester/MemoryTester:core/clk}
load port {rst} input -attr xrf 554 -attr oid 10 -attr vt d -attr @path {/MemoryTester/MemoryTester:core/rst}
load port {bit_out:rsc:mgc_out_stdreg.d} output -attr xrf 555 -attr oid 11 -attr vt d -attr @path {/MemoryTester/MemoryTester:core/bit_out:rsc:mgc_out_stdreg.d}
load port {enabled:rsc:mgc_out_stdreg.d} output -attr xrf 556 -attr oid 12 -attr vt d -attr @path {/MemoryTester/MemoryTester:core/enabled:rsc:mgc_out_stdreg.d}
load symbol "MemoryTester:core:fsm" "orig" GEN \
     port {clk#1} input \
     port {rst#1} input \
     portBus {fsm_output(3:0)} output 4 {fsm_output(3)} {fsm_output(2)} {fsm_output(1)} {fsm_output(0)} \
     port {st(main)_tr0} input \
     port {st(if:for)#1_tr0} input \

load symbol "and(2,1)" "INTERFACE" AND boxcolor 0 \
     portBus {A0(0:0)} input 1 {A0(0)} \
     portBus {A1(0:0)} input 1 {A1(0)} \
     portBus {Z(0:0)} output 1 {Z(0)} \

load symbol "not(1)" "INTERFACE" INV boxcolor 0 \
     portBus {A(0:0)} input 1 {A(0)} \
     portBus {Z(0:0)} output 1 {Z(0)} \

load symbol "nor(2,1)" "INTERFACE" NOR boxcolor 0 \
     portBus {A0(0:0)} input 1 {A0(0)} \
     portBus {A1(0:0)} input 1 {A1(0)} \
     portBus {Z(0:0)} output 1 {Z(0)} \

load symbol "or(2,1)" "INTERFACE" OR boxcolor 0 \
     portBus {A0(0:0)} input 1 {A0(0)} \
     portBus {A1(0:0)} input 1 {A1(0)} \
     portBus {Z(0:0)} output 1 {Z(0)} \

load symbol "reg(1,1,0,0,1)" "INTERFACE" GEN boxcolor 1 \
     portBus {D(0:0)} input 1 {D(0)} \
     portBus {DRs(0:0)} input 1 {DRs(0)} \
     port {clk} input.clk \
     portBus {Rs(0:0)} input 1 {Rs(0)} \
     portBus {Z(0:0)} output 1 {Z(0)} \

load symbol "or(3,1)" "INTERFACE" OR boxcolor 0 \
     portBus {A0(0:0)} input 1 {A0(0)} \
     portBus {A1(0:0)} input 1 {A1(0)} \
     portBus {A2(0:0)} input 1 {A2(0)} \
     portBus {Z(0:0)} output 1 {Z(0)} \

load symbol "mux(2,1)" "INTERFACE" MUX boxcolor 0 \
     portBus {A0(0:0)} input 1 {A0(0)} \
     portBus {A1(0:0)} input 1 {A1(0)} \
     portBus {S(0:0)} input.top 1 {S(0)} \
     portBus {Z(0:0)} output 1 {Z(0)} \

load symbol "and(2,13)" "INTERFACE" AND boxcolor 0 \
     portBus {A0(12:0)} input 13 {A0(12)} {A0(11)} {A0(10)} {A0(9)} {A0(8)} {A0(7)} {A0(6)} {A0(5)} {A0(4)} {A0(3)} {A0(2)} {A0(1)} {A0(0)} \
     portBus {A1(12:0)} input 13 {A1(12)} {A1(11)} {A1(10)} {A1(9)} {A1(8)} {A1(7)} {A1(6)} {A1(5)} {A1(4)} {A1(3)} {A1(2)} {A1(1)} {A1(0)} \
     portBus {Z(12:0)} output 13 {Z(12)} {Z(11)} {Z(10)} {Z(9)} {Z(8)} {Z(7)} {Z(6)} {Z(5)} {Z(4)} {Z(3)} {Z(2)} {Z(1)} {Z(0)} \

load symbol "reg(13,1,0,0,1)" "INTERFACE" GEN boxcolor 1 \
     portBus {D(12:0)} input 13 {D(12)} {D(11)} {D(10)} {D(9)} {D(8)} {D(7)} {D(6)} {D(5)} {D(4)} {D(3)} {D(2)} {D(1)} {D(0)} \
     portBus {DRs(12:0)} input 13 {DRs(12)} {DRs(11)} {DRs(10)} {DRs(9)} {DRs(8)} {DRs(7)} {DRs(6)} {DRs(5)} {DRs(4)} {DRs(3)} {DRs(2)} {DRs(1)} {DRs(0)} \
     port {clk} input.clk \
     portBus {Rs(0:0)} input 1 {Rs(0)} \
     portBus {Z(12:0)} output 13 {Z(12)} {Z(11)} {Z(10)} {Z(9)} {Z(8)} {Z(7)} {Z(6)} {Z(5)} {Z(4)} {Z(3)} {Z(2)} {Z(1)} {Z(0)} \

load symbol "add(7,0,8,-1,8)" "INTERFACE" RTL(+) boxcolor 0 \
     portBus {A(6:0)} input 7 {A(6)} {A(5)} {A(4)} {A(3)} {A(2)} {A(1)} {A(0)} \
     portBus {B(7:0)} input 8 {B(7)} {B(6)} {B(5)} {B(4)} {B(3)} {B(2)} {B(1)} {B(0)} \
     portBus {Z(7:0)} output 8 {Z(7)} {Z(6)} {Z(5)} {Z(4)} {Z(3)} {Z(2)} {Z(1)} {Z(0)} \

load symbol "add(13,-1,1,0,13)" "INTERFACE" RTL(+) boxcolor 0 \
     portBus {A(12:0)} input 13 {A(12)} {A(11)} {A(10)} {A(9)} {A(8)} {A(7)} {A(6)} {A(5)} {A(4)} {A(3)} {A(2)} {A(1)} {A(0)} \
     portBus {B(0:0)} input 1 {B(0)} \
     portBus {Z(12:0)} output 13 {Z(12)} {Z(11)} {Z(10)} {Z(9)} {Z(8)} {Z(7)} {Z(6)} {Z(5)} {Z(4)} {Z(3)} {Z(2)} {Z(1)} {Z(0)} \

load net {if:for:i#1.sva(0)} -attr vt d
load net {if:for:i#1.sva(1)} -attr vt d
load net {if:for:i#1.sva(2)} -attr vt d
load net {if:for:i#1.sva(3)} -attr vt d
load net {if:for:i#1.sva(4)} -attr vt d
load net {if:for:i#1.sva(5)} -attr vt d
load net {if:for:i#1.sva(6)} -attr vt d
load net {if:for:i#1.sva(7)} -attr vt d
load net {if:for:i#1.sva(8)} -attr vt d
load net {if:for:i#1.sva(9)} -attr vt d
load net {if:for:i#1.sva(10)} -attr vt d
load net {if:for:i#1.sva(11)} -attr vt d
load net {if:for:i#1.sva(12)} -attr vt d
load netBundle {if:for:i#1.sva} 13 {if:for:i#1.sva(0)} {if:for:i#1.sva(1)} {if:for:i#1.sva(2)} {if:for:i#1.sva(3)} {if:for:i#1.sva(4)} {if:for:i#1.sva(5)} {if:for:i#1.sva(6)} {if:for:i#1.sva(7)} {if:for:i#1.sva(8)} {if:for:i#1.sva(9)} {if:for:i#1.sva(10)} {if:for:i#1.sva(11)} {if:for:i#1.sva(12)} -attr xrf 557 -attr oid 13 -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva}
load net {if:for:i#1.sva#1(0)} -attr vt d
load net {if:for:i#1.sva#1(1)} -attr vt d
load net {if:for:i#1.sva#1(2)} -attr vt d
load net {if:for:i#1.sva#1(3)} -attr vt d
load net {if:for:i#1.sva#1(4)} -attr vt d
load net {if:for:i#1.sva#1(5)} -attr vt d
load net {if:for:i#1.sva#1(6)} -attr vt d
load net {if:for:i#1.sva#1(7)} -attr vt d
load net {if:for:i#1.sva#1(8)} -attr vt d
load net {if:for:i#1.sva#1(9)} -attr vt d
load net {if:for:i#1.sva#1(10)} -attr vt d
load net {if:for:i#1.sva#1(11)} -attr vt d
load net {if:for:i#1.sva#1(12)} -attr vt d
load netBundle {if:for:i#1.sva#1} 13 {if:for:i#1.sva#1(0)} {if:for:i#1.sva#1(1)} {if:for:i#1.sva#1(2)} {if:for:i#1.sva#1(3)} {if:for:i#1.sva#1(4)} {if:for:i#1.sva#1(5)} {if:for:i#1.sva#1(6)} {if:for:i#1.sva#1(7)} {if:for:i#1.sva#1(8)} {if:for:i#1.sva#1(9)} {if:for:i#1.sva#1(10)} {if:for:i#1.sva#1(11)} {if:for:i#1.sva#1(12)} -attr xrf 558 -attr oid 14 -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#1}
load net {if:for:i#1.sva#2(0)} -attr vt d
load net {if:for:i#1.sva#2(1)} -attr vt d
load net {if:for:i#1.sva#2(2)} -attr vt d
load net {if:for:i#1.sva#2(3)} -attr vt d
load net {if:for:i#1.sva#2(4)} -attr vt d
load net {if:for:i#1.sva#2(5)} -attr vt d
load net {if:for:i#1.sva#2(6)} -attr vt d
load net {if:for:i#1.sva#2(7)} -attr vt d
load net {if:for:i#1.sva#2(8)} -attr vt d
load net {if:for:i#1.sva#2(9)} -attr vt d
load net {if:for:i#1.sva#2(10)} -attr vt d
load net {if:for:i#1.sva#2(11)} -attr vt d
load net {if:for:i#1.sva#2(12)} -attr vt d
load netBundle {if:for:i#1.sva#2} 13 {if:for:i#1.sva#2(0)} {if:for:i#1.sva#2(1)} {if:for:i#1.sva#2(2)} {if:for:i#1.sva#2(3)} {if:for:i#1.sva#2(4)} {if:for:i#1.sva#2(5)} {if:for:i#1.sva#2(6)} {if:for:i#1.sva#2(7)} {if:for:i#1.sva#2(8)} {if:for:i#1.sva#2(9)} {if:for:i#1.sva#2(10)} {if:for:i#1.sva#2(11)} {if:for:i#1.sva#2(12)} -attr xrf 559 -attr oid 15 -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#2}
load net {and#7.itm(0)} -attr vt d
load net {and#7.itm(1)} -attr vt d
load net {and#7.itm(2)} -attr vt d
load net {and#7.itm(3)} -attr vt d
load net {and#7.itm(4)} -attr vt d
load net {and#7.itm(5)} -attr vt d
load net {and#7.itm(6)} -attr vt d
load net {and#7.itm(7)} -attr vt d
load net {and#7.itm(8)} -attr vt d
load net {and#7.itm(9)} -attr vt d
load net {and#7.itm(10)} -attr vt d
load net {and#7.itm(11)} -attr vt d
load net {and#7.itm(12)} -attr vt d
load netBundle {and#7.itm} 13 {and#7.itm(0)} {and#7.itm(1)} {and#7.itm(2)} {and#7.itm(3)} {and#7.itm(4)} {and#7.itm(5)} {and#7.itm(6)} {and#7.itm(7)} {and#7.itm(8)} {and#7.itm(9)} {and#7.itm(10)} {and#7.itm(11)} {and#7.itm(12)} -attr xrf 560 -attr oid 16 -attr vt d -attr @path {/MemoryTester/MemoryTester:core/and#7.itm}
load net {exs.itm(0)} -attr vt d
load net {exs.itm(1)} -attr vt d
load net {exs.itm(2)} -attr vt d
load net {exs.itm(3)} -attr vt d
load net {exs.itm(4)} -attr vt d
load net {exs.itm(5)} -attr vt d
load net {exs.itm(6)} -attr vt d
load net {exs.itm(7)} -attr vt d
load net {exs.itm(8)} -attr vt d
load net {exs.itm(9)} -attr vt d
load net {exs.itm(10)} -attr vt d
load net {exs.itm(11)} -attr vt d
load net {exs.itm(12)} -attr vt d
load netBundle {exs.itm} 13 {exs.itm(0)} {exs.itm(1)} {exs.itm(2)} {exs.itm(3)} {exs.itm(4)} {exs.itm(5)} {exs.itm(6)} {exs.itm(7)} {exs.itm(8)} {exs.itm(9)} {exs.itm(10)} {exs.itm(11)} {exs.itm(12)} -attr xrf 561 -attr oid 17 -attr vt d -attr @path {/MemoryTester/MemoryTester:core/exs.itm}
load net {slc(if:for:i#1.sva#2).itm(0)} -attr vt d
load net {slc(if:for:i#1.sva#2).itm(1)} -attr vt d
load net {slc(if:for:i#1.sva#2).itm(2)} -attr vt d
load net {slc(if:for:i#1.sva#2).itm(3)} -attr vt d
load net {slc(if:for:i#1.sva#2).itm(4)} -attr vt d
load net {slc(if:for:i#1.sva#2).itm(5)} -attr vt d
load net {slc(if:for:i#1.sva#2).itm(6)} -attr vt d
load netBundle {slc(if:for:i#1.sva#2).itm} 7 {slc(if:for:i#1.sva#2).itm(0)} {slc(if:for:i#1.sva#2).itm(1)} {slc(if:for:i#1.sva#2).itm(2)} {slc(if:for:i#1.sva#2).itm(3)} {slc(if:for:i#1.sva#2).itm(4)} {slc(if:for:i#1.sva#2).itm(5)} {slc(if:for:i#1.sva#2).itm(6)} -attr xrf 562 -attr oid 18 -attr vt d -attr @path {/MemoryTester/MemoryTester:core/slc(if:for:i#1.sva#2).itm}
load net {clk} -attr xrf 563 -attr oid 19
load net {clk} -port {clk} -attr xrf 564 -attr oid 20
load net {rst} -attr xrf 565 -attr oid 21
load net {rst} -port {rst} -attr xrf 566 -attr oid 22
load net {bit_out:rsc:mgc_out_stdreg.d} -attr xrf 567 -attr oid 23 -attr vt d
load net {bit_out:rsc:mgc_out_stdreg.d} -port {bit_out:rsc:mgc_out_stdreg.d} -attr xrf 568 -attr oid 24 -attr vt d -attr @path {/MemoryTester/MemoryTester:core/bit_out:rsc:mgc_out_stdreg.d}
load net {enabled:rsc:mgc_out_stdreg.d} -attr xrf 569 -attr oid 25 -attr vt d
load net {enabled:rsc:mgc_out_stdreg.d} -port {enabled:rsc:mgc_out_stdreg.d} -attr xrf 570 -attr oid 26 -attr vt d -attr @path {/MemoryTester/MemoryTester:core/enabled:rsc:mgc_out_stdreg.d}
load inst "MemoryTester:core:fsm:inst" "MemoryTester:core:fsm" "orig" -attr xrf 571 -attr oid 27 -attr @path {/MemoryTester/MemoryTester:core/MemoryTester:core:fsm:inst} -attr area 1.000000 -attr hier "/MemoryTester/MemoryTester:core/MemoryTester:core:fsm" -pg 1 -lvl 3
load net {clk} -pin  "MemoryTester:core:fsm:inst" {clk#1} -attr xrf 572 -attr oid 28 -attr @path {/MemoryTester/MemoryTester:core/clk}
load net {rst} -pin  "MemoryTester:core:fsm:inst" {rst#1} -attr xrf 573 -attr oid 29 -attr @path {/MemoryTester/MemoryTester:core/rst}
load net {fsm_output#1(0)} -pin  "MemoryTester:core:fsm:inst" {fsm_output(0)} -attr @path {/MemoryTester/MemoryTester:core/fsm_output}
load net {fsm_output#1(1)} -pin  "MemoryTester:core:fsm:inst" {fsm_output(1)} -attr @path {/MemoryTester/MemoryTester:core/fsm_output}
load net {fsm_output#1(2)} -pin  "MemoryTester:core:fsm:inst" {fsm_output(2)} -attr @path {/MemoryTester/MemoryTester:core/fsm_output}
load net {fsm_output#1(3)} -pin  "MemoryTester:core:fsm:inst" {fsm_output(3)} -attr @path {/MemoryTester/MemoryTester:core/fsm_output}
load net {init.sva} -pin  "MemoryTester:core:fsm:inst" {st(main)_tr0} -attr xrf 574 -attr oid 30 -attr @path {/MemoryTester/MemoryTester:core/init.sva}
load net {not#2.itm} -pin  "MemoryTester:core:fsm:inst" {st(if:for)#1_tr0} -attr @path {/MemoryTester/MemoryTester:core/not#2.itm}
load inst "and#1" "and(2,1)" "INTERFACE" -attr @path {/MemoryTester/MemoryTester:core/and#1} -attr area 0.730832 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_and(1,2)"
load net {fsm_output#1(1)} -pin  "and#1" {A0(0)} -attr @path {/MemoryTester/MemoryTester:core/slc(fsm_output)#5.itm}
load net {init.sva} -pin  "and#1" {A1(0)} -attr @path {/MemoryTester/MemoryTester:core/init.sva}
load net {and#1.itm} -pin  "and#1" {Z(0)} -attr @path {/MemoryTester/MemoryTester:core/and#1.itm}
load inst "not#8" "not(1)" "INTERFACE" -attr @path {/MemoryTester/MemoryTester:core/not#8} -attr area 0.001000 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_not(1)"
load net {if:for:slc.itm} -pin  "not#8" {A(0)} -attr @path {/MemoryTester/MemoryTester:core/if:for:slc.itm}
load net {not#8.itm} -pin  "not#8" {Z(0)} -attr @path {/MemoryTester/MemoryTester:core/not#8.itm}
load inst "and" "and(2,1)" "INTERFACE" -attr @path {/MemoryTester/MemoryTester:core/and} -attr area 0.730832 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_and(1,2)"
load net {not#8.itm} -pin  "and" {A0(0)} -attr @path {/MemoryTester/MemoryTester:core/not#8.itm}
load net {fsm_output#1(3)} -pin  "and" {A1(0)} -attr @path {/MemoryTester/MemoryTester:core/slc(fsm_output)#7.itm}
load net {and.itm} -pin  "and" {Z(0)} -attr @path {/MemoryTester/MemoryTester:core/and.itm}
load inst "nor" "nor(2,1)" "INTERFACE" -attr @path {/MemoryTester/MemoryTester:core/nor} -attr area 0.730832 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_nor(1,2)"
load net {and#1.itm} -pin  "nor" {A0(0)} -attr @path {/MemoryTester/MemoryTester:core/and#1.itm}
load net {and.itm} -pin  "nor" {A1(0)} -attr @path {/MemoryTester/MemoryTester:core/and.itm}
load net {nor.itm} -pin  "nor" {Z(0)} -attr @path {/MemoryTester/MemoryTester:core/nor.itm}
load inst "and#4" "and(2,1)" "INTERFACE" -attr xrf 575 -attr oid 31 -attr @path {/MemoryTester/MemoryTester:core/and#4} -attr area 0.730832 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_and(1,2)"
load net {enabled:rsc:mgc_out_stdreg.d} -pin  "and#4" {A0(0)} -attr @path {/MemoryTester/MemoryTester:core/enabled:rsc:mgc_out_stdreg.d}
load net {nor.itm} -pin  "and#4" {A1(0)} -attr @path {/MemoryTester/MemoryTester:core/nor.itm}
load net {and#4.itm} -pin  "and#4" {Z(0)} -attr @path {/MemoryTester/MemoryTester:core/and#4.itm}
load inst "or#5" "or(2,1)" "INTERFACE" -attr xrf 576 -attr oid 32 -attr @path {/MemoryTester/MemoryTester:core/or#5} -attr area 0.730832 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_or(1,2)"
load net {and#4.itm} -pin  "or#5" {A0(0)} -attr @path {/MemoryTester/MemoryTester:core/and#4.itm}
load net {fsm_output#1(0)} -pin  "or#5" {A1(0)} -attr @path {/MemoryTester/MemoryTester:core/slc(fsm_output).itm}
load net {or#5.itm} -pin  "or#5" {Z(0)} -attr @path {/MemoryTester/MemoryTester:core/or#5.itm}
load inst "reg(enabled:rsc:mgc_out_stdreg.d)" "reg(1,1,0,0,1)" "INTERFACE" -attr xrf 577 -attr oid 33 -attr @path {/MemoryTester/MemoryTester:core/reg(enabled:rsc:mgc_out_stdreg.d)}
load net {or#5.itm} -pin  "reg(enabled:rsc:mgc_out_stdreg.d)" {D(0)} -attr @path {/MemoryTester/MemoryTester:core/or#5.itm}
load net {GND} -pin  "reg(enabled:rsc:mgc_out_stdreg.d)" {DRs(0)} -attr @path {/MemoryTester/MemoryTester:core/C0_1#1}
load net {clk} -pin  "reg(enabled:rsc:mgc_out_stdreg.d)" {clk} -attr xrf 578 -attr oid 34 -attr @path {/MemoryTester/MemoryTester:core/clk}
load net {rst} -pin  "reg(enabled:rsc:mgc_out_stdreg.d)" {Rs(0)} -attr @path {/MemoryTester/MemoryTester:core/rst}
load net {enabled:rsc:mgc_out_stdreg.d} -pin  "reg(enabled:rsc:mgc_out_stdreg.d)" {Z(0)} -attr @path {/MemoryTester/MemoryTester:core/enabled:rsc:mgc_out_stdreg.d}
load inst "if:for:or" "or(3,1)" "INTERFACE" -attr xrf 579 -attr oid 35 -attr @path {/MemoryTester/MemoryTester:core/if:for:or} -attr area 1.055476 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_or(1,3)"
load net {if:for:i#1.sva(2)} -pin  "if:for:or" {A0(0)} -attr @path {/MemoryTester/MemoryTester:core/slc(if:for:i#1.sva).itm}
load net {if:for:i#1.sva(1)} -pin  "if:for:or" {A1(0)} -attr @path {/MemoryTester/MemoryTester:core/slc(if:for:i#1.sva)#1.itm}
load net {if:for:i#1.sva(0)} -pin  "if:for:or" {A2(0)} -attr @path {/MemoryTester/MemoryTester:core/slc(if:for:i#1.sva)#2.itm}
load net {if:for:or.itm} -pin  "if:for:or" {Z(0)} -attr @path {/MemoryTester/MemoryTester:core/if:for:or.itm}
load inst "mux" "mux(2,1)" "INTERFACE" -attr xrf 580 -attr oid 36 -attr @path {/MemoryTester/MemoryTester:core/mux} -attr area 0.920423 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_mux(1,1,2)"
load net {if:for:or.itm} -pin  "mux" {A0(0)} -attr @path {/MemoryTester/MemoryTester:core/if:for:or.itm}
load net {bit_out:rsc:mgc_out_stdreg.d} -pin  "mux" {A1(0)} -attr @path {/MemoryTester/MemoryTester:core/bit_out:rsc:mgc_out_stdreg.d}
load net {fsm_output#1(2)} -pin  "mux" {S(0)} -attr @path {/MemoryTester/MemoryTester:core/slc(fsm_output)#2.itm}
load net {mux.itm} -pin  "mux" {Z(0)} -attr @path {/MemoryTester/MemoryTester:core/mux.itm}
load inst "reg(bit_out:rsc:mgc_out_stdreg.d)" "reg(1,1,0,0,1)" "INTERFACE" -attr xrf 581 -attr oid 37 -attr @path {/MemoryTester/MemoryTester:core/reg(bit_out:rsc:mgc_out_stdreg.d)}
load net {mux.itm} -pin  "reg(bit_out:rsc:mgc_out_stdreg.d)" {D(0)} -attr @path {/MemoryTester/MemoryTester:core/mux.itm}
load net {GND} -pin  "reg(bit_out:rsc:mgc_out_stdreg.d)" {DRs(0)} -attr @path {/MemoryTester/MemoryTester:core/C0_1#1}
load net {clk} -pin  "reg(bit_out:rsc:mgc_out_stdreg.d)" {clk} -attr xrf 582 -attr oid 38 -attr @path {/MemoryTester/MemoryTester:core/clk}
load net {rst} -pin  "reg(bit_out:rsc:mgc_out_stdreg.d)" {Rs(0)} -attr @path {/MemoryTester/MemoryTester:core/rst}
load net {bit_out:rsc:mgc_out_stdreg.d} -pin  "reg(bit_out:rsc:mgc_out_stdreg.d)" {Z(0)} -attr @path {/MemoryTester/MemoryTester:core/bit_out:rsc:mgc_out_stdreg.d}
load inst "or#4" "or(2,1)" "INTERFACE" -attr @path {/MemoryTester/MemoryTester:core/or#4} -attr area 0.730832 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_or(1,2)"
load net {fsm_output#1(1)} -pin  "or#4" {A0(0)} -attr @path {/MemoryTester/MemoryTester:core/slc(fsm_output)#1.itm}
load net {fsm_output#1(3)} -pin  "or#4" {A1(0)} -attr @path {/MemoryTester/MemoryTester:core/slc(fsm_output)#9.itm}
load net {or#4.itm} -pin  "or#4" {Z(0)} -attr @path {/MemoryTester/MemoryTester:core/or#4.itm}
load inst "reg(init.sva)" "reg(1,1,0,0,1)" "INTERFACE" -attr xrf 583 -attr oid 39 -attr @path {/MemoryTester/MemoryTester:core/reg(init.sva)}
load net {or#4.itm} -pin  "reg(init.sva)" {D(0)} -attr @path {/MemoryTester/MemoryTester:core/or#4.itm}
load net {GND} -pin  "reg(init.sva)" {DRs(0)} -attr @path {/MemoryTester/MemoryTester:core/C0_1#1}
load net {clk} -pin  "reg(init.sva)" {clk} -attr xrf 584 -attr oid 40 -attr @path {/MemoryTester/MemoryTester:core/clk}
load net {rst} -pin  "reg(init.sva)" {Rs(0)} -attr @path {/MemoryTester/MemoryTester:core/rst}
load net {init.sva} -pin  "reg(init.sva)" {Z(0)} -attr @path {/MemoryTester/MemoryTester:core/init.sva}
load inst "and#7" "and(2,13)" "INTERFACE" -attr xrf 585 -attr oid 41 -attr vt d -attr @path {/MemoryTester/MemoryTester:core/and#7} -attr area 9.488821 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_and(13,2)"
load net {if:for:i#1.sva#1(0)} -pin  "and#7" {A0(0)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#1}
load net {if:for:i#1.sva#1(1)} -pin  "and#7" {A0(1)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#1}
load net {if:for:i#1.sva#1(2)} -pin  "and#7" {A0(2)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#1}
load net {if:for:i#1.sva#1(3)} -pin  "and#7" {A0(3)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#1}
load net {if:for:i#1.sva#1(4)} -pin  "and#7" {A0(4)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#1}
load net {if:for:i#1.sva#1(5)} -pin  "and#7" {A0(5)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#1}
load net {if:for:i#1.sva#1(6)} -pin  "and#7" {A0(6)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#1}
load net {if:for:i#1.sva#1(7)} -pin  "and#7" {A0(7)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#1}
load net {if:for:i#1.sva#1(8)} -pin  "and#7" {A0(8)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#1}
load net {if:for:i#1.sva#1(9)} -pin  "and#7" {A0(9)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#1}
load net {if:for:i#1.sva#1(10)} -pin  "and#7" {A0(10)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#1}
load net {if:for:i#1.sva#1(11)} -pin  "and#7" {A0(11)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#1}
load net {if:for:i#1.sva#1(12)} -pin  "and#7" {A0(12)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#1}
load net {fsm_output#1(3)} -pin  "and#7" {A1(0)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/exs.itm}
load net {fsm_output#1(3)} -pin  "and#7" {A1(1)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/exs.itm}
load net {fsm_output#1(3)} -pin  "and#7" {A1(2)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/exs.itm}
load net {fsm_output#1(3)} -pin  "and#7" {A1(3)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/exs.itm}
load net {fsm_output#1(3)} -pin  "and#7" {A1(4)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/exs.itm}
load net {fsm_output#1(3)} -pin  "and#7" {A1(5)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/exs.itm}
load net {fsm_output#1(3)} -pin  "and#7" {A1(6)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/exs.itm}
load net {fsm_output#1(3)} -pin  "and#7" {A1(7)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/exs.itm}
load net {fsm_output#1(3)} -pin  "and#7" {A1(8)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/exs.itm}
load net {fsm_output#1(3)} -pin  "and#7" {A1(9)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/exs.itm}
load net {fsm_output#1(3)} -pin  "and#7" {A1(10)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/exs.itm}
load net {fsm_output#1(3)} -pin  "and#7" {A1(11)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/exs.itm}
load net {fsm_output#1(3)} -pin  "and#7" {A1(12)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/exs.itm}
load net {and#7.itm(0)} -pin  "and#7" {Z(0)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/and#7.itm}
load net {and#7.itm(1)} -pin  "and#7" {Z(1)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/and#7.itm}
load net {and#7.itm(2)} -pin  "and#7" {Z(2)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/and#7.itm}
load net {and#7.itm(3)} -pin  "and#7" {Z(3)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/and#7.itm}
load net {and#7.itm(4)} -pin  "and#7" {Z(4)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/and#7.itm}
load net {and#7.itm(5)} -pin  "and#7" {Z(5)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/and#7.itm}
load net {and#7.itm(6)} -pin  "and#7" {Z(6)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/and#7.itm}
load net {and#7.itm(7)} -pin  "and#7" {Z(7)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/and#7.itm}
load net {and#7.itm(8)} -pin  "and#7" {Z(8)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/and#7.itm}
load net {and#7.itm(9)} -pin  "and#7" {Z(9)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/and#7.itm}
load net {and#7.itm(10)} -pin  "and#7" {Z(10)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/and#7.itm}
load net {and#7.itm(11)} -pin  "and#7" {Z(11)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/and#7.itm}
load net {and#7.itm(12)} -pin  "and#7" {Z(12)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/and#7.itm}
load inst "reg(if:for:i#1.sva)" "reg(13,1,0,0,1)" "INTERFACE" -attr xrf 586 -attr oid 42 -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/reg(if:for:i#1.sva)}
load net {and#7.itm(0)} -pin  "reg(if:for:i#1.sva)" {D(0)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/and#7.itm}
load net {and#7.itm(1)} -pin  "reg(if:for:i#1.sva)" {D(1)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/and#7.itm}
load net {and#7.itm(2)} -pin  "reg(if:for:i#1.sva)" {D(2)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/and#7.itm}
load net {and#7.itm(3)} -pin  "reg(if:for:i#1.sva)" {D(3)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/and#7.itm}
load net {and#7.itm(4)} -pin  "reg(if:for:i#1.sva)" {D(4)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/and#7.itm}
load net {and#7.itm(5)} -pin  "reg(if:for:i#1.sva)" {D(5)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/and#7.itm}
load net {and#7.itm(6)} -pin  "reg(if:for:i#1.sva)" {D(6)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/and#7.itm}
load net {and#7.itm(7)} -pin  "reg(if:for:i#1.sva)" {D(7)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/and#7.itm}
load net {and#7.itm(8)} -pin  "reg(if:for:i#1.sva)" {D(8)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/and#7.itm}
load net {and#7.itm(9)} -pin  "reg(if:for:i#1.sva)" {D(9)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/and#7.itm}
load net {and#7.itm(10)} -pin  "reg(if:for:i#1.sva)" {D(10)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/and#7.itm}
load net {and#7.itm(11)} -pin  "reg(if:for:i#1.sva)" {D(11)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/and#7.itm}
load net {and#7.itm(12)} -pin  "reg(if:for:i#1.sva)" {D(12)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/and#7.itm}
load net {GND} -pin  "reg(if:for:i#1.sva)" {DRs(0)} -attr @path {/MemoryTester/MemoryTester:core/C0_13}
load net {GND} -pin  "reg(if:for:i#1.sva)" {DRs(1)} -attr @path {/MemoryTester/MemoryTester:core/C0_13}
load net {GND} -pin  "reg(if:for:i#1.sva)" {DRs(2)} -attr @path {/MemoryTester/MemoryTester:core/C0_13}
load net {GND} -pin  "reg(if:for:i#1.sva)" {DRs(3)} -attr @path {/MemoryTester/MemoryTester:core/C0_13}
load net {GND} -pin  "reg(if:for:i#1.sva)" {DRs(4)} -attr @path {/MemoryTester/MemoryTester:core/C0_13}
load net {GND} -pin  "reg(if:for:i#1.sva)" {DRs(5)} -attr @path {/MemoryTester/MemoryTester:core/C0_13}
load net {GND} -pin  "reg(if:for:i#1.sva)" {DRs(6)} -attr @path {/MemoryTester/MemoryTester:core/C0_13}
load net {GND} -pin  "reg(if:for:i#1.sva)" {DRs(7)} -attr @path {/MemoryTester/MemoryTester:core/C0_13}
load net {GND} -pin  "reg(if:for:i#1.sva)" {DRs(8)} -attr @path {/MemoryTester/MemoryTester:core/C0_13}
load net {GND} -pin  "reg(if:for:i#1.sva)" {DRs(9)} -attr @path {/MemoryTester/MemoryTester:core/C0_13}
load net {GND} -pin  "reg(if:for:i#1.sva)" {DRs(10)} -attr @path {/MemoryTester/MemoryTester:core/C0_13}
load net {GND} -pin  "reg(if:for:i#1.sva)" {DRs(11)} -attr @path {/MemoryTester/MemoryTester:core/C0_13}
load net {GND} -pin  "reg(if:for:i#1.sva)" {DRs(12)} -attr @path {/MemoryTester/MemoryTester:core/C0_13}
load net {clk} -pin  "reg(if:for:i#1.sva)" {clk} -attr xrf 587 -attr oid 43 -attr @path {/MemoryTester/MemoryTester:core/clk}
load net {rst} -pin  "reg(if:for:i#1.sva)" {Rs(0)} -attr @path {/MemoryTester/MemoryTester:core/rst}
load net {if:for:i#1.sva(0)} -pin  "reg(if:for:i#1.sva)" {Z(0)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva}
load net {if:for:i#1.sva(1)} -pin  "reg(if:for:i#1.sva)" {Z(1)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva}
load net {if:for:i#1.sva(2)} -pin  "reg(if:for:i#1.sva)" {Z(2)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva}
load net {if:for:i#1.sva(3)} -pin  "reg(if:for:i#1.sva)" {Z(3)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva}
load net {if:for:i#1.sva(4)} -pin  "reg(if:for:i#1.sva)" {Z(4)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva}
load net {if:for:i#1.sva(5)} -pin  "reg(if:for:i#1.sva)" {Z(5)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva}
load net {if:for:i#1.sva(6)} -pin  "reg(if:for:i#1.sva)" {Z(6)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva}
load net {if:for:i#1.sva(7)} -pin  "reg(if:for:i#1.sva)" {Z(7)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva}
load net {if:for:i#1.sva(8)} -pin  "reg(if:for:i#1.sva)" {Z(8)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva}
load net {if:for:i#1.sva(9)} -pin  "reg(if:for:i#1.sva)" {Z(9)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva}
load net {if:for:i#1.sva(10)} -pin  "reg(if:for:i#1.sva)" {Z(10)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva}
load net {if:for:i#1.sva(11)} -pin  "reg(if:for:i#1.sva)" {Z(11)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva}
load net {if:for:i#1.sva(12)} -pin  "reg(if:for:i#1.sva)" {Z(12)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva}
load inst "if:for:acc" "add(7,0,8,-1,8)" "INTERFACE" -attr xrf 588 -attr oid 44 -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:acc} -attr area 9.262368 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(8,0,7,0,8)"
load net {if:for:i#1.sva#2(6)} -pin  "if:for:acc" {A(0)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/slc(if:for:i#1.sva#2).itm}
load net {if:for:i#1.sva#2(7)} -pin  "if:for:acc" {A(1)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/slc(if:for:i#1.sva#2).itm}
load net {if:for:i#1.sva#2(8)} -pin  "if:for:acc" {A(2)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/slc(if:for:i#1.sva#2).itm}
load net {if:for:i#1.sva#2(9)} -pin  "if:for:acc" {A(3)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/slc(if:for:i#1.sva#2).itm}
load net {if:for:i#1.sva#2(10)} -pin  "if:for:acc" {A(4)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/slc(if:for:i#1.sva#2).itm}
load net {if:for:i#1.sva#2(11)} -pin  "if:for:acc" {A(5)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/slc(if:for:i#1.sva#2).itm}
load net {if:for:i#1.sva#2(12)} -pin  "if:for:acc" {A(6)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/slc(if:for:i#1.sva#2).itm}
load net {PWR} -pin  "if:for:acc" {B(0)} -attr @path {/MemoryTester/MemoryTester:core/Cn75_8}
load net {GND} -pin  "if:for:acc" {B(1)} -attr @path {/MemoryTester/MemoryTester:core/Cn75_8}
load net {PWR} -pin  "if:for:acc" {B(2)} -attr @path {/MemoryTester/MemoryTester:core/Cn75_8}
load net {GND} -pin  "if:for:acc" {B(3)} -attr @path {/MemoryTester/MemoryTester:core/Cn75_8}
load net {PWR} -pin  "if:for:acc" {B(4)} -attr @path {/MemoryTester/MemoryTester:core/Cn75_8}
load net {PWR} -pin  "if:for:acc" {B(5)} -attr @path {/MemoryTester/MemoryTester:core/Cn75_8}
load net {GND} -pin  "if:for:acc" {B(6)} -attr @path {/MemoryTester/MemoryTester:core/Cn75_8}
load net {PWR} -pin  "if:for:acc" {B(7)} -attr @path {/MemoryTester/MemoryTester:core/Cn75_8}
load net {if:for:acc.itm(0)} -pin  "if:for:acc" {Z(0)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:acc.itm}
load net {if:for:acc.itm(1)} -pin  "if:for:acc" {Z(1)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:acc.itm}
load net {if:for:acc.itm(2)} -pin  "if:for:acc" {Z(2)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:acc.itm}
load net {if:for:acc.itm(3)} -pin  "if:for:acc" {Z(3)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:acc.itm}
load net {if:for:acc.itm(4)} -pin  "if:for:acc" {Z(4)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:acc.itm}
load net {if:for:acc.itm(5)} -pin  "if:for:acc" {Z(5)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:acc.itm}
load net {if:for:acc.itm(6)} -pin  "if:for:acc" {Z(6)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:acc.itm}
load net {if:for:acc.itm(7)} -pin  "if:for:acc" {Z(7)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:acc.itm}
load inst "reg(if:for:slc.itm)" "reg(1,1,0,0,1)" "INTERFACE" -attr xrf 589 -attr oid 45 -attr vt c -attr @path {/MemoryTester/MemoryTester:core/reg(if:for:slc.itm)}
load net {if:for:acc.itm(7)} -pin  "reg(if:for:slc.itm)" {D(0)} -attr vt c -attr @path {/MemoryTester/MemoryTester:core/if:for:slc.itm#1}
load net {GND} -pin  "reg(if:for:slc.itm)" {DRs(0)} -attr @path {/MemoryTester/MemoryTester:core/C0_1#1}
load net {clk} -pin  "reg(if:for:slc.itm)" {clk} -attr xrf 590 -attr oid 46 -attr @path {/MemoryTester/MemoryTester:core/clk}
load net {rst} -pin  "reg(if:for:slc.itm)" {Rs(0)} -attr @path {/MemoryTester/MemoryTester:core/rst}
load net {if:for:slc.itm} -pin  "reg(if:for:slc.itm)" {Z(0)} -attr @path {/MemoryTester/MemoryTester:core/if:for:slc.itm}
load inst "reg(if:for:i#1.sva#1)" "reg(13,1,0,0,1)" "INTERFACE" -attr xrf 591 -attr oid 47 -attr vt d -attr @path {/MemoryTester/MemoryTester:core/reg(if:for:i#1.sva#1)}
load net {if:for:i#1.sva#2(0)} -pin  "reg(if:for:i#1.sva#1)" {D(0)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(1)} -pin  "reg(if:for:i#1.sva#1)" {D(1)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(2)} -pin  "reg(if:for:i#1.sva#1)" {D(2)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(3)} -pin  "reg(if:for:i#1.sva#1)" {D(3)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(4)} -pin  "reg(if:for:i#1.sva#1)" {D(4)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(5)} -pin  "reg(if:for:i#1.sva#1)" {D(5)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(6)} -pin  "reg(if:for:i#1.sva#1)" {D(6)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(7)} -pin  "reg(if:for:i#1.sva#1)" {D(7)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(8)} -pin  "reg(if:for:i#1.sva#1)" {D(8)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(9)} -pin  "reg(if:for:i#1.sva#1)" {D(9)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(10)} -pin  "reg(if:for:i#1.sva#1)" {D(10)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(11)} -pin  "reg(if:for:i#1.sva#1)" {D(11)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(12)} -pin  "reg(if:for:i#1.sva#1)" {D(12)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#2}
load net {GND} -pin  "reg(if:for:i#1.sva#1)" {DRs(0)} -attr @path {/MemoryTester/MemoryTester:core/C0_13}
load net {GND} -pin  "reg(if:for:i#1.sva#1)" {DRs(1)} -attr @path {/MemoryTester/MemoryTester:core/C0_13}
load net {GND} -pin  "reg(if:for:i#1.sva#1)" {DRs(2)} -attr @path {/MemoryTester/MemoryTester:core/C0_13}
load net {GND} -pin  "reg(if:for:i#1.sva#1)" {DRs(3)} -attr @path {/MemoryTester/MemoryTester:core/C0_13}
load net {GND} -pin  "reg(if:for:i#1.sva#1)" {DRs(4)} -attr @path {/MemoryTester/MemoryTester:core/C0_13}
load net {GND} -pin  "reg(if:for:i#1.sva#1)" {DRs(5)} -attr @path {/MemoryTester/MemoryTester:core/C0_13}
load net {GND} -pin  "reg(if:for:i#1.sva#1)" {DRs(6)} -attr @path {/MemoryTester/MemoryTester:core/C0_13}
load net {GND} -pin  "reg(if:for:i#1.sva#1)" {DRs(7)} -attr @path {/MemoryTester/MemoryTester:core/C0_13}
load net {GND} -pin  "reg(if:for:i#1.sva#1)" {DRs(8)} -attr @path {/MemoryTester/MemoryTester:core/C0_13}
load net {GND} -pin  "reg(if:for:i#1.sva#1)" {DRs(9)} -attr @path {/MemoryTester/MemoryTester:core/C0_13}
load net {GND} -pin  "reg(if:for:i#1.sva#1)" {DRs(10)} -attr @path {/MemoryTester/MemoryTester:core/C0_13}
load net {GND} -pin  "reg(if:for:i#1.sva#1)" {DRs(11)} -attr @path {/MemoryTester/MemoryTester:core/C0_13}
load net {GND} -pin  "reg(if:for:i#1.sva#1)" {DRs(12)} -attr @path {/MemoryTester/MemoryTester:core/C0_13}
load net {clk} -pin  "reg(if:for:i#1.sva#1)" {clk} -attr xrf 592 -attr oid 48 -attr @path {/MemoryTester/MemoryTester:core/clk}
load net {rst} -pin  "reg(if:for:i#1.sva#1)" {Rs(0)} -attr @path {/MemoryTester/MemoryTester:core/rst}
load net {if:for:i#1.sva#1(0)} -pin  "reg(if:for:i#1.sva#1)" {Z(0)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#1}
load net {if:for:i#1.sva#1(1)} -pin  "reg(if:for:i#1.sva#1)" {Z(1)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#1}
load net {if:for:i#1.sva#1(2)} -pin  "reg(if:for:i#1.sva#1)" {Z(2)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#1}
load net {if:for:i#1.sva#1(3)} -pin  "reg(if:for:i#1.sva#1)" {Z(3)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#1}
load net {if:for:i#1.sva#1(4)} -pin  "reg(if:for:i#1.sva#1)" {Z(4)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#1}
load net {if:for:i#1.sva#1(5)} -pin  "reg(if:for:i#1.sva#1)" {Z(5)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#1}
load net {if:for:i#1.sva#1(6)} -pin  "reg(if:for:i#1.sva#1)" {Z(6)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#1}
load net {if:for:i#1.sva#1(7)} -pin  "reg(if:for:i#1.sva#1)" {Z(7)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#1}
load net {if:for:i#1.sva#1(8)} -pin  "reg(if:for:i#1.sva#1)" {Z(8)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#1}
load net {if:for:i#1.sva#1(9)} -pin  "reg(if:for:i#1.sva#1)" {Z(9)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#1}
load net {if:for:i#1.sva#1(10)} -pin  "reg(if:for:i#1.sva#1)" {Z(10)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#1}
load net {if:for:i#1.sva#1(11)} -pin  "reg(if:for:i#1.sva#1)" {Z(11)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#1}
load net {if:for:i#1.sva#1(12)} -pin  "reg(if:for:i#1.sva#1)" {Z(12)} -attr vt d -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#1}
load inst "if:for:acc#1" "add(13,-1,1,0,13)" "INTERFACE" -attr xrf 593 -attr oid 49 -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:acc#1} -attr area 14.000000 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(13,0,2,1,13)"
load net {if:for:i#1.sva(0)} -pin  "if:for:acc#1" {A(0)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva}
load net {if:for:i#1.sva(1)} -pin  "if:for:acc#1" {A(1)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva}
load net {if:for:i#1.sva(2)} -pin  "if:for:acc#1" {A(2)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva}
load net {if:for:i#1.sva(3)} -pin  "if:for:acc#1" {A(3)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva}
load net {if:for:i#1.sva(4)} -pin  "if:for:acc#1" {A(4)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva}
load net {if:for:i#1.sva(5)} -pin  "if:for:acc#1" {A(5)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva}
load net {if:for:i#1.sva(6)} -pin  "if:for:acc#1" {A(6)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva}
load net {if:for:i#1.sva(7)} -pin  "if:for:acc#1" {A(7)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva}
load net {if:for:i#1.sva(8)} -pin  "if:for:acc#1" {A(8)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva}
load net {if:for:i#1.sva(9)} -pin  "if:for:acc#1" {A(9)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva}
load net {if:for:i#1.sva(10)} -pin  "if:for:acc#1" {A(10)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva}
load net {if:for:i#1.sva(11)} -pin  "if:for:acc#1" {A(11)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva}
load net {if:for:i#1.sva(12)} -pin  "if:for:acc#1" {A(12)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva}
load net {PWR} -pin  "if:for:acc#1" {B(0)} -attr @path {/MemoryTester/MemoryTester:core/C1_1#2}
load net {if:for:i#1.sva#2(0)} -pin  "if:for:acc#1" {Z(0)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(1)} -pin  "if:for:acc#1" {Z(1)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(2)} -pin  "if:for:acc#1" {Z(2)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(3)} -pin  "if:for:acc#1" {Z(3)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(4)} -pin  "if:for:acc#1" {Z(4)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(5)} -pin  "if:for:acc#1" {Z(5)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(6)} -pin  "if:for:acc#1" {Z(6)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(7)} -pin  "if:for:acc#1" {Z(7)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(8)} -pin  "if:for:acc#1" {Z(8)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(9)} -pin  "if:for:acc#1" {Z(9)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(10)} -pin  "if:for:acc#1" {Z(10)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(11)} -pin  "if:for:acc#1" {Z(11)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(12)} -pin  "if:for:acc#1" {Z(12)} -attr vt dc -attr @path {/MemoryTester/MemoryTester:core/if:for:i#1.sva#2}
load inst "not#2" "not(1)" "INTERFACE" -attr @path {/MemoryTester/MemoryTester:core/not#2} -attr area 0.001000 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_not(1)"
load net {if:for:slc.itm} -pin  "not#2" {A(0)} -attr @path {/MemoryTester/MemoryTester:core/if:for:slc.itm}
load net {not#2.itm} -pin  "not#2" {Z(0)} -attr @path {/MemoryTester/MemoryTester:core/not#2.itm}
### END MODULE 

module new "MemoryTester" "orig"
load port {bit_out:rsc.z} output -attr xrf 594 -attr oid 50 -attr vt d -attr @path {/MemoryTester/bit_out:rsc.z}
load port {enabled:rsc.z} output -attr xrf 595 -attr oid 51 -attr vt d -attr @path {/MemoryTester/enabled:rsc.z}
load port {clk} input -attr xrf 596 -attr oid 52 -attr vt d -attr @path {/MemoryTester/clk}
load port {rst} input -attr xrf 597 -attr oid 53 -attr vt d -attr @path {/MemoryTester/rst}
load symbol "mgc_ioport.mgc_out_stdreg(1,1)" "INTERFACE" GEN boxcolor 0 \
     portBus {d(0:0)} input 1 {d(0)} \
     portBus {z(0:0)} output 1 {z(0)} \

load symbol "mgc_ioport.mgc_out_stdreg(2,1)" "INTERFACE" GEN boxcolor 0 \
     portBus {d(0:0)} input 1 {d(0)} \
     portBus {z(0:0)} output 1 {z(0)} \

load symbol "MemoryTester:core" "orig" GEN \
     port {clk#1} input \
     port {rst#1} input \
     port {bit_out:rsc:mgc_out_stdreg.d} output \
     port {enabled:rsc:mgc_out_stdreg.d} output \

load net {bit_out:rsc:mgc_out_stdreg.d#1} -attr xrf 598 -attr oid 54 -attr vt d
load net {enabled:rsc:mgc_out_stdreg.d#1} -attr xrf 599 -attr oid 55 -attr vt d
load net {bit_out:rsc.z} -attr xrf 600 -attr oid 56 -attr vt d
load net {bit_out:rsc.z} -port {bit_out:rsc.z} -attr xrf 601 -attr oid 57 -attr vt d -attr @path {/MemoryTester/bit_out:rsc.z}
load net {enabled:rsc.z} -attr xrf 602 -attr oid 58 -attr vt d
load net {enabled:rsc.z} -port {enabled:rsc.z} -attr xrf 603 -attr oid 59 -attr vt d -attr @path {/MemoryTester/enabled:rsc.z}
load net {clk} -attr xrf 604 -attr oid 60
load net {clk} -port {clk} -attr xrf 605 -attr oid 61
load net {rst} -attr xrf 606 -attr oid 62
load net {rst} -port {rst} -attr xrf 607 -attr oid 63
load inst "MemoryTester:core:inst" "MemoryTester:core" "orig" -attr xrf 608 -attr oid 64 -attr vt dc -attr @path {/MemoryTester/MemoryTester:core:inst} -attr area 40.114083 -attr delay 2.687838 -attr hier "/MemoryTester/MemoryTester:core" -pg 1 -lvl 5
load net {clk} -pin  "MemoryTester:core:inst" {clk#1} -attr xrf 609 -attr oid 65 -attr @path {/MemoryTester/clk}
load net {rst} -pin  "MemoryTester:core:inst" {rst#1} -attr xrf 610 -attr oid 66 -attr @path {/MemoryTester/rst}
load net {bit_out:rsc:mgc_out_stdreg.d#1} -pin  "MemoryTester:core:inst" {bit_out:rsc:mgc_out_stdreg.d} -attr xrf 611 -attr oid 67 -attr vt dc -attr @path {/MemoryTester/bit_out:rsc:mgc_out_stdreg.d}
load net {enabled:rsc:mgc_out_stdreg.d#1} -pin  "MemoryTester:core:inst" {enabled:rsc:mgc_out_stdreg.d} -attr xrf 612 -attr oid 68 -attr vt dc -attr @path {/MemoryTester/enabled:rsc:mgc_out_stdreg.d}
load inst "bit_out:rsc:mgc_out_stdreg" "mgc_ioport.mgc_out_stdreg(1,1)" "INTERFACE" -attr xrf 613 -attr oid 69 -attr vt d -attr @path {/MemoryTester/bit_out:rsc:mgc_out_stdreg} -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_ioport.mgc_out_stdreg(1,1)" -pg 1 -lvl 1002
load net {bit_out:rsc:mgc_out_stdreg.d#1} -pin  "bit_out:rsc:mgc_out_stdreg" {d(0)} -attr vt d -attr @path {/MemoryTester/bit_out:rsc:mgc_out_stdreg.d}
load net {bit_out:rsc.z} -pin  "bit_out:rsc:mgc_out_stdreg" {z(0)} -attr vt d -attr @path {/MemoryTester/bit_out:rsc.z}
load inst "enabled:rsc:mgc_out_stdreg" "mgc_ioport.mgc_out_stdreg(2,1)" "INTERFACE" -attr xrf 614 -attr oid 70 -attr vt d -attr @path {/MemoryTester/enabled:rsc:mgc_out_stdreg} -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_ioport.mgc_out_stdreg(2,1)" -pg 1 -lvl 1002
load net {enabled:rsc:mgc_out_stdreg.d#1} -pin  "enabled:rsc:mgc_out_stdreg" {d(0)} -attr vt d -attr @path {/MemoryTester/enabled:rsc:mgc_out_stdreg.d}
load net {enabled:rsc.z} -pin  "enabled:rsc:mgc_out_stdreg" {z(0)} -attr vt d -attr @path {/MemoryTester/enabled:rsc.z}
### END MODULE 

