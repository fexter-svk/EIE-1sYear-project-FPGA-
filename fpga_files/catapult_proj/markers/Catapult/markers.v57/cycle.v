// ----------------------------------------------------------------------
//  HLS HDL:        Verilog Netlister
//  HLS Version:    2011a.126 Production Release
//  HLS Date:       Wed Aug  8 00:52:07 PDT 2012
// 
//  Generated by:   mf2915@EEWS305-026
//  Generated date: Thu May 05 15:44:29 2016
// ----------------------------------------------------------------------

// 
// ------------------------------------------------------------------
//  Design Unit:    markers_core
// ------------------------------------------------------------------


module markers_core (
  vin, vga_xy, clk, en, arst_n, vout_rsc_mgc_out_stdreg_d
);
  input [89:0] vin;
  input [19:0] vga_xy;
  input clk;
  input en;
  input arst_n;
  output [29:0] vout_rsc_mgc_out_stdreg_d;
  reg [29:0] vout_rsc_mgc_out_stdreg_d;



  // Interconnect Declarations for Component Instantiations 
  always @(*)
  begin : core
    // Interconnect Declarations
    reg [3:0] acc_8_0_sva;
    reg [3:0] acc_8_1_sva;
    reg [9:0] red_xy_0_sva;
    reg [9:0] red_xy_1_sva;
    reg [9:0] blue_xy_0_sva;
    reg [9:0] blue_xy_1_sva;
    reg [9:0] red_xy_previous_0_sva;
    reg [9:0] red_xy_previous_1_sva;
    reg [9:0] blue_xy_previous_0_sva;
    reg [9:0] blue_xy_previous_1_sva;
    reg [5:0] acc_imod_sva;
    reg [3:0] if_acc_1_psp_sva;
    reg [3:0] if_acc_svs;
    reg unequal_tmp;
    reg land_sva_1;
    reg land_lpi_1_dfm;
    reg slc_svs;
    reg land_2_sva_1;
    reg land_2_lpi_1_dfm;
    reg [3:0] acc_8_0_sva_2;
    reg [3:0] acc_8_0_sva_dfm_1;
    reg aif_11_slc_svs;
    reg land_5_sva_1;
    reg land_5_lpi_1_dfm;
    reg land_4_sva_1;
    reg land_4_lpi_1_dfm;
    reg [3:0] acc_8_1_sva_2;
    reg [3:0] acc_8_1_sva_dfm_1;
    reg slc_2_svs;
    reg if_4_land_lpi_1_dfm;
    reg [9:0] red_xy_0_sva_2;
    reg [9:0] red_xy_1_sva_2;
    reg [9:0] red_xy_0_sva_dfm_2;
    reg [9:0] red_xy_1_sva_dfm_2;
    reg slc_3_svs;
    reg if_6_land_lpi_1_dfm;
    reg [9:0] blue_xy_0_sva_2;
    reg [9:0] blue_xy_1_sva_2;
    reg [9:0] blue_xy_0_sva_dfm_2;
    reg [9:0] blue_xy_1_sva_dfm_2;
    reg land_7_lpi_1_dfm;
    reg [10:0] deltax_red_acc_psp_sva;
    reg aif_29_slc_svs;
    reg aif_29_land_sva_1;
    reg [9:0] red_xy_previous_0_sva_dfm_1;
    reg [9:0] red_xy_previous_1_sva_dfm_1;
    reg [10:0] deltax_square_red_acc_psp_sva;
    reg land_10_lpi_1_dfm;
    reg [10:0] deltax_blue_acc_psp_sva;
    reg slc_5_svs;
    reg land_11_sva_1;
    reg [9:0] blue_xy_previous_0_sva_dfm_1;
    reg [9:0] blue_xy_previous_1_sva_dfm_1;
    reg [10:0] deltax_square_blue_acc_psp_sva;
    reg land_13_sva_1;
    reg land_13_lpi_1_dfm;
    reg [10:0] deltay_square_red_acc_psp_sva;
    reg aif_39_land_sva_1;
    reg land_15_sva_1;
    reg land_15_lpi_1_dfm;
    reg [10:0] deltay_square_blue_acc_psp_sva;
    reg aif_45_land_sva_1;
    reg land_14_lpi_1_dfm;
    reg [3:0] acc_8_0_sva_dfm_2;
    reg [3:0] acc_8_1_sva_dfm_2;
    reg [9:0] red_xy_0_sva_dfm_3;
    reg [9:0] red_xy_1_sva_dfm_3;
    reg [9:0] blue_xy_0_sva_dfm_3;
    reg [9:0] blue_xy_1_sva_dfm_3;
    reg land_2_lpi_1_dfm_1;
    reg land_4_lpi_1_dfm_1;
    reg [9:0] red_xy_0_sva_dfm_4;
    reg [9:0] red_xy_1_sva_dfm_4;
    reg [9:0] blue_xy_0_sva_dfm_4;
    reg [9:0] blue_xy_1_sva_dfm_4;
    reg land_7_lpi_1_dfm_1;
    reg [10:0] deltax_red_acc_psp_sva_1;
    reg aif_29_slc_svs_1;
    reg [9:0] red_xy_previous_1_sva_dfm_2;
    reg land_10_lpi_1_dfm_1;
    reg [10:0] deltax_blue_acc_psp_sva_1;
    reg slc_5_svs_1;
    reg [9:0] blue_xy_previous_1_sva_dfm_2;
    reg land_13_lpi_1_dfm_1;
    reg land_15_lpi_1_dfm_1;
    reg aif_29_slc_svs_st;
    reg slc_5_svs_st;
    reg land_13_lpi_1_dfm_st;
    reg land_15_lpi_1_dfm_st;
    reg land_2_lpi_1_dfm_st_1;
    reg land_4_lpi_1_dfm_st_1;
    reg aif_29_slc_svs_st_1;
    reg slc_5_svs_st_1;
    reg land_13_lpi_1_dfm_st_1;
    reg land_15_lpi_1_dfm_st_1;
    reg main_stage_0_2;
    reg main_stage_0_3;
    reg main_stage_0_4;
    reg if_9_or_cse;
    reg or_3_cse;
    reg and_6_cse;
    reg and_8_cse;

    reg[9:0] mux_13_nl;
    reg[9:0] mux_15_nl;
    reg[9:0] select_0;
    begin : core_rlpExit
      forever begin : core_rlp
        // C-Step 0 of Loop 'core_rlp'
        acc_8_0_sva = 4'b0;
        acc_8_1_sva = 4'b0;
        red_xy_0_sva = 10'b0;
        red_xy_1_sva = 10'b0;
        blue_xy_0_sva = 10'b0;
        blue_xy_1_sva = 10'b0;
        red_xy_previous_0_sva = 10'b0;
        red_xy_previous_1_sva = 10'b0;
        blue_xy_previous_0_sva = 10'b0;
        blue_xy_previous_1_sva = 10'b0;
        main_stage_0_2 = 1'b0;
        main_stage_0_3 = 1'b0;
        main_stage_0_4 = 1'b0;
        begin : mainExit
          forever begin : main
            // C-Step 0 of Loop 'main'
            begin : waitLoop0Exit
              forever begin : waitLoop0
                @(posedge clk or negedge ( arst_n ));
                if ( ~ arst_n )
                  disable core_rlpExit;
                if ( en )
                  disable waitLoop0Exit;
              end
            end
            // C-Step 1 of Loop 'main'
            if ( main_stage_0_4 ) begin
              aif_45_land_sva_1 = 1'b0;
              aif_39_land_sva_1 = 1'b0;
              if ( land_13_lpi_1_dfm_st_1 ) begin
                deltay_square_red_acc_psp_sva = readslicef_12_11_1((({1'b1 , (vga_xy[19:10])
                    , 1'b1}) + conv_u2s_11_12({(~ red_xy_previous_1_sva_dfm_2) ,
                    1'b1})));
                if ( deltay_square_red_acc_psp_sva[10] ) begin
                end
                else begin
                  aif_39_land_sva_1 = ~ (readslicef_11_1_10((({1'b1 , (~ (deltay_square_red_acc_psp_sva[9:0]))})
                      + 11'b101001)));
                end
              end
              if ( land_15_lpi_1_dfm_st_1 ) begin
                deltay_square_blue_acc_psp_sva = readslicef_12_11_1((({1'b1 , (vga_xy[19:10])
                    , 1'b1}) + conv_u2s_11_12({(~ blue_xy_previous_1_sva_dfm_2) ,
                    1'b1})));
                if ( deltay_square_blue_acc_psp_sva[10] ) begin
                end
                else begin
                  aif_45_land_sva_1 = ~ (readslicef_11_1_10((({1'b1 , (~ (deltay_square_blue_acc_psp_sva[9:0]))})
                      + 11'b101001)));
                end
              end
              land_14_lpi_1_dfm = aif_45_land_sva_1 & (~ (deltay_square_blue_acc_psp_sva[10]))
                  & land_15_lpi_1_dfm_1;
              vout_rsc_mgc_out_stdreg_d <= {(signext_10_1(aif_39_land_sva_1 & (~
                  (deltay_square_red_acc_psp_sva[10])) & land_13_lpi_1_dfm_1 & (~
                  land_14_lpi_1_dfm))) , 10'b0 , ({{9{land_14_lpi_1_dfm}}, land_14_lpi_1_dfm})};
            end
            if ( main_stage_0_3 ) begin
              land_15_sva_1 = 1'b0;
              land_13_sva_1 = 1'b0;
              land_11_sva_1 = 1'b0;
              aif_29_land_sva_1 = 1'b0;
              if ( aif_29_slc_svs_st_1 ) begin
                aif_29_land_sva_1 = readslicef_12_1_11((conv_s2s_11_12(~ deltax_red_acc_psp_sva_1)
                    + 12'b111111101101));
              end
              if_9_or_cse = land_7_lpi_1_dfm_1 | (aif_29_land_sva_1 & aif_29_slc_svs_1);
              red_xy_previous_0_sva_dfm_1 = MUX_v_10_2_2({red_xy_previous_0_sva ,
                  red_xy_0_sva_dfm_4}, if_9_or_cse);
              red_xy_previous_1_sva_dfm_1 = MUX_v_10_2_2({red_xy_previous_1_sva ,
                  red_xy_1_sva_dfm_4}, if_9_or_cse);
              deltax_square_red_acc_psp_sva = readslicef_12_11_1((({1'b1 , (vga_xy[9:0])
                  , 1'b1}) + conv_u2s_11_12({(~ red_xy_previous_0_sva_dfm_1) , 1'b1})));
              if ( slc_5_svs_st_1 ) begin
                land_11_sva_1 = readslicef_12_1_11((conv_s2s_11_12(~ deltax_blue_acc_psp_sva_1)
                    + 12'b111111101101));
              end
              or_3_cse = land_10_lpi_1_dfm_1 | (land_11_sva_1 & slc_5_svs_1);
              blue_xy_previous_0_sva_dfm_1 = MUX_v_10_2_2({blue_xy_previous_0_sva
                  , blue_xy_0_sva_dfm_4}, or_3_cse);
              blue_xy_previous_1_sva_dfm_1 = MUX_v_10_2_2({blue_xy_previous_1_sva
                  , blue_xy_1_sva_dfm_4}, or_3_cse);
              deltax_square_blue_acc_psp_sva = readslicef_12_11_1((({1'b1 , (vga_xy[9:0])
                  , 1'b1}) + conv_u2s_11_12({(~ blue_xy_previous_0_sva_dfm_1) , 1'b1})));
              if ( deltax_square_red_acc_psp_sva[10] ) begin
              end
              else begin
                land_13_sva_1 = ~ (readslicef_11_1_10((({1'b1 , (~ (deltax_square_red_acc_psp_sva[9:0]))})
                    + 11'b101001)));
              end
              land_13_lpi_1_dfm = land_13_sva_1 & (~ (deltax_square_red_acc_psp_sva[10]));
              land_13_lpi_1_dfm_st = land_13_lpi_1_dfm;
              if ( deltax_square_blue_acc_psp_sva[10] ) begin
              end
              else begin
                land_15_sva_1 = ~ (readslicef_11_1_10((({1'b1 , (~ (deltax_square_blue_acc_psp_sva[9:0]))})
                    + 11'b101001)));
              end
              land_15_lpi_1_dfm = land_15_sva_1 & (~ (deltax_square_blue_acc_psp_sva[10]));
              land_15_lpi_1_dfm_st = land_15_lpi_1_dfm;
              red_xy_previous_0_sva = red_xy_previous_0_sva_dfm_1;
              red_xy_previous_1_sva = red_xy_previous_1_sva_dfm_1;
              blue_xy_previous_0_sva = blue_xy_previous_0_sva_dfm_1;
              blue_xy_previous_1_sva = blue_xy_previous_1_sva_dfm_1;
            end
            if ( main_stage_0_2 ) begin
              blue_xy_1_sva_2 = 10'b0;
              blue_xy_0_sva_2 = 10'b0;
              red_xy_1_sva_2 = 10'b0;
              red_xy_0_sva_2 = 10'b0;
              acc_8_1_sva_2 = 4'b0;
              acc_8_0_sva_2 = 4'b0;
              if ( land_2_lpi_1_dfm_st_1 ) begin
                acc_8_0_sva_2 = acc_8_0_sva_dfm_2 + 4'b1;
              end
              acc_8_0_sva_dfm_1 = MUX_v_4_2_2({acc_8_0_sva_dfm_2 , acc_8_0_sva_2},
                  land_2_lpi_1_dfm_1);
              if ( land_4_lpi_1_dfm_st_1 ) begin
                acc_8_1_sva_2 = acc_8_1_sva_dfm_2 + 4'b1;
              end
              acc_8_1_sva_dfm_1 = MUX_v_4_2_2({acc_8_1_sva_dfm_2 , acc_8_1_sva_2},
                  land_4_lpi_1_dfm_1);
              slc_2_svs = readslicef_5_1_4((({1'b1 , (~ acc_8_0_sva_dfm_1)}) + 5'b101));
              if ( slc_2_svs ) begin
                if_4_land_lpi_1_dfm = ~((red_xy_1_sva_dfm_3[9]) | (red_xy_1_sva_dfm_3[8])
                    | (red_xy_1_sva_dfm_3[7]) | (red_xy_1_sva_dfm_3[6]) | (red_xy_1_sva_dfm_3[5])
                    | (red_xy_1_sva_dfm_3[4]) | (red_xy_1_sva_dfm_3[3]) | (red_xy_1_sva_dfm_3[2])
                    | (red_xy_1_sva_dfm_3[1]) | (red_xy_1_sva_dfm_3[0]) | (red_xy_0_sva_dfm_3[9])
                    | (red_xy_0_sva_dfm_3[8]) | (red_xy_0_sva_dfm_3[7]) | (red_xy_0_sva_dfm_3[6])
                    | (red_xy_0_sva_dfm_3[5]) | (red_xy_0_sva_dfm_3[4]) | (red_xy_0_sva_dfm_3[3])
                    | (red_xy_0_sva_dfm_3[2]) | (red_xy_0_sva_dfm_3[1]) | (red_xy_0_sva_dfm_3[0]));
                if ( if_4_land_lpi_1_dfm ) begin
                  red_xy_0_sva_2 = vga_xy[9:0];
                  red_xy_1_sva_2 = vga_xy[19:10];
                end
              end
              and_6_cse = if_4_land_lpi_1_dfm & slc_2_svs;
              red_xy_0_sva_dfm_2 = MUX_v_10_2_2({red_xy_0_sva_dfm_3 , red_xy_0_sva_2},
                  and_6_cse);
              red_xy_1_sva_dfm_2 = MUX_v_10_2_2({red_xy_1_sva_dfm_3 , red_xy_1_sva_2},
                  and_6_cse);
              slc_3_svs = readslicef_5_1_4((({1'b1 , (~ acc_8_1_sva_dfm_1)}) + 5'b101));
              if ( slc_3_svs ) begin
                if_6_land_lpi_1_dfm = ~((blue_xy_1_sva_dfm_3[9]) | (blue_xy_1_sva_dfm_3[8])
                    | (blue_xy_1_sva_dfm_3[7]) | (blue_xy_1_sva_dfm_3[6]) | (blue_xy_1_sva_dfm_3[5])
                    | (blue_xy_1_sva_dfm_3[4]) | (blue_xy_1_sva_dfm_3[3]) | (blue_xy_1_sva_dfm_3[2])
                    | (blue_xy_1_sva_dfm_3[1]) | (blue_xy_1_sva_dfm_3[0]) | (blue_xy_0_sva_dfm_3[9])
                    | (blue_xy_0_sva_dfm_3[8]) | (blue_xy_0_sva_dfm_3[7]) | (blue_xy_0_sva_dfm_3[6])
                    | (blue_xy_0_sva_dfm_3[5]) | (blue_xy_0_sva_dfm_3[4]) | (blue_xy_0_sva_dfm_3[3])
                    | (blue_xy_0_sva_dfm_3[2]) | (blue_xy_0_sva_dfm_3[1]) | (blue_xy_0_sva_dfm_3[0]));
                if ( if_6_land_lpi_1_dfm ) begin
                  blue_xy_0_sva_2 = vga_xy[9:0];
                  blue_xy_1_sva_2 = vga_xy[19:10];
                end
              end
              and_8_cse = if_6_land_lpi_1_dfm & slc_3_svs;
              blue_xy_0_sva_dfm_2 = MUX_v_10_2_2({blue_xy_0_sva_dfm_3 , blue_xy_0_sva_2},
                  and_8_cse);
              blue_xy_1_sva_dfm_2 = MUX_v_10_2_2({blue_xy_1_sva_dfm_3 , blue_xy_1_sva_2},
                  and_8_cse);
              land_7_lpi_1_dfm = ~((~((red_xy_0_sva_dfm_2[9]) | (red_xy_0_sva_dfm_2[8])
                  | (red_xy_0_sva_dfm_2[7]) | (red_xy_0_sva_dfm_2[6]) | (red_xy_0_sva_dfm_2[5])
                  | (red_xy_0_sva_dfm_2[4]) | (red_xy_0_sva_dfm_2[3]) | (red_xy_0_sva_dfm_2[2])
                  | (red_xy_0_sva_dfm_2[1]) | (red_xy_0_sva_dfm_2[0]))) | (red_xy_previous_0_sva[9])
                  | (red_xy_previous_0_sva[8]) | (red_xy_previous_0_sva[7]) | (red_xy_previous_0_sva[6])
                  | (red_xy_previous_0_sva[5]) | (red_xy_previous_0_sva[4]) | (red_xy_previous_0_sva[3])
                  | (red_xy_previous_0_sva[2]) | (red_xy_previous_0_sva[1]) | (red_xy_previous_0_sva[0]));
              mux_13_nl = MUX_v_10_2_2({red_xy_previous_0_sva , red_xy_0_sva_dfm_2},
                  land_7_lpi_1_dfm);
              deltax_red_acc_psp_sva = readslicef_12_11_1((({1'b1 , red_xy_0_sva_dfm_2
                  , 1'b1}) + conv_u2s_11_12({(~ (mux_13_nl)) , 1'b1})));
              aif_29_slc_svs = readslicef_10_1_9((conv_s2u_9_10(deltax_red_acc_psp_sva[10:2])
                  + 10'b1111111011));
              aif_29_slc_svs_st = aif_29_slc_svs;
              land_10_lpi_1_dfm = ~((~((blue_xy_0_sva_dfm_2[9]) | (blue_xy_0_sva_dfm_2[8])
                  | (blue_xy_0_sva_dfm_2[7]) | (blue_xy_0_sva_dfm_2[6]) | (blue_xy_0_sva_dfm_2[5])
                  | (blue_xy_0_sva_dfm_2[4]) | (blue_xy_0_sva_dfm_2[3]) | (blue_xy_0_sva_dfm_2[2])
                  | (blue_xy_0_sva_dfm_2[1]) | (blue_xy_0_sva_dfm_2[0]))) | (blue_xy_previous_0_sva[9])
                  | (blue_xy_previous_0_sva[8]) | (blue_xy_previous_0_sva[7]) | (blue_xy_previous_0_sva[6])
                  | (blue_xy_previous_0_sva[5]) | (blue_xy_previous_0_sva[4]) | (blue_xy_previous_0_sva[3])
                  | (blue_xy_previous_0_sva[2]) | (blue_xy_previous_0_sva[1]) | (blue_xy_previous_0_sva[0]));
              mux_15_nl = MUX_v_10_2_2({blue_xy_previous_0_sva , blue_xy_0_sva_dfm_2},
                  land_10_lpi_1_dfm);
              deltax_blue_acc_psp_sva = readslicef_12_11_1((({1'b1 , blue_xy_0_sva_dfm_2
                  , 1'b1}) + conv_u2s_11_12({(~ (mux_15_nl)) , 1'b1})));
              slc_5_svs = readslicef_10_1_9((conv_s2u_9_10(deltax_blue_acc_psp_sva[10:2])
                  + 10'b1111111011));
              slc_5_svs_st = slc_5_svs;
              acc_8_0_sva = acc_8_0_sva_dfm_1;
              acc_8_1_sva = acc_8_1_sva_dfm_1;
              red_xy_0_sva = red_xy_0_sva_dfm_2;
              red_xy_1_sva = red_xy_1_sva_dfm_2;
              blue_xy_0_sva = blue_xy_0_sva_dfm_2;
              blue_xy_1_sva = blue_xy_1_sva_dfm_2;
            end
            land_4_sva_1 = 1'b0;
            land_5_sva_1 = 1'b0;
            land_2_sva_1 = 1'b0;
            land_sva_1 = 1'b0;
            acc_imod_sva = conv_s2s_5_6(({3'b100 , (vga_xy[9:8])}) + conv_u2s_4_5(readslicef_5_4_1((conv_u2u_4_5({(vga_xy[2:0])
                , 1'b1}) + conv_u2u_4_5(vga_xy[6:3]))))) + conv_u2s_5_6({(conv_u2u_1_2(~
                (vga_xy[3])) + conv_u2u_1_2(~ (vga_xy[7]))) , 2'b0 , (readslicef_2_1_1((conv_u2u_1_2(vga_xy[7])
                + 2'b1)))});
            if_acc_1_psp_sva = (readslicef_5_4_1((({(~ (acc_imod_sva[3])) , 4'b1})
                + conv_s2u_3_5(acc_imod_sva[5:3])))) + ({1'b1 , (acc_imod_sva[2:0])});
            if_acc_svs = conv_s2u_1_4(if_acc_1_psp_sva[3]) + if_acc_1_psp_sva;
            unequal_tmp = (if_acc_svs[3]) | (if_acc_svs[2]) | (if_acc_svs[1]) | (if_acc_svs[0]);
            select_0 = vga_xy[19:10];
            case (select_0)
              10'b0 : begin
                land_sva_1 = ~((vga_xy[9]) | (vga_xy[8]) | (vga_xy[7]) | (vga_xy[6])
                    | (vga_xy[5]) | (vga_xy[4]) | (vga_xy[3]) | (vga_xy[2]) | (vga_xy[1])
                    | (vga_xy[0]));
              end
              default : begin
                // NOP
              end
            endcase
            land_lpi_1_dfm = land_sva_1 & (~((vga_xy[19]) | (vga_xy[18]) | (vga_xy[17])
                | (vga_xy[16]) | (vga_xy[15]) | (vga_xy[14]) | (vga_xy[13]) | (vga_xy[12])
                | (vga_xy[11]) | (vga_xy[10])));
            slc_svs = readslicef_7_1_6((conv_u2u_6_7(vin[29:24]) + 7'b1010011));
            if ( slc_svs ) begin
            end
            else begin
              land_2_sva_1 = ~ (readslicef_9_1_8((({1'b1 , (~ (vin[19:12]))}) + 9'b1100101)));
            end
            land_2_lpi_1_dfm = land_2_sva_1 & (~ slc_svs);
            aif_11_slc_svs = readslicef_9_1_8((({1'b1 , (~ (vin[29:22]))}) + 9'b1100101));
            if ( aif_11_slc_svs ) begin
            end
            else begin
              land_5_sva_1 = ~ (readslicef_9_1_8((({1'b1 , (~ (vin[19:12]))}) + 9'b1100101)));
            end
            land_5_lpi_1_dfm = land_5_sva_1 & (~ aif_11_slc_svs);
            if ( land_5_lpi_1_dfm ) begin
              land_4_sva_1 = ~ (readslicef_7_1_6((conv_u2u_6_7(vin[9:4]) + 7'b1010011)));
            end
            land_4_lpi_1_dfm = land_4_sva_1 & land_5_lpi_1_dfm;
            acc_8_0_sva_dfm_2 = acc_8_0_sva & ({{3{unequal_tmp}}, unequal_tmp});
            acc_8_1_sva_dfm_2 = acc_8_1_sva & ({{3{unequal_tmp}}, unequal_tmp});
            red_xy_0_sva_dfm_3 = red_xy_0_sva & (signext_10_1(~ land_lpi_1_dfm));
            red_xy_1_sva_dfm_3 = red_xy_1_sva & (signext_10_1(~ land_lpi_1_dfm));
            blue_xy_0_sva_dfm_3 = blue_xy_0_sva & (signext_10_1(~ land_lpi_1_dfm));
            blue_xy_1_sva_dfm_3 = blue_xy_1_sva & (signext_10_1(~ land_lpi_1_dfm));
            land_2_lpi_1_dfm_1 = land_2_lpi_1_dfm;
            land_4_lpi_1_dfm_1 = land_4_lpi_1_dfm;
            red_xy_0_sva_dfm_4 = red_xy_0_sva_dfm_2;
            red_xy_1_sva_dfm_4 = red_xy_1_sva_dfm_2;
            blue_xy_0_sva_dfm_4 = blue_xy_0_sva_dfm_2;
            blue_xy_1_sva_dfm_4 = blue_xy_1_sva_dfm_2;
            land_7_lpi_1_dfm_1 = land_7_lpi_1_dfm;
            deltax_red_acc_psp_sva_1 = deltax_red_acc_psp_sva;
            aif_29_slc_svs_1 = aif_29_slc_svs;
            red_xy_previous_1_sva_dfm_2 = red_xy_previous_1_sva_dfm_1;
            land_10_lpi_1_dfm_1 = land_10_lpi_1_dfm;
            deltax_blue_acc_psp_sva_1 = deltax_blue_acc_psp_sva;
            slc_5_svs_1 = slc_5_svs;
            blue_xy_previous_1_sva_dfm_2 = blue_xy_previous_1_sva_dfm_1;
            land_13_lpi_1_dfm_1 = land_13_lpi_1_dfm;
            land_15_lpi_1_dfm_1 = land_15_lpi_1_dfm;
            land_2_lpi_1_dfm_st_1 = land_2_lpi_1_dfm;
            land_4_lpi_1_dfm_st_1 = land_4_lpi_1_dfm;
            aif_29_slc_svs_st_1 = aif_29_slc_svs_st;
            slc_5_svs_st_1 = slc_5_svs_st;
            land_13_lpi_1_dfm_st_1 = land_13_lpi_1_dfm_st;
            land_15_lpi_1_dfm_st_1 = land_15_lpi_1_dfm_st;
            main_stage_0_4 = main_stage_0_3;
            main_stage_0_3 = main_stage_0_2;
            main_stage_0_2 = 1'b1;
          end
        end
      end
    end
    and_8_cse = 1'b0;
    and_6_cse = 1'b0;
    or_3_cse = 1'b0;
    if_9_or_cse = 1'b0;
    main_stage_0_4 = 1'b0;
    main_stage_0_3 = 1'b0;
    main_stage_0_2 = 1'b0;
    land_15_lpi_1_dfm_st_1 = 1'b0;
    land_13_lpi_1_dfm_st_1 = 1'b0;
    slc_5_svs_st_1 = 1'b0;
    aif_29_slc_svs_st_1 = 1'b0;
    land_4_lpi_1_dfm_st_1 = 1'b0;
    land_2_lpi_1_dfm_st_1 = 1'b0;
    land_15_lpi_1_dfm_st = 1'b0;
    land_13_lpi_1_dfm_st = 1'b0;
    slc_5_svs_st = 1'b0;
    aif_29_slc_svs_st = 1'b0;
    land_15_lpi_1_dfm_1 = 1'b0;
    land_13_lpi_1_dfm_1 = 1'b0;
    blue_xy_previous_1_sva_dfm_2 = 10'b0;
    slc_5_svs_1 = 1'b0;
    deltax_blue_acc_psp_sva_1 = 11'b0;
    land_10_lpi_1_dfm_1 = 1'b0;
    red_xy_previous_1_sva_dfm_2 = 10'b0;
    aif_29_slc_svs_1 = 1'b0;
    deltax_red_acc_psp_sva_1 = 11'b0;
    land_7_lpi_1_dfm_1 = 1'b0;
    blue_xy_1_sva_dfm_4 = 10'b0;
    blue_xy_0_sva_dfm_4 = 10'b0;
    red_xy_1_sva_dfm_4 = 10'b0;
    red_xy_0_sva_dfm_4 = 10'b0;
    land_4_lpi_1_dfm_1 = 1'b0;
    land_2_lpi_1_dfm_1 = 1'b0;
    blue_xy_1_sva_dfm_3 = 10'b0;
    blue_xy_0_sva_dfm_3 = 10'b0;
    red_xy_1_sva_dfm_3 = 10'b0;
    red_xy_0_sva_dfm_3 = 10'b0;
    acc_8_1_sva_dfm_2 = 4'b0;
    acc_8_0_sva_dfm_2 = 4'b0;
    land_14_lpi_1_dfm = 1'b0;
    aif_45_land_sva_1 = 1'b0;
    deltay_square_blue_acc_psp_sva = 11'b0;
    land_15_lpi_1_dfm = 1'b0;
    land_15_sva_1 = 1'b0;
    aif_39_land_sva_1 = 1'b0;
    deltay_square_red_acc_psp_sva = 11'b0;
    land_13_lpi_1_dfm = 1'b0;
    land_13_sva_1 = 1'b0;
    deltax_square_blue_acc_psp_sva = 11'b0;
    blue_xy_previous_1_sva_dfm_1 = 10'b0;
    blue_xy_previous_0_sva_dfm_1 = 10'b0;
    land_11_sva_1 = 1'b0;
    slc_5_svs = 1'b0;
    deltax_blue_acc_psp_sva = 11'b0;
    land_10_lpi_1_dfm = 1'b0;
    deltax_square_red_acc_psp_sva = 11'b0;
    red_xy_previous_1_sva_dfm_1 = 10'b0;
    red_xy_previous_0_sva_dfm_1 = 10'b0;
    aif_29_land_sva_1 = 1'b0;
    aif_29_slc_svs = 1'b0;
    deltax_red_acc_psp_sva = 11'b0;
    land_7_lpi_1_dfm = 1'b0;
    blue_xy_1_sva_dfm_2 = 10'b0;
    blue_xy_0_sva_dfm_2 = 10'b0;
    blue_xy_1_sva_2 = 10'b0;
    blue_xy_0_sva_2 = 10'b0;
    if_6_land_lpi_1_dfm = 1'b0;
    slc_3_svs = 1'b0;
    red_xy_1_sva_dfm_2 = 10'b0;
    red_xy_0_sva_dfm_2 = 10'b0;
    red_xy_1_sva_2 = 10'b0;
    red_xy_0_sva_2 = 10'b0;
    if_4_land_lpi_1_dfm = 1'b0;
    slc_2_svs = 1'b0;
    acc_8_1_sva_dfm_1 = 4'b0;
    acc_8_1_sva_2 = 4'b0;
    land_4_lpi_1_dfm = 1'b0;
    land_4_sva_1 = 1'b0;
    land_5_lpi_1_dfm = 1'b0;
    land_5_sva_1 = 1'b0;
    aif_11_slc_svs = 1'b0;
    acc_8_0_sva_dfm_1 = 4'b0;
    acc_8_0_sva_2 = 4'b0;
    land_2_lpi_1_dfm = 1'b0;
    land_2_sva_1 = 1'b0;
    slc_svs = 1'b0;
    land_lpi_1_dfm = 1'b0;
    land_sva_1 = 1'b0;
    unequal_tmp = 1'b0;
    if_acc_svs = 4'b0;
    if_acc_1_psp_sva = 4'b0;
    acc_imod_sva = 6'b0;
    blue_xy_previous_1_sva = 10'b0;
    blue_xy_previous_0_sva = 10'b0;
    red_xy_previous_1_sva = 10'b0;
    red_xy_previous_0_sva = 10'b0;
    blue_xy_1_sva = 10'b0;
    blue_xy_0_sva = 10'b0;
    red_xy_1_sva = 10'b0;
    red_xy_0_sva = 10'b0;
    acc_8_1_sva = 4'b0;
    acc_8_0_sva = 4'b0;
    vout_rsc_mgc_out_stdreg_d <= 30'b0;
  end


  function [10:0] readslicef_12_11_1;
    input [11:0] vector;
    reg [11:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_12_11_1 = tmp[10:0];
  end
  endfunction


  function [0:0] readslicef_11_1_10;
    input [10:0] vector;
    reg [10:0] tmp;
  begin
    tmp = vector >> 10;
    readslicef_11_1_10 = tmp[0:0];
  end
  endfunction


  function [9:0] signext_10_1;
    input [0:0] vector;
  begin
    signext_10_1= {{9{vector[0]}}, vector};
  end
  endfunction


  function [0:0] readslicef_12_1_11;
    input [11:0] vector;
    reg [11:0] tmp;
  begin
    tmp = vector >> 11;
    readslicef_12_1_11 = tmp[0:0];
  end
  endfunction


  function [9:0] MUX_v_10_2_2;
    input [19:0] inputs;
    input [0:0] sel;
    reg [9:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[19:10];
      end
      1'b1 : begin
        result = inputs[9:0];
      end
      default : begin
        result = inputs[19:10];
      end
    endcase
    MUX_v_10_2_2 = result;
  end
  endfunction


  function [3:0] MUX_v_4_2_2;
    input [7:0] inputs;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[7:4];
      end
      1'b1 : begin
        result = inputs[3:0];
      end
      default : begin
        result = inputs[7:4];
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction


  function [0:0] readslicef_5_1_4;
    input [4:0] vector;
    reg [4:0] tmp;
  begin
    tmp = vector >> 4;
    readslicef_5_1_4 = tmp[0:0];
  end
  endfunction


  function [0:0] readslicef_10_1_9;
    input [9:0] vector;
    reg [9:0] tmp;
  begin
    tmp = vector >> 9;
    readslicef_10_1_9 = tmp[0:0];
  end
  endfunction


  function [3:0] readslicef_5_4_1;
    input [4:0] vector;
    reg [4:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_5_4_1 = tmp[3:0];
  end
  endfunction


  function [0:0] readslicef_2_1_1;
    input [1:0] vector;
    reg [1:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_2_1_1 = tmp[0:0];
  end
  endfunction


  function [0:0] readslicef_7_1_6;
    input [6:0] vector;
    reg [6:0] tmp;
  begin
    tmp = vector >> 6;
    readslicef_7_1_6 = tmp[0:0];
  end
  endfunction


  function [0:0] readslicef_9_1_8;
    input [8:0] vector;
    reg [8:0] tmp;
  begin
    tmp = vector >> 8;
    readslicef_9_1_8 = tmp[0:0];
  end
  endfunction


  function signed [11:0] conv_u2s_11_12 ;
    input [10:0]  vector ;
  begin
    conv_u2s_11_12 = {1'b0, vector};
  end
  endfunction


  function signed [11:0] conv_s2s_11_12 ;
    input signed [10:0]  vector ;
  begin
    conv_s2s_11_12 = {vector[10], vector};
  end
  endfunction


  function  [9:0] conv_s2u_9_10 ;
    input signed [8:0]  vector ;
  begin
    conv_s2u_9_10 = {vector[8], vector};
  end
  endfunction


  function signed [5:0] conv_s2s_5_6 ;
    input signed [4:0]  vector ;
  begin
    conv_s2s_5_6 = {vector[4], vector};
  end
  endfunction


  function signed [4:0] conv_u2s_4_5 ;
    input [3:0]  vector ;
  begin
    conv_u2s_4_5 = {1'b0, vector};
  end
  endfunction


  function  [4:0] conv_u2u_4_5 ;
    input [3:0]  vector ;
  begin
    conv_u2u_4_5 = {1'b0, vector};
  end
  endfunction


  function signed [5:0] conv_u2s_5_6 ;
    input [4:0]  vector ;
  begin
    conv_u2s_5_6 = {1'b0, vector};
  end
  endfunction


  function  [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function  [4:0] conv_s2u_3_5 ;
    input signed [2:0]  vector ;
  begin
    conv_s2u_3_5 = {{2{vector[2]}}, vector};
  end
  endfunction


  function  [3:0] conv_s2u_1_4 ;
    input signed [0:0]  vector ;
  begin
    conv_s2u_1_4 = {{3{vector[0]}}, vector};
  end
  endfunction


  function  [6:0] conv_u2u_6_7 ;
    input [5:0]  vector ;
  begin
    conv_u2u_6_7 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    markers
//  Generated from file(s):
//    2) $PROJECT_HOME/../markers_source/blur.c
// ------------------------------------------------------------------


module markers (
  vin, vout_rsc_z, vga_xy, volume_rsc_z, clk, en, arst_n
);
  input [89:0] vin;
  output [29:0] vout_rsc_z;
  input [19:0] vga_xy;
  output [7:0] volume_rsc_z;
  input clk;
  input en;
  input arst_n;


  // Interconnect Declarations
  wire [29:0] vout_rsc_mgc_out_stdreg_d;


  // Interconnect Declarations for Component Instantiations 
  mgc_out_stdreg #(.rscid(2),
  .width(30)) vout_rsc_mgc_out_stdreg (
      .d(vout_rsc_mgc_out_stdreg_d),
      .z(vout_rsc_z)
    );
  mgc_out_stdreg #(.rscid(4),
  .width(8)) volume_rsc_mgc_out_stdreg (
      .d(8'b0),
      .z(volume_rsc_z)
    );
  markers_core markers_core_inst (
      .vin(vin),
      .vga_xy(vga_xy),
      .clk(clk),
      .en(en),
      .arst_n(arst_n),
      .vout_rsc_mgc_out_stdreg_d(vout_rsc_mgc_out_stdreg_d)
    );
endmodule



