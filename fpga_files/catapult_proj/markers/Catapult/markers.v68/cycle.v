// ----------------------------------------------------------------------
//  HLS HDL:        Verilog Netlister
//  HLS Version:    2011a.126 Production Release
//  HLS Date:       Wed Aug  8 00:52:07 PDT 2012
// 
//  Generated by:   mf2915@EEWS305-026
//  Generated date: Fri May 06 09:21:33 2016
// ----------------------------------------------------------------------

// 
// ------------------------------------------------------------------
//  Design Unit:    markers_core
// ------------------------------------------------------------------


module markers_core (
  vin, vga_xy, clk, en, arst_n, vout_rsc_mgc_out_stdreg_d
);
  input [89:0] vin;
  input [19:0] vga_xy;
  input clk;
  input en;
  input arst_n;
  output [29:0] vout_rsc_mgc_out_stdreg_d;
  reg [29:0] vout_rsc_mgc_out_stdreg_d;



  // Interconnect Declarations for Component Instantiations 
  always @(*)
  begin : core
    // Interconnect Declarations
    reg [3:0] acc_8_1_sva;
    reg [9:0] blue_xy_0_sva;
    reg [9:0] blue_xy_1_sva;
    reg [9:0] blue_xy_previous_0_sva;
    reg [9:0] blue_xy_previous_1_sva;
    reg [5:0] acc_imod_sva;
    reg [3:0] if_acc_1_psp_sva;
    reg [3:0] if_acc_svs;
    reg land_sva_1;
    reg land_lpi_1_dfm;
    reg aif_11_slc_svs;
    reg land_5_sva_1;
    reg land_5_lpi_1_dfm;
    reg aif_17_slc_svs;
    reg aif_17_land_sva_1;
    reg land_4_lpi_1_dfm;
    reg [3:0] acc_8_1_sva_2;
    reg [3:0] acc_8_1_sva_dfm_1;
    reg slc_3_svs;
    reg if_6_land_lpi_1_dfm;
    reg [9:0] blue_xy_0_sva_2;
    reg [9:0] blue_xy_1_sva_2;
    reg [9:0] blue_xy_0_sva_dfm_2;
    reg [9:0] blue_xy_1_sva_dfm_2;
    reg land_9_lpi_1_dfm;
    reg [9:0] blue_xy_previous_0_sva_dfm;
    reg [9:0] blue_xy_previous_1_sva_dfm;
    reg [10:0] deltax_square_blue_acc_psp_sva;
    reg aif_49_slc_svs;
    reg land_14_sva_1;
    reg land_14_lpi_1_dfm;
    reg [10:0] deltay_square_blue_acc_psp_sva;
    reg aif_57_land_sva_1;
    reg land_13_lpi_1_dfm;
    reg [3:0] acc_8_1_sva_dfm_2;
    reg [9:0] blue_xy_0_sva_dfm_3;
    reg [9:0] blue_xy_1_sva_dfm_3;
    reg land_4_lpi_1_dfm_1;
    reg [9:0] blue_xy_previous_1_sva_dfm_1;
    reg aif_49_slc_svs_1;
    reg aif_49_slc_svs_2;
    reg if_11_slc_blue_xy_previous_0_lpi_2_svs_itm_1;
    reg if_11_slc_blue_xy_previous_0_lpi_2_svs_1_itm_1;
    reg if_11_slc_blue_xy_previous_0_lpi_2_svs_2_itm_1;
    reg if_11_slc_blue_xy_previous_0_lpi_2_svs_3_itm_1;
    reg if_11_slc_blue_xy_previous_0_lpi_2_svs_4_itm_1;
    reg if_11_slc_blue_xy_previous_0_lpi_2_svs_5_itm_1;
    reg if_11_slc_blue_xy_previous_0_lpi_2_svs_6_itm_1;
    reg if_11_slc_blue_xy_previous_0_lpi_2_svs_7_itm_1;
    reg if_11_slc_blue_xy_previous_0_lpi_2_svs_8_itm_1;
    reg if_11_slc_blue_xy_previous_0_lpi_2_svs_9_itm_1;
    reg aif_51_aif_slc_itm;
    reg aif_51_aif_slc_itm_1;
    reg aif_51_aif_slc_itm_2;
    reg slc_8_itm;
    reg [9:0] deltax_square_blue_slc_deltax_square_blue_acc_psp_itm;
    reg [9:0] deltax_square_blue_slc_deltax_square_blue_acc_psp_itm_1;
    reg slc_7_itm;
    reg slc_7_itm_1;
    reg land_4_lpi_1_dfm_st_1;
    reg slc_8_itm_1;
    reg main_stage_0_2;
    reg main_stage_0_3;
    reg and_3_cse;

    reg[9:0] select_0;
    begin : core_rlpExit
      forever begin : core_rlp
        // C-Step 0 of Loop 'core_rlp'
        acc_8_1_sva = 4'b0;
        blue_xy_0_sva = 10'b0;
        blue_xy_1_sva = 10'b0;
        blue_xy_previous_0_sva = 10'b0;
        blue_xy_previous_1_sva = 10'b0;
        main_stage_0_2 = 1'b0;
        main_stage_0_3 = 1'b0;
        begin : mainExit
          forever begin : main
            // C-Step 0 of Loop 'main'
            begin : waitLoop0Exit
              forever begin : waitLoop0
                @(posedge clk or negedge ( arst_n ));
                if ( ~ arst_n )
                  disable core_rlpExit;
                if ( en )
                  disable waitLoop0Exit;
              end
            end
            // C-Step 1 of Loop 'main'
            if ( main_stage_0_3 ) begin
              aif_57_land_sva_1 = 1'b0;
              land_14_sva_1 = 1'b0;
              if ( slc_8_itm_1 ) begin
              end
              else begin
                land_14_sva_1 = ~ (readslicef_11_1_10((({1'b1 , (~ deltax_square_blue_slc_deltax_square_blue_acc_psp_itm_1)})
                    + 11'b101001)));
              end
              land_14_lpi_1_dfm = land_14_sva_1 & (~ slc_7_itm_1);
              if ( land_14_lpi_1_dfm ) begin
                deltay_square_blue_acc_psp_sva = readslicef_12_11_1((({1'b1 , (vga_xy[19:10])
                    , 1'b1}) + conv_u2s_11_12({(~ blue_xy_previous_1_sva_dfm_1) ,
                    1'b1})));
                if ( deltay_square_blue_acc_psp_sva[10] ) begin
                end
                else begin
                  aif_57_land_sva_1 = ~ (readslicef_11_1_10((({1'b1 , (~ (deltay_square_blue_acc_psp_sva[9:0]))})
                      + 11'b101001)));
                end
              end
              land_13_lpi_1_dfm = aif_57_land_sva_1 & (~ (deltay_square_blue_acc_psp_sva[10]))
                  & land_14_lpi_1_dfm;
              vout_rsc_mgc_out_stdreg_d <= {(signext_10_1(~(aif_51_aif_slc_itm_2
                  | aif_49_slc_svs_2 | land_13_lpi_1_dfm))) , 10'b0 , ({{9{land_13_lpi_1_dfm}},
                  land_13_lpi_1_dfm})};
              blue_xy_previous_1_sva = blue_xy_previous_1_sva_dfm_1;
            end
            if ( main_stage_0_2 ) begin
              blue_xy_1_sva_2 = 10'b0;
              blue_xy_0_sva_2 = 10'b0;
              acc_8_1_sva_2 = 4'b0;
              if ( land_4_lpi_1_dfm_st_1 ) begin
                acc_8_1_sva_2 = acc_8_1_sva_dfm_2 + 4'b1;
              end
              acc_8_1_sva_dfm_1 = MUX_v_4_2_2({acc_8_1_sva_dfm_2 , acc_8_1_sva_2},
                  land_4_lpi_1_dfm_1);
              slc_3_svs = readslicef_5_1_4((({1'b1 , (~ acc_8_1_sva_dfm_1)}) + 5'b101));
              if ( slc_3_svs ) begin
                if_6_land_lpi_1_dfm = ~((blue_xy_1_sva_dfm_3[9]) | (blue_xy_1_sva_dfm_3[8])
                    | (blue_xy_1_sva_dfm_3[7]) | (blue_xy_1_sva_dfm_3[6]) | (blue_xy_1_sva_dfm_3[5])
                    | (blue_xy_1_sva_dfm_3[4]) | (blue_xy_1_sva_dfm_3[3]) | (blue_xy_1_sva_dfm_3[2])
                    | (blue_xy_1_sva_dfm_3[1]) | (blue_xy_1_sva_dfm_3[0]) | (blue_xy_0_sva_dfm_3[9])
                    | (blue_xy_0_sva_dfm_3[8]) | (blue_xy_0_sva_dfm_3[7]) | (blue_xy_0_sva_dfm_3[6])
                    | (blue_xy_0_sva_dfm_3[5]) | (blue_xy_0_sva_dfm_3[4]) | (blue_xy_0_sva_dfm_3[3])
                    | (blue_xy_0_sva_dfm_3[2]) | (blue_xy_0_sva_dfm_3[1]) | (blue_xy_0_sva_dfm_3[0]));
                if ( if_6_land_lpi_1_dfm ) begin
                  blue_xy_0_sva_2 = vga_xy[9:0];
                  blue_xy_1_sva_2 = vga_xy[19:10];
                end
              end
              and_3_cse = if_6_land_lpi_1_dfm & slc_3_svs;
              blue_xy_0_sva_dfm_2 = MUX_v_10_2_2({blue_xy_0_sva_dfm_3 , blue_xy_0_sva_2},
                  and_3_cse);
              blue_xy_1_sva_dfm_2 = MUX_v_10_2_2({blue_xy_1_sva_dfm_3 , blue_xy_1_sva_2},
                  and_3_cse);
              land_9_lpi_1_dfm = ~((~((blue_xy_0_sva_dfm_2[9]) | (blue_xy_0_sva_dfm_2[8])
                  | (blue_xy_0_sva_dfm_2[7]) | (blue_xy_0_sva_dfm_2[6]) | (blue_xy_0_sva_dfm_2[5])
                  | (blue_xy_0_sva_dfm_2[4]) | (blue_xy_0_sva_dfm_2[3]) | (blue_xy_0_sva_dfm_2[2])
                  | (blue_xy_0_sva_dfm_2[1]) | (blue_xy_0_sva_dfm_2[0]))) | if_11_slc_blue_xy_previous_0_lpi_2_svs_itm_1
                  | if_11_slc_blue_xy_previous_0_lpi_2_svs_1_itm_1 | if_11_slc_blue_xy_previous_0_lpi_2_svs_2_itm_1
                  | if_11_slc_blue_xy_previous_0_lpi_2_svs_3_itm_1 | if_11_slc_blue_xy_previous_0_lpi_2_svs_4_itm_1
                  | if_11_slc_blue_xy_previous_0_lpi_2_svs_5_itm_1 | if_11_slc_blue_xy_previous_0_lpi_2_svs_6_itm_1
                  | if_11_slc_blue_xy_previous_0_lpi_2_svs_7_itm_1 | if_11_slc_blue_xy_previous_0_lpi_2_svs_8_itm_1
                  | if_11_slc_blue_xy_previous_0_lpi_2_svs_9_itm_1);
              blue_xy_previous_0_sva_dfm = MUX_v_10_2_2({blue_xy_previous_0_sva ,
                  blue_xy_0_sva_dfm_2}, land_9_lpi_1_dfm);
              blue_xy_previous_1_sva_dfm = MUX_v_10_2_2({blue_xy_previous_1_sva ,
                  blue_xy_1_sva_dfm_2}, land_9_lpi_1_dfm);
              deltax_square_blue_acc_psp_sva = readslicef_12_11_1((({1'b1 , (vga_xy[9:0])
                  , 1'b1}) + conv_u2s_11_12({(~ blue_xy_previous_0_sva_dfm) , 1'b1})));
              slc_8_itm = deltax_square_blue_acc_psp_sva[10];
              if ( deltax_square_blue_acc_psp_sva[10] ) begin
              end
              else begin
                deltax_square_blue_slc_deltax_square_blue_acc_psp_itm = deltax_square_blue_acc_psp_sva[9:0];
              end
              slc_7_itm = deltax_square_blue_acc_psp_sva[10];
              acc_8_1_sva = acc_8_1_sva_dfm_1;
              blue_xy_0_sva = blue_xy_0_sva_dfm_2;
              blue_xy_1_sva = blue_xy_1_sva_dfm_2;
              blue_xy_previous_0_sva = blue_xy_previous_0_sva_dfm;
            end
            aif_17_land_sva_1 = 1'b0;
            land_5_sva_1 = 1'b0;
            land_sva_1 = 1'b0;
            acc_imod_sva = conv_s2s_5_6(({3'b100 , (vga_xy[9:8])}) + conv_u2s_4_5(readslicef_5_4_1((conv_u2u_4_5({(vga_xy[2:0])
                , 1'b1}) + conv_u2u_4_5(vga_xy[6:3]))))) + conv_u2s_5_6({(conv_u2u_1_2(~
                (vga_xy[3])) + conv_u2u_1_2(~ (vga_xy[7]))) , 2'b0 , (readslicef_2_1_1((conv_u2u_1_2(vga_xy[7])
                + 2'b1)))});
            if_acc_1_psp_sva = (readslicef_5_4_1((({(~ (acc_imod_sva[3])) , 4'b1})
                + conv_s2u_3_5(acc_imod_sva[5:3])))) + ({1'b1 , (acc_imod_sva[2:0])});
            if_acc_svs = conv_s2u_1_4(if_acc_1_psp_sva[3]) + if_acc_1_psp_sva;
            select_0 = vga_xy[19:10];
            case (select_0)
              10'b0 : begin
                land_sva_1 = ~((vga_xy[9]) | (vga_xy[8]) | (vga_xy[7]) | (vga_xy[6])
                    | (vga_xy[5]) | (vga_xy[4]) | (vga_xy[3]) | (vga_xy[2]) | (vga_xy[1])
                    | (vga_xy[0]));
              end
              default : begin
                // NOP
              end
            endcase
            land_lpi_1_dfm = land_sva_1 & (~((vga_xy[19]) | (vga_xy[18]) | (vga_xy[17])
                | (vga_xy[16]) | (vga_xy[15]) | (vga_xy[14]) | (vga_xy[13]) | (vga_xy[12])
                | (vga_xy[11]) | (vga_xy[10])));
            aif_11_slc_svs = readslicef_11_1_10((({1'b1 , (~ (vin[29:20]))}) + 11'b101101001));
            if ( aif_11_slc_svs ) begin
            end
            else begin
              land_5_sva_1 = ~ (readslicef_11_1_10((({1'b1 , (~ (vin[19:10]))}) +
                  11'b101101001)));
            end
            land_5_lpi_1_dfm = land_5_sva_1 & (~ aif_11_slc_svs);
            if ( land_5_lpi_1_dfm ) begin
              aif_17_slc_svs = readslicef_8_1_7((conv_u2u_7_8(vin[9:3]) + 8'b11010011));
              if ( aif_17_slc_svs ) begin
              end
              else begin
                aif_17_land_sva_1 = ~ (readslicef_11_1_10((({1'b1 , (~ (vin[9:0]))})
                    + 11'b1111111101)));
              end
            end
            land_4_lpi_1_dfm = aif_17_land_sva_1 & (~ aif_17_slc_svs) & land_5_lpi_1_dfm;
            aif_49_slc_svs = readslicef_11_1_10((({1'b1 , (~ (vga_xy[9:0]))}) + 11'b101001));
            if ( aif_49_slc_svs ) begin
            end
            else begin
              aif_51_aif_slc_itm = readslicef_11_1_10((({1'b1 , (~ (vga_xy[19:10]))})
                  + 11'b101001));
            end
            acc_8_1_sva_dfm_2 = acc_8_1_sva & (signext_4_1((if_acc_svs[3]) | (if_acc_svs[2])
                | (if_acc_svs[1]) | (if_acc_svs[0])));
            blue_xy_0_sva_dfm_3 = blue_xy_0_sva & (signext_10_1(~ land_lpi_1_dfm));
            blue_xy_1_sva_dfm_3 = blue_xy_1_sva & (signext_10_1(~ land_lpi_1_dfm));
            land_4_lpi_1_dfm_1 = land_4_lpi_1_dfm;
            blue_xy_previous_1_sva_dfm_1 = blue_xy_previous_1_sva_dfm;
            aif_49_slc_svs_2 = aif_49_slc_svs_1;
            aif_49_slc_svs_1 = aif_49_slc_svs;
            if_11_slc_blue_xy_previous_0_lpi_2_svs_itm_1 = blue_xy_previous_0_sva[9];
            if_11_slc_blue_xy_previous_0_lpi_2_svs_1_itm_1 = blue_xy_previous_0_sva[8];
            if_11_slc_blue_xy_previous_0_lpi_2_svs_2_itm_1 = blue_xy_previous_0_sva[7];
            if_11_slc_blue_xy_previous_0_lpi_2_svs_3_itm_1 = blue_xy_previous_0_sva[6];
            if_11_slc_blue_xy_previous_0_lpi_2_svs_4_itm_1 = blue_xy_previous_0_sva[5];
            if_11_slc_blue_xy_previous_0_lpi_2_svs_5_itm_1 = blue_xy_previous_0_sva[4];
            if_11_slc_blue_xy_previous_0_lpi_2_svs_6_itm_1 = blue_xy_previous_0_sva[3];
            if_11_slc_blue_xy_previous_0_lpi_2_svs_7_itm_1 = blue_xy_previous_0_sva[2];
            if_11_slc_blue_xy_previous_0_lpi_2_svs_8_itm_1 = blue_xy_previous_0_sva[1];
            if_11_slc_blue_xy_previous_0_lpi_2_svs_9_itm_1 = blue_xy_previous_0_sva[0];
            aif_51_aif_slc_itm_2 = aif_51_aif_slc_itm_1;
            aif_51_aif_slc_itm_1 = aif_51_aif_slc_itm;
            deltax_square_blue_slc_deltax_square_blue_acc_psp_itm_1 = deltax_square_blue_slc_deltax_square_blue_acc_psp_itm;
            slc_7_itm_1 = slc_7_itm;
            land_4_lpi_1_dfm_st_1 = land_4_lpi_1_dfm;
            slc_8_itm_1 = slc_8_itm;
            main_stage_0_3 = main_stage_0_2;
            main_stage_0_2 = 1'b1;
          end
        end
      end
    end
    and_3_cse = 1'b0;
    main_stage_0_3 = 1'b0;
    main_stage_0_2 = 1'b0;
    slc_8_itm_1 = 1'b0;
    land_4_lpi_1_dfm_st_1 = 1'b0;
    slc_7_itm_1 = 1'b0;
    slc_7_itm = 1'b0;
    deltax_square_blue_slc_deltax_square_blue_acc_psp_itm_1 = 10'b0;
    deltax_square_blue_slc_deltax_square_blue_acc_psp_itm = 10'b0;
    slc_8_itm = 1'b0;
    aif_51_aif_slc_itm_2 = 1'b0;
    aif_51_aif_slc_itm_1 = 1'b0;
    aif_51_aif_slc_itm = 1'b0;
    if_11_slc_blue_xy_previous_0_lpi_2_svs_9_itm_1 = 1'b0;
    if_11_slc_blue_xy_previous_0_lpi_2_svs_8_itm_1 = 1'b0;
    if_11_slc_blue_xy_previous_0_lpi_2_svs_7_itm_1 = 1'b0;
    if_11_slc_blue_xy_previous_0_lpi_2_svs_6_itm_1 = 1'b0;
    if_11_slc_blue_xy_previous_0_lpi_2_svs_5_itm_1 = 1'b0;
    if_11_slc_blue_xy_previous_0_lpi_2_svs_4_itm_1 = 1'b0;
    if_11_slc_blue_xy_previous_0_lpi_2_svs_3_itm_1 = 1'b0;
    if_11_slc_blue_xy_previous_0_lpi_2_svs_2_itm_1 = 1'b0;
    if_11_slc_blue_xy_previous_0_lpi_2_svs_1_itm_1 = 1'b0;
    if_11_slc_blue_xy_previous_0_lpi_2_svs_itm_1 = 1'b0;
    aif_49_slc_svs_2 = 1'b0;
    aif_49_slc_svs_1 = 1'b0;
    blue_xy_previous_1_sva_dfm_1 = 10'b0;
    land_4_lpi_1_dfm_1 = 1'b0;
    blue_xy_1_sva_dfm_3 = 10'b0;
    blue_xy_0_sva_dfm_3 = 10'b0;
    acc_8_1_sva_dfm_2 = 4'b0;
    land_13_lpi_1_dfm = 1'b0;
    aif_57_land_sva_1 = 1'b0;
    deltay_square_blue_acc_psp_sva = 11'b0;
    land_14_lpi_1_dfm = 1'b0;
    land_14_sva_1 = 1'b0;
    aif_49_slc_svs = 1'b0;
    deltax_square_blue_acc_psp_sva = 11'b0;
    blue_xy_previous_1_sva_dfm = 10'b0;
    blue_xy_previous_0_sva_dfm = 10'b0;
    land_9_lpi_1_dfm = 1'b0;
    blue_xy_1_sva_dfm_2 = 10'b0;
    blue_xy_0_sva_dfm_2 = 10'b0;
    blue_xy_1_sva_2 = 10'b0;
    blue_xy_0_sva_2 = 10'b0;
    if_6_land_lpi_1_dfm = 1'b0;
    slc_3_svs = 1'b0;
    acc_8_1_sva_dfm_1 = 4'b0;
    acc_8_1_sva_2 = 4'b0;
    land_4_lpi_1_dfm = 1'b0;
    aif_17_land_sva_1 = 1'b0;
    aif_17_slc_svs = 1'b0;
    land_5_lpi_1_dfm = 1'b0;
    land_5_sva_1 = 1'b0;
    aif_11_slc_svs = 1'b0;
    land_lpi_1_dfm = 1'b0;
    land_sva_1 = 1'b0;
    if_acc_svs = 4'b0;
    if_acc_1_psp_sva = 4'b0;
    acc_imod_sva = 6'b0;
    blue_xy_previous_1_sva = 10'b0;
    blue_xy_previous_0_sva = 10'b0;
    blue_xy_1_sva = 10'b0;
    blue_xy_0_sva = 10'b0;
    acc_8_1_sva = 4'b0;
    vout_rsc_mgc_out_stdreg_d <= 30'b0;
  end


  function [0:0] readslicef_11_1_10;
    input [10:0] vector;
    reg [10:0] tmp;
  begin
    tmp = vector >> 10;
    readslicef_11_1_10 = tmp[0:0];
  end
  endfunction


  function [10:0] readslicef_12_11_1;
    input [11:0] vector;
    reg [11:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_12_11_1 = tmp[10:0];
  end
  endfunction


  function [9:0] signext_10_1;
    input [0:0] vector;
  begin
    signext_10_1= {{9{vector[0]}}, vector};
  end
  endfunction


  function [3:0] MUX_v_4_2_2;
    input [7:0] inputs;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[7:4];
      end
      1'b1 : begin
        result = inputs[3:0];
      end
      default : begin
        result = inputs[7:4];
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction


  function [0:0] readslicef_5_1_4;
    input [4:0] vector;
    reg [4:0] tmp;
  begin
    tmp = vector >> 4;
    readslicef_5_1_4 = tmp[0:0];
  end
  endfunction


  function [9:0] MUX_v_10_2_2;
    input [19:0] inputs;
    input [0:0] sel;
    reg [9:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[19:10];
      end
      1'b1 : begin
        result = inputs[9:0];
      end
      default : begin
        result = inputs[19:10];
      end
    endcase
    MUX_v_10_2_2 = result;
  end
  endfunction


  function [3:0] readslicef_5_4_1;
    input [4:0] vector;
    reg [4:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_5_4_1 = tmp[3:0];
  end
  endfunction


  function [0:0] readslicef_2_1_1;
    input [1:0] vector;
    reg [1:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_2_1_1 = tmp[0:0];
  end
  endfunction


  function [0:0] readslicef_8_1_7;
    input [7:0] vector;
    reg [7:0] tmp;
  begin
    tmp = vector >> 7;
    readslicef_8_1_7 = tmp[0:0];
  end
  endfunction


  function [3:0] signext_4_1;
    input [0:0] vector;
  begin
    signext_4_1= {{3{vector[0]}}, vector};
  end
  endfunction


  function signed [11:0] conv_u2s_11_12 ;
    input [10:0]  vector ;
  begin
    conv_u2s_11_12 = {1'b0, vector};
  end
  endfunction


  function signed [5:0] conv_s2s_5_6 ;
    input signed [4:0]  vector ;
  begin
    conv_s2s_5_6 = {vector[4], vector};
  end
  endfunction


  function signed [4:0] conv_u2s_4_5 ;
    input [3:0]  vector ;
  begin
    conv_u2s_4_5 = {1'b0, vector};
  end
  endfunction


  function  [4:0] conv_u2u_4_5 ;
    input [3:0]  vector ;
  begin
    conv_u2u_4_5 = {1'b0, vector};
  end
  endfunction


  function signed [5:0] conv_u2s_5_6 ;
    input [4:0]  vector ;
  begin
    conv_u2s_5_6 = {1'b0, vector};
  end
  endfunction


  function  [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function  [4:0] conv_s2u_3_5 ;
    input signed [2:0]  vector ;
  begin
    conv_s2u_3_5 = {{2{vector[2]}}, vector};
  end
  endfunction


  function  [3:0] conv_s2u_1_4 ;
    input signed [0:0]  vector ;
  begin
    conv_s2u_1_4 = {{3{vector[0]}}, vector};
  end
  endfunction


  function  [7:0] conv_u2u_7_8 ;
    input [6:0]  vector ;
  begin
    conv_u2u_7_8 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    markers
//  Generated from file(s):
//    2) $PROJECT_HOME/../markers_source/blur.c
// ------------------------------------------------------------------


module markers (
  vin, vout_rsc_z, vga_xy, volume_rsc_z, clk, en, arst_n
);
  input [89:0] vin;
  output [29:0] vout_rsc_z;
  input [19:0] vga_xy;
  output [7:0] volume_rsc_z;
  input clk;
  input en;
  input arst_n;


  // Interconnect Declarations
  wire [29:0] vout_rsc_mgc_out_stdreg_d;


  // Interconnect Declarations for Component Instantiations 
  mgc_out_stdreg #(.rscid(2),
  .width(30)) vout_rsc_mgc_out_stdreg (
      .d(vout_rsc_mgc_out_stdreg_d),
      .z(vout_rsc_z)
    );
  mgc_out_stdreg #(.rscid(4),
  .width(8)) volume_rsc_mgc_out_stdreg (
      .d(8'b0),
      .z(volume_rsc_z)
    );
  markers_core markers_core_inst (
      .vin(vin),
      .vga_xy(vga_xy),
      .clk(clk),
      .en(en),
      .arst_n(arst_n),
      .vout_rsc_mgc_out_stdreg_d(vout_rsc_mgc_out_stdreg_d)
    );
endmodule



